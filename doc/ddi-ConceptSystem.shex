PREFIX ddi: <http://ddi-alliance.org/ns/#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX umld: <http://schema.omg.org/spec/UML/2.1/uml.xml#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX shexmi: <http://www.w3.org/ns/shex-xmi#>
PREFIX mark: <https://github.com/commonmark/commonmark.js>

ddi:ConceptSystem EXTENDS @ddi:AnnotatedIdentifiable {
  ddi:type @ddi:CollectionType ? // shexmi:comment """Whether the collection is a bag or a set: a bag is a collection with duplicates allowed, a set is a collection without duplicates.""";
  ddi:name @ddi:ObjectName * // shexmi:comment """A linguistic signifier. Human understandable name (word, phrase, or mnemonic) that reflects the ISO/IEC 11179-5 naming principles. If more than one name is provided provide a context to differentiate usage.""";
  ddi:purpose @ddi:InternationalStructuredString ? // shexmi:comment """Explanation of the intent of some decision or object. Supports the use of multiple languages and structured text.""";
  ddi:contains {
    ddi:index xsd:integer ? // shexmi:comment """Index value of member in an ordered array""";
    ddi:member @ddi:Concept *;
  } * // shexmi:comment """MemberIndicator Allows for the identification of the member and optionally provides an index for the member within an ordered array""";
  ddi:isOrdered xsd:boolean ?;
  ddi:isStructuredBy  EXTENDS @ddi:Identifiable {
      ddi:hasRelationSpecification @ddi:RelationSpecification ;
      ddi:semantic @ddi:ExternalControlledVocabularyEntry ?;
      ddi:totality @ddi:TotalityType ?;
      ddi:hasMemberRelation  {
          ddi:hasRelationSepcification @ddi:RelationSpecification ;
          ddi:semantic @ddi:ExternalControlledVocabularyEntry ?;
          ddi:totality @ddi:TotalityType ?;
          ddi:source @ddi:Concept *;
          ddi:target @ddi:Concept *;
      } *;
  } *;
  ddi:definingConcept @ddi:Concept *;
} // rdfs:definedBy <http://lion.ddialliance.org/ddiobjects/relationspecification>
 // shexmi:package "Conceptual"
 // shexmi:comment """Definition
============
A set of Concepts structured by the relations among them. [GSIM 1.1] 

Examples
==========
1) Concept of Sex: Male, Female, Other 2) Concept of Household Relationship: Household Head, Spouse of Household Head, Child of Household Head, Unrelated Household Member, etc.  

Explanatory notes
===================
Note that this structure can be used to structure Concept, Classification, Universe, Population, Unit Type and any other class that extends from Concept.

DDI 3.2 mapping
=================
c:ConceptSchemeType

GSIM mapping
==============
Concept System
"""^^mark:

ddi:Concept EXTENDS @ddi:AnnotatedIdentifiable {
  ddi:name @ddi:ObjectName *;
  ddi:definition @ddi:InternationalStructuredString ?;
} // shexmi:package "Conceptual"
 // shexmi:comment """Definition
============
Unit of thought differentiated by characteristics [GSIM 1.1]

Examples
==========
Poverty, Income, Household relationship, Family, Gender, Business Establishment, Satisfaction, etc.

Explanatory notes
===================
Many DDI4 classes are subtypes of the Concept class including Category, Universe, UnitType, ConceptualVariable. This class realizes the pattern class Signified and as such a Concept can be denoted by a Sign.

DDI 3.2 mapping
=================
c:ConceptType

GSIM mapping
==============
Concept
"""^^mark:

ABSTRACT ddi:AnnotatedIdentifiable EXTENDS @ddi:Identifiable {
  ddi:hasAnnotation @ddi:Annotation ?;
  ddi:relatedMaterial @ddi:ExternalMaterial *;
} // shexmi:package "Identification"
 // shexmi:comment """Definition
============
Used to identify objects for purposes of internal and/or external referencing. Elements of this type are versioned. Provides identification and administrative metadata about the object. Adds optional annotation. Use this as the extension base for First Order Classes that contain intellectual content that needs to be discoverable in its own right.
"""^^mark:

ABSTRACT ddi:Identifiable {
  ddi:agency xsd:string ;
  ddi:id xsd:string ;
  ddi:version xsd:string ;
  ddi:versionResponsibility xsd:string ?;
  ddi:versionRationale xsd:string ?;
  ddi:versionDate ddi:IsoDateType ?;
  ddi:isUniversallyUnique xsd:boolean ;
  ddi:isPersistent xsd:boolean ;
  ddi:localId  {
      ddi:localIdValue xsd:string ;
      ddi:localIdType xsd:string ;
      ddi:localIdVersion xsd:string ?;
  } *;
  ddi:basedOnObject  {
      ddi:basedOnRationaleDescription @ddi:InternationalString ?;
      ddi:basedOnRationaleCode @ddi:ExternalControlledVocabularyEntry ?;
      ddi:basedOn @ddi:Identifiable *;
  } ?;
} // shexmi:package "Identification"
 // shexmi:comment """Definition
============
Used to identify objects for purposes of internal and/or external referencing. Elements of this type are versioned. Provides identification and administrative metadata about the object. Adds optional annotation. Use this as the extension base for First Order Classes that contain intellectual content that needs to be discoverable in its own right.
"""^^mark:

ddi:ObjectName {
  ddi:content xsd:string ?;
  ddi:context @ddi:ExternalControlledVocabularyEntry ?;
} // shexmi:package "ComplexDataTypes"
 // shexmi:comment """Definition
============
A standard means of expressing a Name for a class object.  A linguistic signifier. Human understandable name (word, phrase, or mnemonic) that reflects the ISO/IEC 11179-5 naming principles.

Explanatory notes
===================
USE in Model: In general the property name should be "name" as it is the name of the class object which contains it. Use a specific name (i.e. xxxName) only when naming something other than the class object which contains it.

DDI 3.2 mapping
=================
r:NameType
"""^^mark:

ddi:ExternalControlledVocabularyEntry {
  ddi:controlledVocabularyID xsd:string ?;
  ddi:controlledVocabularyName xsd:string ?;
  ddi:controlledVocabularyAgencyName xsd:string ?;
  ddi:controlledVocabularyVersionID xsd:string ?;
  ddi:otherValue xsd:string ?;
  ddi:uri ddi:anyURI ?;
  ddi:content xsd:string ?;
  ddi:language ddi:language ?;
} // shexmi:package "ComplexDataTypes"
 // shexmi:comment """Definition
============
A tightly bound pair of items from an external controlled vocabulary. The extent property describes the extent to which the parent term applies for the specific case. 

Examples
==========
When used to assign a role to an actor within a specific activity this term would express the degree of contribution. Contributor with Role=Editor and extent=Lead.

Alternatively. the term might be a controlled vocabulary from a list of controlled vocabularies, e.g. the Generic Longitudinal Business Process Model (GLBPM) in a list that could include other business process model frameworks. In this context the extent becomes the name of a business process model task, e.g. "integrate data" from the GLBPM.
"""^^mark:

ddi:InternationalStructuredString {
  ddi:languageSpecificStructuredString @ddi:LanguageSpecificStructuredStringType +;
} // shexmi:package "ComplexDataTypes"
 // shexmi:comment """Definition
============
Packaging structure for multiple language versions of the same string content, for objects that allow for internal formatting using XHTML tags. Where an element of this type is repeatable, the expectation is that each repetition contains different content, each of which can be expressed in multiple languages.

DDI 3.2 mapping
=================
r:StructuredStringType
"""^^mark:

ddi:LanguageSpecificStructuredStringType {
  ddi:formattedContent xsd:string +;
  ddi:language ddi:language ?;
  ddi:isTranslated xsd:boolean ?;
  ddi:isTranslatable xsd:boolean ?;
  ddi:translationSourceLanguage ddi:language *;
  ddi:translationDate umld:UnlimitedNatural ?;
  ddi:isPlainText xsd:boolean ?;
} // shexmi:package "ComplexDataTypes"
 // shexmi:comment """Definition
============
Relation between components in a layout as specified by RelationSpecification

Explanatory notes
===================
A layout may consist of other components in addition to instance variables. In the RDF Data Cube Vocabulary at https://dvcs.w3.org/hg/gld/raw-file/29a3dd6dc12c/data-cube/index.html#dsd in addition to instance variables functioning in various roles (dimension, measure, attribute) there are categories or more precisely sdmx-codes. In the RDF Data Cube Vocabulary sdmx-codes are associated with observations together with their associated dimensions. These observations contain measurements that in turn are rolled up into aggregates.

So at least when it comes to data cubes both instance variables AND their codes need to be represented in the layout mix. The way this works in LayoutComponentRelation with data cubes is that instance variables as dimensions have codes and codes participate in instance variables as measurements.

By way of an example see: https://ddi-alliance.atlassian.net/wiki/download/attachments/491696/Data%20Cube%20Graph%20for%20RDF%20Data%20Cube%20Vocabulary%20Example.png?api=v2

"""^^mark:

ddi:RelationSpecification [
  ddi:Unordered
  ddi:List
  ddi:ParentChild
  ddi:WholePart
  ddi:AcyclicPrecedence
  ddi:Equivalence
  ddi:GeneralSpecfic
]
 // shexmi:package "ComplexDataTypes"

ddi:CollectionType [
  ddi:Bag
  ddi:Set
]
 // shexmi:package "EnumerationsRegExp"

ddi:TotalityType [
  ddi:Total
  ddi:Partial
  ddi:Unknown
]
 // shexmi:package "EnumerationsRegExp"

ddi:ShapeCoded [
  ddi:Rectangle
  ddi:Circle
  ddi:Polygon
  ddi:LinearRing
]
 // shexmi:package "EnumerationsRegExp"

ddi:InternationalString {
  ddi:languageSpecificString {
    ddi:content xsd:string ;
    ddi:language xsd:language ?;
    ddi:isTranslated xsd:boolean ?;
    ddi:isTranslatable xsd:boolean ?;
    ddi:translationSourceLanguage xsd:language *;
    ddi:translationDate umld:UnlimitedNatural ?;
  } *;
} // rdfs:definedBy <http://lion.ddialliance.org/ddiobjects/internationalstring> // shexmi:package "complexdatatypes" // shexmi:comment """
definition
============
packaging structure for multiple language versions of the same string content. where an element of this type is repeatable, the expectation is that each repetition contains different content, each of which can be expressed in multiple languages. the language designation goes on the individual string.

ddi 3.2 mapping
=================
r:internationalstringtype
									"""^^mark:
ddi:Annotation {
  ddi:title @ddi:InternationalString ?;
  ddi:subTitle @ddi:InternationalString *;
  ddi:alternativeTitle @ddi:InternationalString *;
  ddi:creator @ddi:AgentAssociation *;
  ddi:publisher @ddi:AgentAssociation *;
  ddi:contributor @ddi:AgentAssociation *;
  ddi:date @ddi:AnnotationDate *;
  ddi:languageOfObject ddi:LanguageSpecification ?;
  ddi:identifier @ddi:InternationalIdentifier *;
  ddi:copyright @ddi:InternationalString *;
  ddi:typeOfResource @ddi:ExternalControlledVocabularyEntry *;
  ddi:informationSource @ddi:InternationalString *;
  ddi:versionIdentification xsd:string ?;
  ddi:versioningAgent @ddi:AgentAssociation *;
  ddi:abstract @ddi:InternationalString ?;
  ddi:relatedResource EXTENDS @ddi:InternationalIdentifier {
    ddi:typeOfRelatedResource @ddi:ExternalControlledVocabularyEntry *;
  } *;
  ddi:provenance @ddi:InternationalString *;
  ddi:rights @ddi:InternationalString *;
  ddi:recordCreationDate ddi:IsoDateType ?;
  ddi:recordLastRevisionDate ddi:IsoDateType ?;
} // rdfs:definedBy <http://lion.ddialliance.org/ddiobjects/annotation> // shexmi:package "complexdatatypes" // shexmi:comment """
definition
============
provides annotation information on the object to support citation and crediting of the creator(s) of the object.

ddi 3.2 mapping
=================
r:citationtype
									"""^^mark:

ddi:AgentAssociation {
  ddi:agentName EXTENDS @ddi:InternationalString {
    ddi:affiliation xsd:string ?;
  } ?;
  ddi:role @ddi:PairedExternalControlledVocabularyEntry *;
  ddi:agentAssociation @ddi:Agent *;
} // rdfs:definedBy <http://lion.ddialliance.org/ddiobjects/agentassociation> // shexmi:package "complexdatatypes" // shexmi:comment """
definition
============
a basic structure for declaring the name of an agent inline, reference to an agent, and role specification. this object is used primarily within annotation.


ddi 3.2 mapping
=================
r:contributortype
									"""^^mark:

ddi:AnnotationDate EXTENDS @ddi:Date {
  ddi:typeOfDate @ddi:ExternalControlledVocabularyEntry *;
} // rdfs:definedBy <http://lion.ddialliance.org/ddiobjects/annotationdate> // shexmi:package "complexdatatypes" // shexmi:comment """
definition
============
a generic date type for use in annotation which provides the standard date structure plus a property to define the date type (publication date,  accepted date, copyrighted date, submitted date, etc.). 

synonyms
==========
equivalent of http://purl.org/dc/elements/1.1/date where the type of date may identify the dublin core refinement term.
									"""^^mark:

ddi:PairedExternalControlledVocabularyEntry {
  ddi:term @ddi:ExternalControlledVocabularyEntry ;
  ddi:extent @ddi:ExternalControlledVocabularyEntry ?;
} // rdfs:definedBy <http://lion.ddialliance.org/ddiobjects/pairedexternalcontrolledvocabularyentry> // shexmi:package "complexdatatypes" // shexmi:comment """
definition
============
a tightly bound pair of items from an external controlled vocabulary. the extent property describes the extent to which the parent term applies for the specific case. 

examples
==========
when used to assign a role to an actor within a specific activity this term would express the degree of contribution. contributor with role=editor and extent=lead.

alternatively. the term might be a controlled vocabulary from a list of controlled vocabularies, e.g. the generic longitudinal business process model (glbpm) in a list that could include other business process model frameworks. in this context the extent becomes the name of a business process model task, e.g. \"integrate data\" from the glbpm.
									"""^^mark:

ddi:Date {
  ddi:isoDate ddi:IsoDateType ?;
  ddi:nonIsoDate {
    ddi:dateContent xsd:string ;
    ddi:nonIsoDateFormat @ddi:ExternalControlledVocabularyEntry ?;
    ddi:calendar @ddi:ExternalControlledVocabularyEntry ?;
  } *;
} // rdfs:definedBy <http://lion.ddialliance.org/ddiobjects/date> // shexmi:package "complexdatatypes" // shexmi:comment """
definition
============
provides the structure of a single date expressed in an iso date structure along with equivalent expression in any number of non-iso formats. while it supports the use of the iso time interval structure this should only be used when the exact date is unclear (i.e. occurring at some point in time between the two specified dates) or in specified applications. ranges with specified start and end dates should use the daterange as a datatype. commonly uses property names include: eventdate, issuedate, and releasedate.

explanatory notes
===================
date allows one of a set of date-time (yyyy-mm-ddthh:mm:ss), date (yyyy-mm-dd), year-month (yyyy-mm), year (yyyy), time (hh:mm:ss) and duration (pnynmndnhnmns), or time interval (yyyy-mm-ddthh:mm:ss/yyyy-mm-ddthh:mm:ss, yyyy-mm-ddthh:mm:ss/pnynmndnhnmns, pnynmndnhnmns/ yyyy-mm-ddthh:mm:ss) which is formatted according to iso 8601 and backed supported by regular expressions in the basedatetype. time zone designation and negative/positive prefixes are allowed as are dates before and after 0000 through 9999.

ddi 3.2 mapping
=================
r:datetype
									"""^^mark:

ddi:InternationalIdentifier {
  ddi:identifierContent xsd:string ?;
  ddi:managingAgency @ddi:ExternalControlledVocabularyEntry ?;
  ddi:isURI xsd:boolean ?;
} // rdfs:definedBy <http://lion.ddialliance.org/ddiobjects/internationalidentifier> // shexmi:package "complexdatatypes" // shexmi:comment """
definition
============
an identifier whose scope of uniqueness is broader than the local archive. common forms of an international identifier are isbn, issn, doi or similar designator. provides both the value of the identifier and the agency who manages it.

explanatory notes
===================
for use in annotation or other citation format. 

ddi 3.2 mapping
=================
r:internationalidentifiertype
									"""^^mark:

ddi:Image {
  ddi:uri xsd:anyURI ?;
  ddi:typeOfImage @ddi:ExternalControlledVocabularyEntry ?;
  ddi:dpi xsd:integer ?;
  ddi:languageOfImage ddi:LanguageSpecification ?;
} // rdfs:definedBy <http://lion.ddialliance.org/ddiobjects/image> // shexmi:package "complexdatatypes" // shexmi:comment """
definition
============
a reference to an image, with a description of its properties and type.

ddi 3.2 mapping
=================
r:imagetype
									"""^^mark:
ddi:DateRange {
  ddi:startDate @ddi:Date ?;
  ddi:endDate @ddi:Date ?;
} // rdfs:definedBy <http://lion.ddialliance.org/ddiobjects/daterange> // shexmi:package "complexdatatypes" // shexmi:comment """
definition
============
expresses a date/time range using a start date and end date (both with the structure of date and supporting the use of iso and non-iso date structures). use in all locations where a range of dates is required, i.e. validfor, embargoperiod, collectionperiod, etc.

ddi 3.2 mapping
=================
r:datetype
									"""^^mark:

ddi:ExternalMaterial EXTENDS @ddi:Identifiable {
  ddi:typeOfMaterial @ddi:ExternalControlledVocabularyEntry ?;
  ddi:descriptiveText @ddi:InternationalStructuredString ?;
  ddi:uri xsd:anyURI *;
  ddi:relationshipDescription @ddi:InternationalStructuredString *;
  ddi:mimeType @ddi:ExternalControlledVocabularyEntry ?;
  ddi:usesSegment {
    ddi:usesAudioSegment {
      ddi:typeOfAudioClip @ddi:ExternalControlledVocabularyEntry ?;
      ddi:audioClipBegin xsd:string ?;
      ddi:audioClipEnd xsd:string ?;
    } *;
    ddi:usesVideoSegment {
      ddi:typeOfVideoClip @ddi:ExternalControlledVocabularyEntry ?;
      ddi:videoClipBegin xsd:string ?;
      ddi:videoClipEnd xsd:string ?;
    } *;
    ddi:xml xsd:string *;
    ddi:useseTextualSegment {
      ddi:lineParamenter {
        ddi:startLine xsd:integer ?;
        ddi:startOffset xsd:integer ?;
        ddi:endLine xsd:integer ?;
        ddi:endOffset xsd:integer ?;
      } ?;
      ddi:characterParameter {
        ddi:startCharOffset xsd:integer ?;
        ddi:endCharOffset xsd:integer ?;
        ddi:characterLength xsd:integer ?;
      } ?;
    } *;
    ddi:usesImageArea {
      ddi:coordinates xsd:string ?;
      ddi:shape @ddi:ShapeCoded ?;
    } *;
  } *;
  ddi:citationOfExternalMaterial @ddi:Annotation ?;
} // rdfs:definedBy <http://lion.ddialliance.org/ddiobjects/externalmaterial> // shexmi:package "utility" // shexmi:comment """
definition
============
externalmaterial describes the location, structure, and relationship to the ddi metadata instance for any material held external to that instance. this includes citations to such material, an external reference to a url (or other uri), and a statement about the relationship between the cited externalmaterial the contents of the ddi instance. it should be used as follows:as a target object from a relationship which clarifies its role within a class; or as the target of a relatedresource within an annotation.


examples
==========
externalmaterial is used to identify material and optionally specific sections of the material that have a relationship to a class. there is a generic relatedmaterial on annotatedidentifiable. this should be used to attach any additional material that the user identifies as important to the class. the properties typeofmaterial, descriptivetext, and relationshipdescription should be used to clarify the purpose and coverage of the related material.

explanatory notes
===================
within the ddi model, externalmaterial is used as an extension base for specific external materials found such as an external aid. it is used as a base for specifically related material (e.g. externalaid) by creating a relationship whose name clarifies the purpose of the related material.

ddi 3.2 mapping
=================
r:othermaterialtype
									"""^^mark:

ABSTRACT ddi:Agent EXTENDS @ddi:AnnotatedIdentifiable {
  ddi:hasAgentId {
    ddi:agentIdValue xsd:string ;
    ddi:agentIdType xsd:string ;
  } *;
  ddi:purpose @ddi:InternationalStructuredString ?;
  ddi:image EXTENDS @ddi:Image {
    ddi:effectiveDates @ddi:DateRange ?;
    ddi:privacy @ddi:ExternalControlledVocabularyEntry ?;
  } *;
} // rdfs:definedBy <http://lion.ddialliance.org/ddiobjects/agent> // shexmi:package "agents" // shexmi:comment """
definition
============
an actor that performs a role in relation to a process or product.

examples
==========
analyst performing edits on data, interviewer conducting an interview, a relational database management system managing data, organization publishing data on a regular basis, creator or contributor of a publication.

explanatory notes
===================
foaf:agent is: an agent (eg. person, group, software or physical artifact)
prov:agent is an agent is something that bears some form of responsibility for an activity taking place, for the existence of an entity, or for another agent's activity.

synonyms
==========
agent
									"""^^mark:

