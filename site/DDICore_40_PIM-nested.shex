# DDICore_40_PIM-nested.shexj
# shexToOwl 2020-02-15T01:09:19.078Z
PREFIX ddi: <http://ddi-alliance.org/ns/#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX shexmi: <http://www.w3.org/ns/shex-xmi#>
PREFIX mark: <https://github.com/commonmark/commonmark.js>

# START ddi:Agents Package

ABSTRACT ddi:Agent CLOSED EXTENDS @ddi:AnnotatedIdentifiable {
  ddi:hasAgentId CLOSED {
    ddi:agentIdType xsd:string *
    // shexmi:comment """The identifier system in use.""";
    ddi:agentIdValue xsd:string *
    // shexmi:comment """The identifier for the agent.""";
  } *
  // shexmi:comment """An identifier within a specified system for specifying an agent""";
  ddi:image CLOSED EXTENDS @ddi:Image {
    ddi:effectiveDates @ddi:DateRange *
    // shexmi:comment """The period for which this image is effective/valid.""";
    ddi:privacy @ddi:ExternalControlledVocabularyEntry *
    // shexmi:comment """Specify the level privacy for the image as public, restricted, or private. Supports the use of an external controlled vocabulary.""";
  } *
  // shexmi:comment """References an image using the standard Image description. In addition to the standard attributes provides an effective date (period), the type of image, and a privacy ranking.""";
  ddi:agent_has_AgentListing @ddi:AgentListing *;
  ddi:purpose @ddi:InternationalStructuredString *
  // shexmi:comment """Explanation of the intent of some decision or object. Supports the use of multiple languages and structured text.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#Agents"
// shexmi:comment """Definition
============
An actor that performs a role in relation to a process or product.

Examples
==========
Analyst performing edits on data, interviewer conducting an interview, a relational database management system managing data, organization publishing data on a regular basis, creator or contributor of a publication.

Explanatory notes
===================
foaf:Agent is: An agent (eg. person, group, software or physical artifact)
prov:Agent is An agent is something that bears some form of responsibility for an activity taking place, for the existence of an entity, or for another agent's activity.

Synonyms
==========
Agent"""^^mark:

ddi:AgentAssociation CLOSED {
  ddi:agentName CLOSED EXTENDS @ddi:InternationalString {
    ddi:affiliation xsd:string *
    // shexmi:comment """The affiliation of this person to an organization. This is generally an organization or sub-organization name and should be related to the specific role within which the individual is being listed.""";
  } *
  // shexmi:comment """Full name of the contributor. Language equivalents should be expressed within the International String structure.""";
  ddi:agentAssociation_refersTo_Agent @ddi:Agent *;
  ddi:role @ddi:PairedExternalControlledVocabularyEntry *
  // shexmi:comment """The role of the of the Agent within the context of the parent property name with information on the extent to which the role applies. Allows for use of external controlled vocabularies. Reference should be made to the vocabulary within the structure of the role. Recommended role for contributors can be found in the CASRAI Contributor Roles Vocabulary (CRediT) http://dictionary.casrai.org/Contributor_Roles, or the OPENRIF contribution ontology https://github.com/openrif/contribution-ontology""";
}
// shexmi:package "http://ddi-alliance.org/ns/#Agents"
// shexmi:comment """Definition
============
A basic structure for declaring the name of an Agent inline, reference to an Agent, and role specification. This object is used primarily within Annotation.


Examples
==========


Explanatory notes
===================


Synonyms
==========


DDI 3.2 mapping
=================
r:ContributorType"""^^mark:

ddi:AgentListing CLOSED EXTENDS @ddi:Identifiable {
  ddi:duplicates xsd:boolean *;
  ddi:name @ddi:ObjectName *
  // shexmi:comment """A linguistic signifier. Human understandable name (word, phrase, or mnemonic) that reflects the ISO/IEC 11179-5 naming principles. If more than one name is provided provide a context to differentiate usage.""";
  ddi:agentListing_isDefinedBy_Concept @ddi:Concept *;
  ddi:agentListing_isMaintainedBy_Agent @ddi:Agent *;
  ddi:purpose @ddi:InternationalStructuredString *
  // shexmi:comment """Explanation of the intent of the Agent Listing. Supports the use of multiple languages and structured text.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#Agents"
// shexmi:comment """Definition
============
A listing of Agents of any type. The AgentList may be organized to describe relationships between members using AgentRelationStructure.

Examples
==========
Organizations contributing to a project. Individuals within an agency. All organizations, indivduals, and machines identified within the collections of an archive.

Explanatory notes
===================
Relationships between agents are fluid and reflect effective dates of the relationship. An agent may have multiple relationships which may be sequencial or concurrent. Relationships may or may not be hierarchical in nature. All Agents are serialized individually and brought into relationships as appropriate."""^^mark:

ddi:AgentPosition CLOSED {
  ddi:agentPosition_TODOrelatesTo_AgentListing @ddi:AgentListing *;
  ddi:agentPosition_indexes_Agent @ddi:Agent *;
  ddi:value xsd:integer *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Agents"

ddi:AgentRelationship CLOSED {
  ddi:effectiveDates @ddi:DateRange *
  // shexmi:comment """The effective dates of the relation. A structured DateRange with start and end Date (both with the structure of Date and supporting the use of ISO and non-ISO date structures); Use to relate a period with a start and end date.""";
  ddi:agentRelationship_TODOrelatesTo_AgentStructure CLOSED EXTENDS @ddi:Identifiable {
    ddi:effectiveDates @ddi:DateRange *
    // shexmi:comment """The effective start and end date of the relationship""";
    ddi:name @ddi:ObjectName *;
    ddi:agentStructure_structures_AgentListing @ddi:AgentListing *;
    ddi:privacy @ddi:ExternalControlledVocabularyEntry *
    // shexmi:comment """Define the level of privacy regarding this relationship. Supports the use of a controlled vocabulary.""";
    ddi:purpose @ddi:InternationalStructuredString *
    // shexmi:comment """Explanation of the intent of creating the relation. Supports the use of multiple languages and structured text.""";
    ddi:semantics @ddi:ExternalControlledVocabularyEntry *
    // shexmi:comment """Provides semantic context for the relation structure""";
    ddi:specification @ddi:SpecificationType *
    // shexmi:comment """Provides information on reflexivity, transitivity, and symmetry of relationship using a descriptive term from an ennumeration list. Use if all relations within this relation structure are of the same specification.""";
    ddi:topology @ddi:TopologyType *;
    ddi:totality @ddi:NewTotalityType *
    // shexmi:comment """Type of relation in terms of totality with respect to an associated collection.""";
  } *;
  ddi:agentRelationship_hasTarget_Agent @ddi:Agent *;
  ddi:agentRelationship_hasSource_Agent @ddi:Agent *;
  ddi:semantic @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """Provides semantic context for the relationship""";
}
// shexmi:package "http://ddi-alliance.org/ns/#Agents"
// shexmi:comment """Definition
============
Used to define the relation agents in a hierarchical structure

Examples
==========
An Organization (source/parent) employing and Individual (target/child); An Individual (source/parent) supervisory to an Individual (target/child); An Organization (source/parent) overseeing a project (Organization) (target/child). Select appropriate relationship using the controlled vocabulary available through hasRelationshipSpecification."""^^mark:

ddi:Individual CLOSED EXTENDS @ddi:Agent {
  ddi:ddiId xsd:string *
  // shexmi:comment """The agency identifier of the individual according to the DDI Alliance agent registry.""";
  ddi:hasContactInformation @ddi:ContactInformation *
  // shexmi:comment """Contact information for the individual including location specification, address, URL, phone numbers, and other means of communication access. Sets of information can be repeated and date-stamped.""";
  ddi:hasIndividualName CLOSED {
    ddi:abbreviation @ddi:InternationalString *
    // shexmi:comment """An abbreviation or acronym for the name. This may be expressed in multiple languages. It is assumed that if only a single language is provided that it may be used in any of the other languages within which the name itself is expressed.""";
    ddi:context @ddi:ExternalControlledVocabularyEntry *
    // shexmi:comment """A name may be specific to a particular context, i.e. common usage, business, social, etc.. Identify the context related to the specified name. Supports the use of an external controlled vocabulary.""";
    ddi:effectiveDates @ddi:DateRange *
    // shexmi:comment """Clarifies when the name information is accurate.""";
    ddi:firstGiven xsd:string *
    // shexmi:comment """First (given) name of the individual""";
    ddi:fullName @ddi:InternationalString *
    // shexmi:comment """This provides a means of providing a full name as a single object for display or print such as identification badges etc. For example a person with the name of William Grace for official use may prefer a display name of Bill Grace on a name tag or other informal publication.""";
    ddi:isFormal xsd:boolean *
    // shexmi:comment """The legal or formal name of the individual should have the isFormal attribute set to true. To avoid confusion only one individual name should have the isFormal attribute set to true. Use the TypeOfIndividualName to further differentiate the type and applied usage when multiple names are provided.""";
    ddi:isPreferred xsd:boolean *
    // shexmi:comment """If more than one name for the object is provided, use the isPreferred attribute to indicate which is the preferred name content. All other names should be set to isPreferred=\"false\".""";
    ddi:lastFamily xsd:string *
    // shexmi:comment """Last (family) name /surname of the individual""";
    ddi:middle xsd:string *
    // shexmi:comment """Middle name or initial of the individual""";
    ddi:prefix xsd:string *
    // shexmi:comment """Title that precedes the name of the individual, such as Ms., or Dr.""";
    ddi:sex @ddi:SexSpecificationType *
    // shexmi:comment """Sex allows for the specification of male, female or neutral. The purpose of providing this information is to assist others in the appropriate use of pronouns when addressing the individual. Note that many countries/languages may offer a neutral pronoun form.""";
    ddi:suffix xsd:string *
    // shexmi:comment """Title that follows the name of the individual, such as Esq.""";
    ddi:typeOfIndividualName @ddi:ExternalControlledVocabularyEntry *
    // shexmi:comment """The type of individual name provided. the use of a controlled vocabulary is strongly recommended. At minimum his should include, e.g. PreviousFormalName, Nickname (or CommonName), Other.""";
  } *
  // shexmi:comment """The name of an individual broken out into its component parts of prefix, first/given name, middle name, last/family/surname, and suffix.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#Agents"
// shexmi:comment """Definition
============
A person who may have a relationship to another Agent and who may be specified as being associated with an act.

Examples
==========
Analyst performing edits on data, interviewer conducting an interview, a creator.

Explanatory notes
===================
A set of information describing an individual and means of unique identification and/or contact. Information may be repeated and provided effective date ranges to retain a history of the individual within a metadata record. Actions and relationships are specified by the use of the Individual as the target of a relationship (Creator) or within a collection of Agents in an AgentListing (employee of an Organization)."""^^mark:

ddi:Machine CLOSED EXTENDS @ddi:Agent {
  ddi:function @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """The function of the machine""";
  ddi:hasAccessLocation CLOSED {
    ddi:mimeType @ddi:ExternalControlledVocabularyEntry *
    // shexmi:comment """The mime type. Supports the use of an controlled vocabulary.""";
    ddi:physicalLocation @ddi:InternationalString *
    // shexmi:comment """The physical location of the machine""";
    ddi:uri @ddi:anyURI *
    // shexmi:comment """A URI for access, normally expressed as a URL""";
  } *
  // shexmi:comment """The locations where the machine can be access""";
  ddi:machineInterface @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """Specified the machine interface. Supports the use of a controlled vocabulary.""";
  ddi:name @ddi:ObjectName *
  // shexmi:comment """The name of the machine. A linguistic signifier. Human understandable name (word, phrase, or mnemonic) that reflects the ISO/IEC 11179-5 naming principles. If more than one name is provided provide a context to differentiate usage.""";
  ddi:ownerOperatorContact @ddi:ContactInformation *
  // shexmi:comment """Contact information for the owner/operator including location specification, address, URL, phone numbers, and other means of communication access. Sets of information can be repeated and date-stamped.""";
  ddi:typeOfMachine @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """The kind of machine used - software, web service, physical machine, from a controlled vocabulary""";
}
// shexmi:package "http://ddi-alliance.org/ns/#Agents"
// shexmi:comment """Definition
============
Mechanism or computer program used to implement a process.

Examples
==========
SAS program, photocopier

Explanatory notes
===================
May be used as the target to describe how an action was performed. Relevent to data capture and data processing or wherever a role is performed by a Machine."""^^mark:


# END ddi:Agents Package

# START ddi:Conceptual Package

ddi:Category CLOSED EXTENDS @ddi:Concept {
  ddi:descriptiveText @ddi:InternationalStructuredString *
  // shexmi:comment """A short natural language account of the characteristics of the object.""";
  ddi:category_has_CategorySet @ddi:CategorySet *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Conceptual"
// shexmi:comment """Definition
============
Concept whose role is to define and measure a characteristic

Examples
==========
Self-identified as \"Male\".  \"Extremely Satisfied\" as a response category.

Explanatory notes
===================
The Category is a Concept. It can have multiple name and display label properties as well as a definition and some descriptive text. As a \"Signified\" class there can be one or more \"Sign\" classes (e.g. a Code) that denotes it with some representation. The relationship is from the Code to the Category.

Synonyms
==========


DDI 3.2 mapping
=================
l:CategoryType"""^^mark:

ddi:CategorySet CLOSED EXTENDS @ddi:ConceptSystem {
}
// shexmi:package "http://ddi-alliance.org/ns/#Conceptual"
// shexmi:comment """Definition
============
Concept System where the underlying Concepts are Categories and are used as specifications for a generalized concept

Examples
==========
\"Male\" and \"Female\" categories in a CategorySet named \"Gender\"

A CategorySet for an occupational classification system like ISCO-08 could use a ClassificationRelationStructure to describe a hierarchy (Chief Executives and Administrative and Commercial Managers as subtypes of Managers) without an associated Code List.

Explanatory notes
===================
Can be used directly by questions to express a set of categories for a response domain or as the related source for a CodeList or StatisticalClassification"""^^mark:

ddi:Concept CLOSED EXTENDS @ddi:AnnotatedIdentifiable {
  ddi:definition @ddi:InternationalStructuredString *
  // shexmi:comment """Natural language statement conveying the meaning of a concept, differentiating it from other concepts. Supports the use of multiple languages and structured text.""";
  ddi:displayLabel @ddi:LabelForDisplay *
  // shexmi:comment """A structured display label providing a fully human readable display for the identification of the object. Supports the use of multiple languages and structured text.""";
  ddi:name @ddi:ObjectName *
  // shexmi:comment """A linguistic signifier. Human understandable name (word, phrase, or mnemonic) that reflects the ISO/IEC 11179-5 naming principles. If more than one name is provided provide a context to differentiate usage.""";
  ddi:concept_has_ConceptSystem @ddi:ConceptSystem *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Conceptual"
// shexmi:comment """Definition
============
unit of thought differentiated by characteristics [GSIM 1.1]

Examples
==========
Poverty, Income, Household relationship, Family, Gender, Business Establishment, Satisfaction, etc.

Explanatory notes
===================
Many DDI4 classes are subtypes of the Concept class including Category, Universe, UnitType, ConceptualVariable. This class realizes the pattern class Signified and as such a Concept can be denoted by a Sign.

Synonyms
==========


DDI 3.2 mapping
=================
c:ConceptType

RDF mapping
=============


GSIM mapping
==============
Concept"""^^mark:

ddi:ConceptSystem CLOSED EXTENDS @ddi:AnnotatedIdentifiable {
  ddi:duplicates xsd:boolean *
  // shexmi:comment """If members are ordered set to true, if unordered set to false.""";
  ddi:name @ddi:ObjectName *
  // shexmi:comment """A linguistic signifier. Human understandable name (word, phrase, or mnemonic) that reflects the ISO/IEC 11179-5 naming principles. If more than one name is provided provide a context to differentiate usage.""";
  ddi:conceptSystem_isDefinedBy_Concept @ddi:Concept *;
  ddi:purpose @ddi:InternationalStructuredString *
  // shexmi:comment """Explanation of the intent of some decision or object. Supports the use of multiple languages and structured text.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#Conceptual"
// shexmi:comment """Definition
============
set of Concepts structured by the relations among them. [GSIM 1.1] 

Examples
==========
1) Concept of Sex: Male, Female, Other 2) Concept of Household Relationship: Household Head, Spouse of Household Head, Child of Household Head, Unrelated Household Member, etc.  

Explanatory notes
===================
Note that this structure can be used to structure Concept, Classification, Universe, Population, Unit Type and any other class that extends from Concept.

Synonyms
==========


DDI 3.2 mapping
=================
c:ConceptSchemeType

RDF mapping
=============


GSIM mapping
==============
Concept System"""^^mark:

ABSTRACT ddi:ConceptualDomain CLOSED EXTENDS @ddi:AnnotatedIdentifiable {
  ddi:displayLabel @ddi:LabelForDisplay *
  // shexmi:comment """A structured display label providing a fully human readable display for the identification of the object. Supports the use of multiple languages and structured text.""";
  ddi:conceptualDomain_takesConceptsFrom_ConceptSystem @ddi:ConceptSystem *;
  ddi:conceptualDomain_isDescribedBy_ValueAndConceptDescription @ddi:ValueAndConceptDescription *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Conceptual"
// shexmi:comment """Definition
============
set of Concepts, where each concept is used as the Signified for a Datum

Examples
==========
Substantive: Housing Unit Tenure - Owned, Rented, Vacant; Sentinel: Non-response - Refused, Don't Know, Not Applicable 

Explanatory notes
===================
Intent of a Conceptual Domain is defining a set of concepts used to measure a broader concept. For effective use they should be discrete (non-overlapping) and provide exhaustive coverage of the broader concept.
The constituent concepts can be either sentinel or substantive, 
The set can be described by either enumeration or by an expression."""^^mark:

ddi:ConceptualVariable CLOSED EXTENDS @ddi:Concept {
  ddi:descriptiveText @ddi:InternationalStructuredString *
  // shexmi:comment """A short natural language account of the characteristics of the object.""";
  ddi:conceptualVariable_uses_Concept @ddi:Concept *;
  ddi:conceptualVariable_takesSentinelConceptsFrom_SentinelConceptualDomain @ddi:SentinelConceptualDomain *;
  ddi:conceptualVariable_measures_UnitType @ddi:UnitType *;
  ddi:conceptualVariable_has_VariableCollection @ddi:VariableCollection *;
  ddi:conceptualVariable_takesSubstantiveConceptsFrom_SubstantiveConceptualDomain @ddi:SubstantiveConceptualDomain *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Conceptual"
// shexmi:comment """Definition
============
use of a Concept as a characteristic of a UnitType intended to be measured

Examples
==========
1. Sex of person
2. Number of employees 
3. Value of endowment

Explanatory notes
===================
Note that DDI varies from GSIM in the use of a UnitType rather than a Universe. \"The use of a Concept as a characteristic of a Universe intended to be measured\" [GSIM 1.1]

Synonyms
==========


DDI 3.2 mapping
=================
c:ConceptualVariableType

RDF mapping
=============


GSIM mapping
==============
Variable"""^^mark:

ddi:InstanceVariable CLOSED EXTENDS @ddi:RepresentedVariable {
  ddi:instanceVariable_isBasedOn_RepresentedVariable @ddi:RepresentedVariable *;
  ddi:instanceVariable_measures_Population @ddi:Population *;
  ddi:physicalDataType @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """The data type of this variable. Supports the optional use of an external controlled vocabulary.""";
  ddi:platformType @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """This should match a platformType of the RepresentedVariable on which the InstanceVariable is based (if one exists). It is drawn from the same external controlled vocabulary used by the RepreentedVariable's platformType.  A sample list for the external controlled vocabulary is:  A sample list would be:  • BlankString - A Blank string indicates missing. Comparison is based on lexical order.  • EmptyString - An empty string indicates missing. Use in comparisons returns missing.   • Rstyle - Codes drawn from  NA and the IEEE 754 values of  NaN  -Inf   +Inf.   Comparisons return NA.   • SASNumeric - codes drawn from . ._ .A .B .C .D .E .F .G .H .I .J .K .L .M .N .O .P .Q .R .S .T .U .V .W .X .Y .Z    Sentinel code treated as less than any substantive value   • SPSSstyle - System missing (a dot) a set of individual values drawn from the same datatype as the SubstantiveValueDomain, and a range of values  drawn from the same datatype as the SubstantiveValueDomain.  Comparisons return system missing.  Some functions substitute with valid values (e.g. SUM replaces missing values with 0)   • StataNumeric - codes drawn from . ._ .A .B .C .D .E .F .G .H .I .J .K .L .M .N .O .P .Q .R .S .T .U .V .W .X .Y .Z  Sentinel code treated as greater than any substantive value  • Unrestricted - No restrictions on codes for sentinel values. Use in comparisons is indeterminate.""";
  ddi:variableFunction @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """Immutable characteristics of the variable such as, geographic designator, weight, temporal designation, etc.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#Conceptual"
// shexmi:comment """Definition
============
use of a Represented Variable within a Data Set 

Examples
==========
1) Gender: Dan Gillman has gender &lt;m, male&gt;, Arofan Gregory has gender&lt;m, male&gt;, etc. 
2) Number of employees: Microsoft has 90,000 employees; IBM has 433,000 employees, etc. 
3) Endowment: Johns Hopkins has endowment of &lt;3, $1,000,000 and above&gt;, 
Yale has endowment of &lt;3, $1,000,000 and above&gt;, etc.

Two InstanceVariables of a person's height reference the same RepresentedVariable. This indicates that they are intended to: be measured with the same unit of measurement, have the same intended data type, have the same SubstantativeValueDomain, use a SentinelValueDomain drawn from the same set of SentinelValueDomains, have the same sentinel (missing value) concepts, and draw their Population from the same Universe. In other words, the two InstanceVariables should be comparable.

Explanatory notes
===================
The InstanceVariable class inherits all of the properties and relationships of the RepresentedVariable (RV) class and, in turn, the ConceptualVariable (CV) class. This means that an InstanceVariable can be completely populated without the need to create an associated RepresentedVariable or ConceptualVariable. If, however, a user wishes to indicate that a particular InstanceVariable is patterned after a particular RepresentedVariable or a particular ConceptualVariable that may be indicated by including a relationship to the RV and or CV. Including these references is an important method of indicating that multiple InstanceVariables have the same representation, measure the same concept, and are drawn from the same Universe. If two InstanceVariables of a person's height reference the same RepresentedVariable. This indicates that they are intended to: be measured with the same unit of measurement, have the same intended data type, have the same SubstantativeValueDomain, use a SentinelValueDomain drawn from the same set of SentinelValueDomains, have the same sentinel (missing value) concepts, and draw their Population from the same Universe. In other words, the two InstanceVariables should be comparable.
The InstanceVariable describes actual instances of data that have been collected.


Synonyms
==========


DDI 3.2 mapping
=================


RDF mapping
=============


GSIM mapping
==============
Instance Variable"""^^mark:

ddi:Population CLOSED EXTENDS @ddi:Universe {
  ddi:population_isComposedOf_Unit @ddi:Unit *
  // shexmi:partonomy shexmi:sharedAggregation;
  ddi:population_narrows_Universe @ddi:Universe *;
  ddi:timePeriodOfPopulation @ddi:DateRange *
  // shexmi:comment """The time period associated with the Population""";
}
// shexmi:package "http://ddi-alliance.org/ns/#Conceptual"
// shexmi:comment """Definition
============
universe with time and geography specified

Examples
==========
1. Canadian adult persons residing in Canada on 13 November 1956
2. US computer companies at the end of 2012  
3. Universities in Denmark 1 January 2011.

Explanatory notes
===================
Population is the most specific in the conceptually narrowing hierarchy of UnitType, Universe and Population. Several Populations having differing time and or geography may specialize the same Universe.

Synonyms
==========


DDI 3.2 mapping
=================


RDF mapping
=============


GSIM mapping
==============
Population"""^^mark:

ddi:RepresentedVariable CLOSED EXTENDS @ddi:ConceptualVariable {
  ddi:hasIntendedDataType @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """The data type intended to be used by this variable. Supports the optional use of an external controlled vocabulary.""";
  ddi:representedVariable_isBasedOn_ConceptualVariable @ddi:ConceptualVariable *;
  ddi:representedVariable_measures_Universe @ddi:Universe *;
  ddi:representedVariable_takesPlatformSpecificSentinelValues_SentinelValueDomain CLOSED EXTENDS @ddi:ValueDomain {
    ddi:sentinelValueDomain_takesValuesFrom_EnumerationDomain @ddi:EnumerationDomain *;
    ddi:sentinelValueDomain_takesConceptsFrom_SentinelConceptualDomain @ddi:SentinelConceptualDomain *;
    ddi:sentinelValueDomain_isDescribedBy_ValueAndConceptDescription @ddi:ValueAndConceptDescription *;
    ddi:platformType @ddi:ExternalControlledVocabularyEntry *
    // shexmi:comment """The type of platform under which sentinel codes will be used. Statistical software platforms use different sets of codes to indicate missing values. The external controlled vocabulary should list platform tpes and a description of the allowed missing value types. A sample list would be: • BlankString - A Blank string indicates missing. Comparison is based on lexical order.  • EmptyString - An empty string indicates missing. Use in comparisons returns missing.   • Rstyle - Codes drawn from  NA and the IEEE 754 values of  NaN  -Inf   +Inf.   Comparisons return NA.   • SASNumeric - codes drawn from . ._ .A .B .C .D .E .F .G .H .I .J .K .L .M .N .O .P .Q .R .S .T .U .V .W .X .Y .Z    Sentinel code treated as less than any substantive value   • SPSSstyle - System missing (a dot) a set of individual values drawn from the same datatype as the SubstantiveValueDomain, and a range of values  drawn from the same datatype as the SubstantiveValueDomain.  Comparisons return system missing.  Some functions substitute with valid values (e.g. SUM replaces missing values with 0)   • StataNumeric - codes drawn from . ._ .A .B .C .D .E .F .G .H .I .J .K .L .M .N .O .P .Q .R .S .T .U .V .W .X .Y .Z  Sentinel code treated as greater than any substantive value  • Unrestricted - No restrictions on codes for sentinel values. Use in comparisons is indeterminate.""";
  } *;
  ddi:representedVariable_takesSubstantiveValuesFrom_SubstantiveValueDomain @ddi:SubstantiveValueDomain *;
  ddi:unitOfMeasurement xsd:string *
  // shexmi:comment """The unit in which the data values are measured (kg, pound, euro).""";
}
// shexmi:package "http://ddi-alliance.org/ns/#Conceptual"
// shexmi:comment """Definition
============
ConceptualVariable with a SubstantiveValueDomain specified


Examples
==========
The pair (Number of Employees, Integer), where \"Number of Employees\" is the characteristic of the population (Variable) and \"Integer\" is how that measure will be represented (Value Domain).

Explanatory notes
===================
Extends from ConceptualVariable and can contain all descriptive fields without creating a ConceptualVariable. By referencing a ConceptualVariable it can indicate a common relationship with RepresentedVariables expressing the same characteristic of a universe measured in another way, such as Age of Persons in hours rather than years. RepresentedVariable constrains the coverage of the UnitType to a specific Universe. In the above case the Universe with the measurement of Age in hours may be constrained to Persons under 5 days (120 hours old). RepresentedVariable can define sentinel values for multiple storage systems which have the same conceptual domain but specialized value domains.

Synonyms
==========


DDI 3.2 mapping
=================
l:RepresentedVariableType"""^^mark:

ddi:SentinelConceptualDomain CLOSED EXTENDS @ddi:ConceptualDomain {
}
// shexmi:package "http://ddi-alliance.org/ns/#Conceptual"
// shexmi:comment """Definition
============
ConceptualDomain of sentinel Concepts

Examples
==========
Refused, 
Don't know, 
Lost in processing

Explanatory notes
===================


Synonyms
==========
missing categories"""^^mark:

ddi:SubstantiveConceptualDomain CLOSED EXTENDS @ddi:ConceptualDomain {
}
// shexmi:package "http://ddi-alliance.org/ns/#Conceptual"
// shexmi:comment """Definition
============
ConceptualDomain of substantive Concepts

Examples
==========
An enumeration of concepts for a categorical variable like \"male\" and \"female\" for gender.

Explanatory notes
===================
A ConceptualVariable links a UnitType to a SubstantiveConceptualDomain. The latter can be an enumeration or description of the values (Signified) that the variable may take on. In the enumerated case these are the categories in a CategorySet that can be values, not the codes that represent the values. 
An example might be the conceptual domain for a variable representing self-identified gender. An enumeration might include the concept of “male” and the concept of “female”. These, in turn, would be represented in a SubstantiveValueDomain by codes in a CodeList like “m” and “f”, or “0” and “1”. 
A conceptual domain might be described through a ValueAndConceptDescription’s description property of “a real number greater than 0” or through a more formal logicalExpression of “(all reals x such that x &gt;0) “. Even in the described case, what is being described are conceptual, not the symbols used to represent the values. This may be a subtle distinction, but allows specifying that the same numeric value might be represented by 32 bits or by 64 bits or by an Arabic numeral or a Roman numeral.


Synonyms
==========


DDI 3.2 mapping
=================


RDF mapping
=============


GSIM mapping
==============
Conceptual Domain"""^^mark:

ddi:Unit CLOSED EXTENDS @ddi:AnnotatedIdentifiable {
  ddi:definition @ddi:InternationalStructuredString *
  // shexmi:comment """Natural language statement conveying the meaning of a concept, differentiating it from other concepts. Supports the use of multiple languages and structured text.""";
  ddi:displayLabel @ddi:LabelForDisplay *
  // shexmi:comment """A structured display label providing a fully human readable display for the identification of the object. Supports the use of multiple languages and structured text.""";
  ddi:name @ddi:ObjectName *
  // shexmi:comment """A linguistic signifier. Human understandable name (word, phrase, or mnemonic) that reflects the ISO/IEC 11179-5 naming principles. If more than one name is provided provide a context to differentiate usage.""";
  ddi:unit_has_UnitType @ddi:UnitType *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Conceptual"
// shexmi:comment """Definition
============
individual object of interest for some statistical activity, such as data collection

Examples
==========
Here are 3 examples - 1. Individual US person (i.e., Arofan Gregory, Dan Gillman, Barack Obama, etc.) 2. Individual US computer companies (i.e., Microsoft, Apple, IBM, etc.) 3. Individual US universities (i.e., Johns Hopkins, University of Maryland, Yale, etc.) [GSIM 1.1]

Explanatory notes
===================
In a traditional data table each column might represent some variable (measurement). Each row would represent the entity (Unit)  to which those variables relate. Height measurements might be made on persons (UnitType) of primary school age (Universe) at Pinckney Elementary School on September 1, 2005 (Population). The height for Mary Roe (Unit)  might be 139 cm.
The Unit is not invariably tied to some value. A median income might be calculated for a block in the U.S. but then used as an attribute of a person residing on that block. For the initial measurement the Unit was the block. In the reuse the unit would be that specific person to which the value was applied.
In a big data table each row represents a unit/variable double. Together a unit identifier and a variable identifier define the key. And for each key there is just one value – the measure of the unit  on the variable. 
A big data table is sometimes referred to as a column-oriented data store whereas a traditional database is sometimes referred to as a row-oriented data store. The unit plays an identifier role in both types of data stores.


Synonyms
==========


DDI 3.2 mapping
=================


RDF mapping
=============


GSIM mapping
==============
Unit"""^^mark:

ddi:UnitType CLOSED EXTENDS @ddi:Concept {
  ddi:descriptiveText @ddi:InternationalStructuredString *
  // shexmi:comment """A short natural language account of the characteristics of the object.""";
  ddi:unitType_uses_Concept @ddi:Concept *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Conceptual"
// shexmi:comment """Definition
============
Unit Type is a type or class of objects of interest.

Examples
==========
Person, Establishment, Household, State, Country, Dog, Automobile

Explanatory notes
===================
UnitType is the most general in the hierarchy of UnitType, Universe, and Population. It is a description of the basic characteristic for a general set of Units.  A Universe is a set of entities defined by a more narrow specification than that of an underlying UnitType. A Population further narrows the specification to a specific time and geography.
A Unit Type is used to describe a class or group of Units based on a single characteristic with no specification of time and geography.  For example, the Unit Type of “Person” groups together a set of Units based on the characteristic that they are ‘Persons’.
It concerns not only Unit Types used in dissemination, but anywhere in the statistical process. E.g. using administrative data might involve the use of a fiscal unit. [GSIM 1.1]

Synonyms
==========
Object Class [ISO11179]

DDI 3.2 mapping
=================


RDF mapping
=============


GSIM mapping
==============
Unit Type"""^^mark:

ddi:Universe CLOSED EXTENDS @ddi:Concept {
  ddi:descriptiveText @ddi:InternationalStructuredString *
  // shexmi:comment """A short natural language account of the characteristics of the object.""";
  ddi:isInclusive xsd:boolean *
  // shexmi:comment """Default value is True. The description statement of a universe is generally stated in inclusive terms such as \"All persons with university degree\". Occasionally a universe is defined by what it excludes, i.e., \"All persons except those with university degree\". In this case the value would be changed to \"false\".""";
  ddi:universe_uses_Concept @ddi:Concept *;
  ddi:universe_narrows_UnitType @ddi:UnitType *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Conceptual"
// shexmi:comment """Definition
============
specialized UnitType, with the specialization based upon characteristics other than time and geography

Examples
==========
1. Canadian adults (not limited to those residing in Canada)
2. Computer companies 
3. Universities

Explanatory notes
===================
Universe sits in a hierarchy between UnitType and Population, with UnitType being most general and Population most specific. A Universe is a set of entities defined by a more narrow specification than that of an underlying UnitType. A Population further narrows the specification to a specific time and geography.

If the Universe consists of people, a number of factors may be used in defining membership in the Universe, such as age, sex, race, residence, income, veteran status, criminal convictions, etc. The universe may consist of elements other than persons, such as housing units, court cases, deaths, countries, etc. A universe may be described as \"inclusive\" or \"exclusive\". 

Not to be confused with Population, which includes the specification of time and geography.

Synonyms
==========


DDI 3.2 mapping
=================
c:UniverseType

RDF mapping
=============


GSIM mapping
==============
Population"""^^mark:

ddi:VariableCollection CLOSED EXTENDS @ddi:AnnotatedIdentifiable {
  ddi:displayLabel @ddi:LabelForDisplay *
  // shexmi:comment """A structured display label providing a fully human readable display for the identification of the object. Supports the use of multiple languages and structured text.""";
  ddi:duplicates xsd:boolean *;
  ddi:groupingSemantic @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """A semantic term defining the factor used for defining this group""";
  ddi:name @ddi:ObjectName *
  // shexmi:comment """A linguistic signifier. Human understandable name (word, phrase, or mnemonic) that reflects the ISO/IEC 11179-5 naming principles. If more than one name is provided provide a context to differentiate usage.""";
  ddi:variableCollection_isDefinedBy_Concept @ddi:Concept *;
  ddi:purpose @ddi:InternationalStructuredString *
  // shexmi:comment """Explanation of the intent of some decision or object. Supports the use of multiple languages and structured text.""";
  ddi:usage @ddi:InternationalStructuredString *
  // shexmi:comment """Explanation of the ways in which some decision or object is employed. Supports the use of multiple languages and structured text.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#Conceptual"
// shexmi:comment """Definition
============
collection (group) of (any type of) Variable within the Variable Cascade (Conceptual, Represented, Instance)

Examples
==========
Variables within a specific section of a study, Variables related to a specific subject or keyword. Variables at a specified level of development or review.

Explanatory notes
===================
A simple ordered or unordered list of variables can be described via a set of VariableIndicator parameters. An optional VariableRelationStructure can describe a more complex structure for the collection. We might, for example, use the VariableRelationStructure to group variables by content within a Study or across a StudySeries.
For the purposes of management, conceptualization or anything other than organizing a logical record or physical layout.

Synonyms
==========


DDI 3.2 mapping
=================
l:VariableGroupType"""^^mark:

ddi:VariableRelationship CLOSED {
  ddi:variableRelationship_hasSource_ConceptualVariable @ddi:ConceptualVariable *;
  ddi:variableRelationship_hasTarget_ConceptualVariable @ddi:ConceptualVariable *;
  ddi:variableRelationship_has_VariableStructure CLOSED EXTENDS @ddi:Identifiable {
    ddi:name @ddi:OrganizationName *;
    ddi:variableStructure_structures_VariableCollection @ddi:VariableCollection *;
    ddi:purpose @ddi:InternationalStructuredString *;
    ddi:semantics @ddi:ExternalControlledVocabularyEntry *
    // shexmi:comment """Provides semantic context for the relationship""";
    ddi:specification @ddi:SpecificationType *
    // shexmi:comment """Provides information on reflexivity, transitivity, and symmetry of relationship using a descriptive term from an ennumeration list.  Use if all relations within this relation structure are of the same specification.""";
    ddi:topology @ddi:TopologyType *;
    ddi:totality @ddi:NewTotalityType *
    // shexmi:comment """Type of relation in terms of totality with respect to an associated collection.""";
  } *;
  ddi:semantics @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """Provides semantic context for the relationship""";
}
// shexmi:package "http://ddi-alliance.org/ns/#Conceptual"
// shexmi:comment """Definition
============
relationship between any Variables in the Variable Cascade (Conceptual, Represented, Instance), based on an ordered relation"""^^mark:


# END ddi:Conceptual Package

# START ddi:DataDescription Package

ddi:ConceptualValue CLOSED EXTENDS @ddi:Concept {
  ddi:conceptualValue_hasConceptFrom_ConceptualDomain @ddi:ConceptualDomain *;
}
// shexmi:package "http://ddi-alliance.org/ns/#DataDescription"

ddi:DataPoint CLOSED EXTENDS @ddi:AnnotatedIdentifiable {
  ddi:dataPoint_has_WideDataSet @ddi:WideDataSet *;
  ddi:dataPoint_has_LongDataSet @ddi:LongDataSet *;
  ddi:dataPoint_has_KeyValueDataStore @ddi:KeyValueDataStore *;
  ddi:dataPoint_isDescribedBy_InstanceVariable @ddi:InstanceVariable *;
  ddi:dataPoint_correspondsTo_DataStructureComponent @ddi:DataStructureComponent *;
  ddi:dataPoint_has_DimensionalDataSet @ddi:DimensionalDataSet *;
}
// shexmi:package "http://ddi-alliance.org/ns/#DataDescription"
// shexmi:comment """Definition
============
A DataPoint is a container for a Datum.

Examples
==========
A cell in a spreadsheet table. Note that this could be empty. It exists independently of the value to be stored in it.

Explanatory notes
===================
The DataPoint is structural and distinct from the value (the Datum) that it holds. [GSIM 1.1]

Synonyms
==========


DDI 3.2 mapping
=================


RDF mapping
=============


GSIM mapping
==============
Data Point"""^^mark:

ddi:Datum CLOSED {
  ddi:datum_uses_InstanceValue @ddi:InstanceValue *;
  ddi:datum_denotes_ConceptualValue @ddi:ConceptualValue *;
  ddi:datum_isBoundedBy_InstanceVariable @ddi:InstanceVariable *;
}
// shexmi:package "http://ddi-alliance.org/ns/#DataDescription"
// shexmi:comment """Definition
============
A Datum is a designation (a representation of a concept by a sign) with a notion of equality defined. The sign itself is a perceivable object.

Examples
==========
A systolic blood pressure of 122 is measured. The Signifier for that measurement in this paragraph is the character string \"122\". The Datum in this case is a kind of Designation (Sign), which is the association of the underlying measured concept (a blood pressure at that level) with that Signifier.  The Datum has an association with an InstanceVariable which allows the attachment of a unit of measurement (mm Hg), a datatype, a Population, and the Act which produced the measurement.  These InstanceVariable attributes are critical for interpreting the Signifier.

Explanatory notes
===================
From GSIM 1.1 \"A Datum is the actual instance of data that was collected or derived. It is the value which populates one or more Data Points. A Datum is the value found in a cell of a table.\" (https://statswiki.unece.org/display/GSIMclick/Datum )  A Datum could be copied to one or more datasets.
DDI4 takes a little more formal (semiotic) description of a Datum using the Signification Pattern. See the attached example.


NOTE: This is NOT datum from DDI3.2 (which is quite specific).

Synonyms
==========


DDI 3.2 mapping
=================


RDF mapping
=============


GSIM mapping
==============
Datum"""^^mark:

ddi:InstanceValue CLOSED {
  ddi:instanceValue_represents_ConceptualValue @ddi:ConceptualValue *;
  ddi:instanceValue_isStoredIn_DataPoint @ddi:DataPoint *;
  ddi:instanceValue_hasValueFrom_ValueDomain @ddi:ValueDomain *;
}
// shexmi:package "http://ddi-alliance.org/ns/#DataDescription"

ddi:Notation CLOSED {
  ddi:notation_represents_Category @ddi:Category *;
}
// shexmi:package "http://ddi-alliance.org/ns/#DataDescription"


# END ddi:DataDescription Package

# START ddi:Components Package

ddi:AttributeComponent CLOSED EXTENDS @ddi:DataStructureComponent {
  ddi:attributeComponent_has_LongDataStructure @ddi:LongDataStructure *;
  ddi:attributeComponent_has_CubeDataStructure @ddi:CubeDataStructure *;
  ddi:attributeComponent_has_WideDataStructure @ddi:WideDataStructure *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Components"
// shexmi:comment """Definition
============
role given to a Represented Variable in the context of a Data Structure, which supplies information other than identification or measures

Examples
==========


Explanatory notes
===================
For example the publication status of an observation (e.g. provisional, final, revised)"""^^mark:

ddi:DataStructureComponent CLOSED {
  ddi:dataStructureComponent_isDefinedBy_RepresentedVariable @ddi:RepresentedVariable *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Components"
// shexmi:comment """"""^^mark:

ddi:DimensionComponent CLOSED EXTENDS @ddi:DataStructureComponent {
  ddi:categoricalAdditivity xsd:boolean *
  // shexmi:comment """True if Categories can be added together (collapsed together) to create higher level Categories.  An example would be age categories. Five year age categories can be collapsed into 10 year age categories.
""";
  ddi:dimensionComponent_has_KeyValueStructure @ddi:KeyValueStructure *;
  ddi:dimensionComponent_isStructuredBy_ValueDomain @ddi:ValueDomain *;
  ddi:dimensionComponent_has_DimensionalDataStructure @ddi:DimensionalDataStructure *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Components"
// shexmi:comment """Definition
============
role given to a Represented Variable in the context of a Data Structure, which supplies meaning to a cell in a multi-dimensional structure

Examples
==========


Explanatory notes
===================
The categories from each dimension often are used to identify a cell. However, the meaning of the combination of the categories supplies meaning to the cell."""^^mark:

ddi:IdentifierComponent CLOSED EXTENDS @ddi:DataStructureComponent {
  ddi:identifierComponent_has_KeyValueStructure @ddi:KeyValueStructure *;
  ddi:identifierComponent_has_WideDataStructure @ddi:WideDataStructure *;
  ddi:identifierComponent_has_LongDataStructure @ddi:LongDataStructure *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Components"
// shexmi:comment """Definition
============
role given to a Represented Variable in the context of a Data Structure to identify the unit in an organized collection of data.

Examples
==========



Explanatory notes
===================
An Identifier Component is a sub-type of Data Structure Component. The personal identification number of a Swedish citizen for unit data or the name of a country in the European Union for dimensional data."""^^mark:

ddi:MeasureComponent CLOSED EXTENDS @ddi:DataStructureComponent {
  ddi:name @ddi:ObjectName *;
  ddi:measureComponent_has_WideDataStructure @ddi:WideDataStructure *;
  ddi:measureComponent_has_CubeDataStructure @ddi:CubeDataStructure *;
  ddi:measureComponent_has_LongDataStructure @ddi:LongDataStructure *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Components"
// shexmi:comment """Definition
============
role given to a Represented Variable in the context of a Data Structure to hold the observed/derived values

Examples
==========



Explanatory notes
===================
A Measure Component is a sub-type of Data Structure Component. For example age and height of a person in a Unit Data Set or number of citizens and number of households in a country in a Data Set for multiple countries (Dimensional Data Set)."""^^mark:

ddi:TimeComponent CLOSED EXTENDS @ddi:AttributeComponent {
  ddi:timeComponent_has_KeyValueStructure @ddi:KeyValueStructure *;
  ddi:type @ddi:TemporalType *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Components"

ddi:TimeInstant CLOSED {
  ddi:timeInstant_has_TimeComponent @ddi:TimeComponent *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Components"

ddi:TimePeriod CLOSED {
  ddi:timePeriod_endsAt_TimeInstant @ddi:TimeInstant *;
  ddi:timePeriod_startsAt_TimeInstant @ddi:TimeInstant *;
  ddi:timePeriod_has_TimeComponent @ddi:TimeComponent *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Components"

ddi:VariableValueComponent CLOSED EXTENDS @ddi:DataStructureComponent {
  ddi:variableValueComponent_has_LongDataStructure @ddi:LongDataStructure *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Components"
// shexmi:comment """Definition
============
role given to a Represented Variable in the context of a Data Structure, which can be used to record values from a list of variables


Examples
==========



Explanatory notes
===================
The names (or pointers) to variables are conceptually in the column of the Long format. This structure provides a mechanism avoiding the need for a formal pointer."""^^mark:

ddi:TemporalType [
  ddi:Effective
  ddi:Event
  ddi:Transaction
  ddi:Valid
]



# END ddi:Components Package

# START ddi:Dimensional Package

ddi:CubeDataStructure CLOSED EXTENDS @ddi:DimensionalDataStructure {
  ddi:cubeDataStructure_uses_DimensionalDataStructure @ddi:DimensionalDataStructure *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Dimensional"

ddi:DimensionalDataSet CLOSED {
  ddi:name @ddi:ObjectName *
  // shexmi:comment """ 
A linguistic signifier. Human understandable name (word, phrase, or mnemonic) that reflects the ISO/IEC 11179-5 naming principles. If more than one name is provided provide a context to differentiate usage. """;
  ddi:dimensionalDataSet_isStructuredBy_DimensionalDataStructure @ddi:DimensionalDataStructure *;
  ddi:dimensionalDataSet_represents_ScopedMeasure CLOSED EXTENDS @ddi:InstanceVariable {
    ddi:frequency @ddi:InternationalStructuredString *
    // shexmi:comment """????????""";
    ddi:name @ddi:ObjectName *
    // shexmi:comment """A linguistic signifier. Human understandable name (word, phrase, or mnemonic) that reflects the ISO/IEC 11179-5 naming principles. If more than one name is provided provide a context to differentiate usage. """;
    ddi:scopedMeasure_generates_RevisableDatum CLOSED EXTENDS @ddi:Datum {
      ddi:revisableDatum_revisedBy_Revision CLOSED {
        ddi:overview @ddi:InternationalStructuredString *;
      } *;
      ddi:vintage xsd:integer *
      // shexmi:comment """A revision sequence number for a Datum in a MeasurementSet""";
    } *;
    ddi:scopedMeasure_restricts_QualifiedMeasure CLOSED EXTENDS @ddi:MeasureComponent {
      ddi:qualifiedMeasure_has_CubeDataStructure @ddi:CubeDataStructure *;
      ddi:qualifiedMeasure_refines_MeasureComponent @ddi:MeasureComponent *;
    } *;
    ddi:scopedMeasure_circumscribes_DimensionalKeyDefintion @ddi:DimensionalKeyDefintion *;
  } *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Dimensional"
// shexmi:comment """Definition
============
Structural N-Cube with each Data Point populated with a Measurement (a set of Datums).
  Numerical additivity means the datatype family allows for adding values in rows or columns


Examples
==========
A Cube with Income values in each cell, where the dimensions organizing the cells are Sex (male, female); Race (white, black, Asian, other); and Marital Status (single, married, divorced, widowed)"""^^mark:

ddi:DimensionalDataStructure CLOSED {
  ddi:name @ddi:ObjectName *
  // shexmi:comment """ 
A linguistic signifier. Human understandable name (word, phrase, or mnemonic) that reflects the ISO/IEC 11179-5 naming principles. If more than one name is provided provide a context to differentiate usage. """;
}
// shexmi:package "http://ddi-alliance.org/ns/#Dimensional"
// shexmi:comment """Definition
============
A multi-dimensional array of DataPoints. 
Categorical additivity means each dimension may be able to be aggregated, either
  by collapsing a dimension, OR
  by aggregating into super-ordinate categories along a dimension


Examples
==========
structure for cube using race, sex, marital status as dimensions, where
  Sex = male, female
  Race = white, black, Asian, other
  Marital status = single, married, divorced, widowed"""^^mark:

ddi:DimensionalKey CLOSED {
  ddi:dimensionalKey_has_DimensionalDataSet @ddi:DimensionalDataSet *;
  ddi:dimensionalKey_identifies_DataPoint @ddi:DataPoint *;
  ddi:dimensionalKey_correspondsTo_Universe @ddi:Universe *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Dimensional"

ddi:DimensionalKeyDefinitionMember CLOSED EXTENDS @ddi:ConceptualValue {
  ddi:dimensionalKeyDefinitionMember_has_DimensionalKeyDefintion @ddi:DimensionalKeyDefintion *;
  ddi:dimensionalKeyDefinitionMember_isRepresentedBy_DimensionalKeyMember CLOSED EXTENDS @ddi:InstanceValue {
    ddi:dimensionalKeyMember_hasValueFrom_CodeList @ddi:CodeList *;
    ddi:dimensionalKeyMember_has_DimensionalKey @ddi:DimensionalKey *;
    ddi:dimensionalKeyMember_isBasedOn_DimensionComponent @ddi:DimensionComponent *;
  } *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Dimensional"

ddi:DimensionalKeyDefintion CLOSED {
  ddi:dimensionalKeyDefintion_isRepresentedBy_DimensionalKey @ddi:DimensionalKey *;
  ddi:dimensionalKeyDefintion_providesSemanticTo_Universe @ddi:Universe *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Dimensional"
// shexmi:comment """Definition
============
An set of Categories, one drawn from each Dimension,  that together form a key for identifying a Cell in the NCube.


Examples
==========
(male, Asian, married)
The order of the Categories is the same as the order of Dimensions for the StructuralNCube
  Sex = male
  Race =Asian
  Marital status = married"""^^mark:


# END ddi:Dimensional Package

# START ddi:KeyValue Package

ddi:InstanceKey CLOSED EXTENDS @ddi:InstanceValue {
  ddi:instanceKey_correspondsTo_Unit @ddi:Unit *;
  ddi:instanceKey_identifies_DataPoint @ddi:DataPoint *;
  ddi:instanceKey_correspondsTo_Universe @ddi:Universe *;
  ddi:instanceKey_refersTo_ReferenceValue @ddi:ReferenceValue *;
  ddi:instanceKey_has_KeyValueDataStore @ddi:KeyValueDataStore *;
}
// shexmi:package "http://ddi-alliance.org/ns/#KeyValue"

ddi:KeyValueDataStore CLOSED {
  ddi:keyValueDataStore_isStructuredBy_KeyValueStructure @ddi:KeyValueStructure *;
}
// shexmi:package "http://ddi-alliance.org/ns/#KeyValue"

ddi:KeyValueStructure CLOSED {
}
// shexmi:package "http://ddi-alliance.org/ns/#KeyValue"

ddi:MainKeyMember CLOSED EXTENDS @ddi:InstanceValue {
  ddi:mainKeyMember_has_InstanceKey @ddi:InstanceKey *;
  ddi:mainKeyMember_isBasedOn_ContextualComponent CLOSED EXTENDS @ddi:DataStructureComponent {
    ddi:contextualComponent_has_KeyValueStructure @ddi:KeyValueStructure *;
  } *;
  ddi:mainKeyMember_isBasedOn_IdentifierComponent @ddi:IdentifierComponent *;
  ddi:mainKeyMember_hasValueFrom_SubstantiveValueDomain @ddi:SubstantiveValueDomain *;
  ddi:mainKeyMember_isBasedOn_SyntheticIdComponent CLOSED EXTENDS @ddi:DataStructureComponent {
    ddi:syntheticIdComponent_has_KeyValueStructure @ddi:KeyValueStructure *;
  } *;
  ddi:mainKeyMember_isBasedOn_DimensionComponent @ddi:DimensionComponent *;
}
// shexmi:package "http://ddi-alliance.org/ns/#KeyValue"

ddi:TimeKeyMember CLOSED EXTENDS @ddi:InstanceValue {
  ddi:timeKeyMember_has_InstanceKey @ddi:InstanceKey *;
  ddi:timeKeyMember_isBasedOn_TimeComponent @ddi:TimeComponent *;
}
// shexmi:package "http://ddi-alliance.org/ns/#KeyValue"


# END ddi:KeyValue Package

# START ddi:Long Package

ddi:Descriptor CLOSED EXTENDS @ddi:InstanceValue {
  ddi:descriptor_refersTo_ReferenceValue @ddi:ReferenceValue *;
  ddi:descriptor_hasValueFrom_DescriptorValueDomain @ddi:DescriptorValueDomain *;
  ddi:descriptor_has_InstanceKey @ddi:InstanceKey *;
  ddi:descriptor_has_LongKey @ddi:LongKey *;
  ddi:descriptor_isBasedOn_VariableDescriptorComponent CLOSED EXTENDS @ddi:DataStructureComponent {
    ddi:variableDescriptorComponent_has_KeyValueStructure @ddi:KeyValueStructure *;
    ddi:variableDescriptorComponent_refersTo_VariableValueComponent @ddi:VariableValueComponent *;
    ddi:variableDescriptorComponent_has_LongDataStructure @ddi:LongDataStructure *;
    ddi:variableDescriptorComponent_isDefinedBy_DescriptorVariable CLOSED EXTENDS @ddi:RepresentedVariable {
      ddi:descriptorVariable_takesSubstantiveValuesFrom_DescriptorValueDomain @ddi:DescriptorValueDomain *;
    } *;
  } *;
  ddi:descriptor_identifies_ReferenceVariable CLOSED EXTENDS @ddi:RepresentedVariable {
    ddi:referenceVariable_takesValuesFrom_ReferenceValueDomain @ddi:ReferenceValueDomain *;
  } *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Long"

ddi:DescriptorValueDomain CLOSED EXTENDS @ddi:SubstantiveValueDomain {
}
// shexmi:package "http://ddi-alliance.org/ns/#Long"

ddi:LongDataSet CLOSED {
  ddi:longDataSet_isStructuredBy_LongDataStructure @ddi:LongDataStructure *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Long"

ddi:LongDataStructure CLOSED {
}
// shexmi:package "http://ddi-alliance.org/ns/#Long"

ddi:LongKey CLOSED {
  ddi:longKey_identifies_DataPoint @ddi:DataPoint *;
  ddi:longKey_has_LongDataSet @ddi:LongDataSet *;
  ddi:longKey_correspondsTo_Unit @ddi:Unit *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Long"

ddi:LongMainKeyMember CLOSED EXTENDS @ddi:InstanceValue {
  ddi:longMainKeyMember_has_LongKey @ddi:LongKey *;
  ddi:longMainKeyMember_isBasedOn_IdentifierComponent @ddi:IdentifierComponent *;
  ddi:longMainKeyMember_IsBasedOn_AttributeComponent @ddi:AttributeComponent *;
  ddi:longMainKeyMember_isBasedOn_MeasureComponent @ddi:MeasureComponent *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Long"

ddi:ReferenceValue CLOSED EXTENDS @ddi:InstanceValue {
  ddi:referenceValue_hasValueFrom_ReferenceValueDomain @ddi:ReferenceValueDomain *;
  ddi:referenceValue_correspondsTo_VariableValueComponent @ddi:VariableValueComponent *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Long"

ddi:ReferenceValueDomain CLOSED EXTENDS @ddi:ValueDomain {
}
// shexmi:package "http://ddi-alliance.org/ns/#Long"


# END ddi:Long Package

# START ddi:Wide Package

ddi:WideDataSet CLOSED {
  ddi:wideDataSet_isStructuredBy_WideDataStructure @ddi:WideDataStructure *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Wide"

ddi:WideDataStructure CLOSED {
}
// shexmi:package "http://ddi-alliance.org/ns/#Wide"

ddi:WideKeyMember CLOSED EXTENDS @ddi:InstanceValue {
  ddi:wideKeyMember_isBasedOn_IdentifierComponent @ddi:IdentifierComponent *;
  ddi:wideKeyMember_has_WideKey CLOSED {
    ddi:wideKey_correspondsTo_Unit @ddi:Unit *;
    ddi:wideKey_has_WideDataSet @ddi:WideDataSet *;
    ddi:wideKey_identifies_DataPoint @ddi:DataPoint *;
  } *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Wide"


# END ddi:Wide Package

# START ddi:Enumerations Package

ddi:CategoryRelationCode [
  ddi:Continuous
  ddi:Interval
  ddi:Nominal
  ddi:Ordinal
  ddi:Ratio
]


ddi:CollectionType [
  ddi:Bag
  ddi:Set
]


ddi:ComputationBaseList [
  ddi:MissingOnly
  ddi:Total
  ddi:ValidOnly
]


ddi:MappingType [
  ddi:CloseMatch
  ddi:Disjoint
  ddi:ExactMatch
]


ddi:PointFormat [
  ddi:DecimalDegree
  ddi:DecimalMinutes
  ddi:DegreesMinutesSeconds
  ddi:Feet
  ddi:Meters
]


ddi:RelationSpecification [
  ddi:AcyclicPrecedence
  ddi:Equivalence
  ddi:GeneralSpecific
  ddi:List
  ddi:ParentChild
  ddi:Unordered
  ddi:WholePart
]


ddi:SexSpecificationType [
  ddi:Feminine
  ddi:GenderNeutral
  ddi:Masculine
]


ddi:ShapeCoded [
  ddi:Circle
  ddi:LinearRing
  ddi:Polygon
  ddi:Rectangle
]


ddi:SpatialObjectPairs [
  ddi:AreaToArea
  ddi:LineToArea
  ddi:LineToLine
  ddi:PointToArea
  ddi:PointToLine
  ddi:PointToPoint
]


ddi:SpatialObjectType [
  ddi:Line
  ddi:LinearRing
  ddi:Point
  ddi:Polygon
  ddi:Raster
]


ddi:SpatialRelationSpecification [
  ddi:Contains
  ddi:Disjoint
  ddi:Equals
  ddi:Intersects
  ddi:Touches
]


ddi:StringStructureType [
  ddi:Other
  ddi:RST
  ddi:XHTML
]


ddi:TableDirectionValues [
  ddi:Auto
  ddi:Ltr
  ddi:Rtl
]


ddi:TemporalRelationSpecification [
  ddi:TemporalContains
  ddi:TemporalEquals
  ddi:TemporalFinishes
  ddi:TemporalMeets
  ddi:TemporalOverlaps
  ddi:TemporalPrecedes
  ddi:TemporalStarts
]


ddi:TextDirectionValues [
  ddi:Auto
  ddi:Inherit
  ddi:Ltr
  ddi:Rtl
]


ddi:TotalityType [
  ddi:Partial
  ddi:Total
  ddi:Unknown
]


ddi:TrimValues [
  ddi:Both
  ddi:End
  ddi:Neither
  ddi:Start
]


ddi:ValueRelationshipType [
  ddi:Equal
  ddi:GreaterThan
  ddi:GreaterThanOrEqualTo
  ddi:LessThan
  ddi:LessThanOrEqualTo
  ddi:NotEqual
]


ddi:WhiteSpaceRule [
  ddi:Collapse
  ddi:Preserve
  ddi:Replace
]



# END ddi:Enumerations Package

# START ddi:FormatDescription Package

ddi:DataPointRelationship CLOSED {
  ddi:dataPointRelationship_hasSource_DataPoint @ddi:DataPoint *;
  ddi:dataPointRelationship_has_PhysicalRecordSegmentStructure CLOSED EXTENDS @ddi:Identifiable {
    ddi:name @ddi:ObjectName *;
    ddi:physicalRecordSegmentStructure_structures_PhysicalRecordSegment @ddi:PhysicalRecordSegment *;
    ddi:purpose @ddi:InternationalStructuredString *;
    ddi:semantics @ddi:ExternalControlledVocabularyEntry *
    // shexmi:comment """Provides semantic context for the relationship""";
    ddi:specification @ddi:SpecificationType *;
    ddi:topology @ddi:TopologyType *;
    ddi:totality @ddi:NewTotalityType *
    // shexmi:comment """Type of relation in terms of totality with respect to an associated collection.""";
  } *;
  ddi:dataPointRelationship_hasTarget_DataPoint @ddi:DataPoint *;
  ddi:semantics @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """Provides semantic context for the relationship""";
}
// shexmi:package "http://ddi-alliance.org/ns/#FormatDescription"
// shexmi:comment """Definition
============
Data Point relations used by the Data Point Relation Structure of a Logical Record to describe specific source target Data Points and their relationship"""^^mark:

ddi:DataStore CLOSED EXTENDS @ddi:AnnotatedIdentifiable {
  ddi:aboutMissing @ddi:InternationalStructuredString *
  // shexmi:comment """General information about missing data, e.g., that missing data have been standardized across the collection, missing data are present because of merging, etc.-  corresponds to DDI2.5 dataMsng.""";
  ddi:characterSet xsd:string *
  // shexmi:comment """Default character set used in the Data Store.""";
  ddi:dataStoreType @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """The type of DataStore. Could be delimited file, fixed record length file, relational database, etc. Points to an external definition which can be part of a controlled vocabulary maintained by the DDI Alliance.""";
  ddi:duplicates xsd:boolean *
  // shexmi:comment """Whether the collection is a bag or a set: a bag is a collection with duplicates allowed, a set is a collection without duplicates.
""";
  ddi:name @ddi:ObjectName *
  // shexmi:comment """A linguistic signifier. Human understandable name (word, phrase, or mnemonic) that reflects the ISO/IEC 11179-5 naming principles. If more than one name is provided provide a context to differentiate usage.""";
  ddi:dataStore_isDefinedBy_Concept @ddi:Concept *;
  ddi:purpose @ddi:InternationalStructuredString *
  // shexmi:comment """Explanation of the intent of some decision or object. Supports the use of multiple languages and structured text.""";
  ddi:recordCount xsd:integer *
  // shexmi:comment """The number of records in the Data Store.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#FormatDescription"
// shexmi:comment """Definition
============
A DataStore is either a SimpleCollection or a StructuredCollection of LogicalRecords, keeping in mind that a LogicalRecords is a definition, not a \"datasets\".

LogicalRecords organized in a StructuredCollection is called a LogicalRecordRelationStructure.

Instances of LogicalRecords instantiated as organizations of DataPoints hosting data are described in FormatDescription.

A DataStore is reusable across studies. Each Study has at most one DataStore.


Examples
==========
The data lineage of an individual BusinessProcess or an entire DataPipeline are both examples of  a LogicalRecordRelationStructures. In a data lineage we can observe how LogicalRecords are connected within a BusinessProcess or across BusinessProcesses.

Explanatory notes
===================


Synonyms
==========
Schema repository, data network

DDI 3.2 mapping
=================


RDF mapping
=============


GSIM mapping
==============
Data Set"""^^mark:

ddi:InstanceVariableMap CLOSED {
  ddi:hasCorrespondenceType @ddi:CorrespondenceType *
  // shexmi:comment """Describes the relationship between the source and target members using both controlled vocabularies and descriptive text. In this context the correspondence refers to the two instance variables, not their value. The relationship would normally be exactMatch.""";
  ddi:instanceVariableMap_hasSource_InstanceVariable @ddi:InstanceVariable *;
  ddi:instanceVariableMap_hasTarget_InstanceVariable @ddi:InstanceVariable *;
  ddi:instanceVariableMap_has_RecordRelation CLOSED EXTENDS @ddi:AnnotatedIdentifiable {
    ddi:displayLabel @ddi:LabelForDisplay *
    // shexmi:comment """A display label for the CollectionCorrespondence. May be expressed in multiple languages. Repeat for labels with different content, for example, labels with differing length limitations.""";
    ddi:recordRelation_has_DataStore @ddi:DataStore *;
    ddi:recordRelation_maps_UnitDataRecord CLOSED EXTENDS @ddi:LogicalRecord {
    } *;
    ddi:purpose @ddi:InternationalStructuredString *
    // shexmi:comment """Explanation of the intent of some decision or object. Supports the use of multiple languages and structured text.""";
    ddi:usage @ddi:InternationalStructuredString *
    // shexmi:comment """Explanation of the ways in which some decision or object is employed. Supports the use of multiple languages and structured text.""";
  } *;
  ddi:setValue @ddi:ValueString *
  // shexmi:comment """A set value for the key source Instance Variables""";
  ddi:valueRelationship @ddi:ValueRelationshipType *
  // shexmi:comment """Relationship between the source and target InstanceVariables or to the setValue if provided""";
}
// shexmi:package "http://ddi-alliance.org/ns/#FormatDescription"
// shexmi:comment """Definition
============
A key value relationship for two or more logical records where the key is one or more equivalent instance variables and the value is a defined relationship or a relationship to a set value. Correspondence type refers to the variables themselves rather than the value of the variables concerned. In this context Correspondence type will normally be set to ExactMatch.

Examples
==========


Explanatory notes
===================
Logical Records: Household and Person, Key: Household ID (HHID in Household Record, HHIDP in Person Record), ValueRelaitonship: Equal, Set Value: n.a."""^^mark:

ABSTRACT ddi:LogicalRecord CLOSED EXTENDS @ddi:VariableCollection {
  ddi:logicalRecord_isDefinedBy_Concept @ddi:Concept *;
  ddi:logicalRecord_has_DataStore @ddi:DataStore *;
}
// shexmi:package "http://ddi-alliance.org/ns/#FormatDescription"
// shexmi:comment """Definition
============
The LogicalRecord is a record definition. It is abstract.

The actual realization of record definitions are provided by the UnitDataRecord and the DataCube. UnitDataRecords support two types of record definitions. The first is based on the SimpleCollection it inherits from LogicalRecord. The second type is a StructuredCollection that specializes the LogicalRecord. As a SimpleCollection a UnitDataRecord can, for example, provide table definitions. As a StructuredCollection, UnitDataRecord can define structures comparable to a \"struct\" in C or a JSON nested object. A UnitDataRecord, then, inherits SimpleCollection from LogicalRecord but adds its own StructuredCollection into the mix. The DataCube brings into play its own StructuredCollection which is distinct from the UnitDataRecord StructuredCollection.The DataCube StructuredCollection is not currently in scope.

The various record definitions -- simple and structured -- when they are actually instantiated with data is described by the PhysicalLayout of a LogicalRecord in the FormatDescription package. The PhysicalLayout places data into DataPoints formed at the direction of a LogicalRecord and its instance variables. At this point a LogicalRecord turn into a \"dataset\" that hosts unit records, A record definition is not a record. So we conflate metadata and data when we refer to a LogicalRecord as an empty table.

Examples
==========
SQL Data Definition Language (DDL) traffics in record definitions. SQL queries on \"system tables\" discover record definitions.

Explanatory notes
===================
In GSIM a DataPoint is a member of a \"DataSet\" and a UnitDataRecord. Since a DataPoint contains \"Datum\", this can lead to the conflation of a DataSet and a record definition. In the presence of a DataPoint it is difficult to be clear that a record definition does not have any rows. 

In DDI4 we defer the introduction of DataPoints until PhysicalLayouts are described. In this approach the instance variables that make up a LogicalRecord work downstream where they help to give each DataPoint in a PhysicalRecord its format.

Synonyms
==========
Record Type, Data Structure

DDI 3.2 mapping
=================
l:LogicalRecordType

RDF mapping
=============


GSIM mapping
==============
Data Structure"""^^mark:

ddi:LogicalRecordPosition CLOSED {
  ddi:logicalRecordPosition_indexes_LogicalRecord @ddi:LogicalRecord *;
  ddi:logicalRecordPosition_has_DataStore @ddi:DataStore *;
  ddi:value xsd:integer *
  // shexmi:comment """Index value of member in an ordered array""";
}
// shexmi:package "http://ddi-alliance.org/ns/#FormatDescription"
// shexmi:comment """Definition
============
Member Indicator for use with member type LogicalRecord"""^^mark:

ddi:LogicalRecordRelationship CLOSED {
  ddi:logicalRecordRelationship_has_LogicalRecordRelationStructure CLOSED EXTENDS @ddi:Identifiable {
    ddi:name @ddi:ObjectName *;
    ddi:logicalRecordRelationStructure_structures_DataStore @ddi:DataStore *;
    ddi:purpose @ddi:InternationalStructuredString *;
    ddi:semantics @ddi:ExternalControlledVocabularyEntry *
    // shexmi:comment """Provides semantic context for the relationship""";
    ddi:specification @ddi:SpecificationType *;
    ddi:topology @ddi:TopologyType *;
    ddi:totality @ddi:NewTotalityType *
    // shexmi:comment """Type of relation in terms of totality with respect to an associated collection.""";
  } *;
  ddi:logicalRecordRelationship_hasTarget_LogicalRecord @ddi:LogicalRecord *;
  ddi:logicalRecordRelationship_hasSource_LogicalRecord @ddi:LogicalRecord *;
  ddi:semantics @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """Provides semantic context for the relationship""";
}
// shexmi:package "http://ddi-alliance.org/ns/#FormatDescription"
// shexmi:comment """Definition
============
Defines complex relationship between LogicalRecords."""^^mark:

ddi:PhysicalDataSet CLOSED EXTENDS @ddi:AnnotatedIdentifiable {
  ddi:duplicates xsd:boolean *
  // shexmi:comment """When duplicates is true it means the same Member can appear more than once in the Collection. In this case, the Collection is a Bag. 

When duplicates is false, then every Member is unique in the Collection. In this case, the Collection is a Set.
""";
  ddi:name @ddi:ObjectName *
  // shexmi:comment """A linguistic signifier. Human understandable name (word, phrase, or mnemonic) that reflects the ISO/IEC 11179-5 naming principles. If more than one name is provided <font color=\"#dc143c\">then a context to differentiate usage must be provided as well</font>.""";
  ddi:numberOfSegments xsd:integer *
  // shexmi:comment """The number of segments in a Physical Data Product""";
  ddi:overview @ddi:InternationalStructuredString *
  // shexmi:comment """Short natural language account of the information obtained from the combination of properties and relationships associated with an object. Supports the use of multiple languages and structured text.""";
  ddi:physicalDataSet_isDefinedBy_Concept @ddi:Concept *;
  ddi:physicalDataSet_formatsDataStore_DataStore @ddi:DataStore *;
  ddi:physicalFileName xsd:string *
  // shexmi:comment """Use when multiple physical segments are stored in a single file""";
  ddi:purpose @ddi:InternationalStructuredString *
  // shexmi:comment """An explanation of the purpose of the physical dataset""";
}
// shexmi:package "http://ddi-alliance.org/ns/#FormatDescription"
// shexmi:comment """Definition
============
The information needed for understanding the physical structure of data coming from a file or other source. A StructureDescription also points to the Data Store it physically represents.

Examples
==========
The PhysicalDataProduct is the entry point for information about a file or other source. It includes information about the name of a file, the structure of segments in a file and the layout of segments.

Explanatory notes
===================
Multiple styles of structural description are supported: including describing files as unit-record (UnitSegmentLayout) files; describing cubes; and describing event-history (spell) data.

Synonyms
==========


DDI 3.2 mapping
=================
p:PhysicalDataProductType"""^^mark:

ddi:PhysicalRecordSegmenPosition CLOSED {
  ddi:physicalRecordSegmenPosition_isMemberOf_PhysicalRecordSegment @ddi:PhysicalRecordSegment *;
  ddi:physicalRecordSegmenPosition_has_PhysicalDataSet @ddi:PhysicalDataSet *;
  ddi:value xsd:integer *
  // shexmi:comment """Index value of member in an ordered array""";
}
// shexmi:package "http://ddi-alliance.org/ns/#FormatDescription"
// shexmi:comment """Definition
============
Member Indicator for use with member type PhysicalRecordSegment"""^^mark:

ddi:PhysicalRecordSegment CLOSED EXTENDS @ddi:AnnotatedIdentifiable {
  ddi:duplicates xsd:boolean *
  // shexmi:comment """When duplicates is true it means the same Member can appear more than once in the Collection. In this case, the Collection is a Bag. 

When duplicates is false, then every Member is unique in the Collection. In this case, the Collection is a Set.""";
  ddi:name @ddi:ObjectName *
  // shexmi:comment """A linguistic signifier. Human understandable name (word, phrase, or mnemonic) that reflects the ISO/IEC 11179-5 naming principles. If more than one name is provided <font color=\"#dc143c\">then a context to differentiate usage must be provided as well</font>.
""";
  ddi:physicalRecordSegment_has_PhysicalDataSet @ddi:PhysicalDataSet *;
  ddi:physicalRecordSegment_has_PhysicalSegmentLayout @ddi:PhysicalSegmentLayout *;
  ddi:physicalRecordSegment_has_DataPointPosition CLOSED {
    ddi:dataPointPosition_indexes_DataPoint @ddi:DataPoint *;
    ddi:value xsd:integer *;
  } *
  // shexmi:partonomy shexmi:compositeAggregation;
  ddi:physicalRecordSegment_isDefinedBy_Concept @ddi:Concept *;
  ddi:physicalRecordSegment_has_DataPoint @ddi:DataPoint *
  // shexmi:partonomy shexmi:sharedAggregation;
  ddi:physicalRecordSegment_mapsTo_LogicalRecord @ddi:LogicalRecord *;
  ddi:physicalRecordSegment_represents_Population @ddi:Population *;
  ddi:physicalFileName xsd:string *
  // shexmi:comment """Use when each physical segment is stored in its own file.""";
  ddi:purpose @ddi:InternationalStructuredString *
  // shexmi:comment """Explanation of the intent of some decision or object. Supports the use of multiple languages and structured text.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#FormatDescription"
// shexmi:comment """Definition
============
A description of each physical storage segment required to completely cover the logical record. A logical record may be stored in one or more segments housed hierarchically in a single file or in separate data files. All logical records have at least one segment.

Examples
==========
The file below has four InstanceVariables: PersonId, SegmentId, AgeYr, HeightCm. The data for each person (identified by PersonId) is recorded in two segments (identified by SegmentId), \"a\" and \"b\". AgeYr is on physical segment a, and HeightCm is on segment b. These are the same data as described in the UnitSegmentLayout documentation.
1 a  22
1 b 183
2 a 45
2 b 175


Explanatory notes
===================


Synonyms
==========


DDI 3.2 mapping
=================
p:PhysicalRecordSegmentType"""^^mark:

ddi:PhysicalRecordSegmentRelationship CLOSED {
  ddi:physicalRecordSegmentRelationship_hasSource_PhysicalRecordSegment @ddi:PhysicalRecordSegment *;
  ddi:physicalRecordSegmentRelationship_has_PhysicalDataSetStructure CLOSED EXTENDS @ddi:Identifiable {
    ddi:name @ddi:ObjectName *
    // shexmi:comment """A linguistic signifier. Human understandable name (word, phrase, or mnemonic) that reflects the ISO/IEC 11179-5 naming principles. If more than one name is provided <font color=\"#dc143c\">then a context to differentiate usage must be provided as well</font>.
  
  """;
    ddi:physicalDataSetStructure_structures_PhysicalDataSet @ddi:PhysicalDataSet *;
    ddi:purpose @ddi:InternationalStructuredString *
    // shexmi:comment """An explanation of the purpose of the relation structure""";
    ddi:semantics @ddi:ExternalControlledVocabularyEntry *
    // shexmi:comment """Provides semantic context for the relationship""";
    ddi:specification @ddi:SpecificationType *
    // shexmi:comment """Indicates the mathematical properties of the structure.
  """;
    ddi:topology @ddi:TopologyType *
    // shexmi:comment """Indicates the form of the associations among members of the Collection.""";
    ddi:totality @ddi:NewTotalityType *
    // shexmi:comment """Type of relation in terms of totality with respect to an associated collection.""";
  } *;
  ddi:physicalRecordSegmentRelationship_hasTarget_PhysicalRecordSegment @ddi:PhysicalRecordSegment *;
  ddi:semantics @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """Provides semantic context for the relationship""";
}
// shexmi:package "http://ddi-alliance.org/ns/#FormatDescription"
// shexmi:comment """Definition
============
Defines structured relationship between PhysicalRecordSegments."""^^mark:

ABSTRACT ddi:PhysicalSegmentLayout CLOSED EXTENDS @ddi:AnnotatedIdentifiable {
  ddi:arrayBase xsd:integer *
  // shexmi:comment """Number cells, rows, columns starting from this value. This is a DDI notion allowing numbering of columns, rows, etc. from either 0 or 1. W3C appears to just use 1. From https://www.w3.org/TR/tabular-data-model/ 4.3 “number — the position of the column amongst the columns for the associated table, starting from 1.”""";
  ddi:commentPrefix xsd:string *
  // shexmi:comment """A string used to indicate that an input line is a comment, a string which precedes a comment in the data file.  From https://www.w3.org/TR/tabular-metadata/  5.9 Dialect  commentPrefix: “An atomic property that sets the comment prefix flag to the single provided value, which MUST be a string. The default is \"#\".”""";
  ddi:contains CLOSED {
    ddi:index xsd:integer *
    // shexmi:comment """Index value of member in an ordered array""";
    ddi:valueMappingIndicator_member_ValueMapping @ddi:ValueMapping *;
  } *
  // shexmi:comment """The PhysicalLayout contains a description of the physical representation of each InstanceVariable in a ValueMapping. This relationship fills the role of \"Contains\" from the Collection pattern. Allows for the identification of the member and optionally provides an index for the member within an ordered array""";
  ddi:delimiter xsd:string *
  // shexmi:comment """The Delimiting character in the data. Must be used if isDelimited is true. \"The separator between cells, set by the delimiter property of a dialect description. The default is ,.\" see https://www.w3.org/TR/tabular-data-model/#encoding  From https://www.w3.org/TR/tabular-metadata/  5.9 Dialect  delimiter: “An atomic property that sets the delimiter flag to the single provided value, which MUST be a string. The default is \",\".” From https://www.w3.org/TR/tabular-data-model/ 8 “The separator between cells, set by the delimiter property of a dialect description. The default is ,.” From http://specs.frictionlessdata.io/csv-dialect/ delimiter:  “specifies a one-character string to use as the field separator. Default = ,”""";
  ddi:encoding @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """The character encoding of the represented data. From https://www.w3.org/TR/tabular-metadata/ 5.9 Dialect: encoding: “An atomic property that sets the encoding flag to the single provided string value, which MUST be a defined in [encoding]. The default is \"utf-8\".”     From https://www.w3.org/TR/tabular-metadata/ 7.2 Encoding:  “CSV files should be encoded using UTF-8, and should be in Unicode Normal Form C as defined in [UAX15]. If a CSV file is not encoded using UTF-8, the encoding should be specified through the charset parameter in the Content-Type header:”""";
  ddi:escapeCharacter xsd:string *
  // shexmi:comment """\"The string that is used to escape the quote character within escaped cells, or null\"  see https://www.w3.org/TR/tabular-data-model/#encoding From https://www.w3.org/TR/tabular-metadata/  5.9 Dialect   “ doupleQuote: A boolean atomic property that, if true, sets the escape character flag to \". If false, to \\. The default is true.” From http://specs.frictionlessdata.io/csv-dialect/ doubleQuote: “controls the handling of quotes inside fields. If true, two consecutive quotes should be interpreted as one. Default = true”""";
  ddi:hasHeader xsd:boolean *
  // shexmi:comment """True if the file contains a header containing column names. From https://www.w3.org/TR/tabular-metadata/  5.9 Dialect  header: “A boolean atomic property that, if true, sets the header row count flag to 1, and if false to 0, unless headerRowCount is provided, in which case the value provided for the header property is ignored. The default is true.” From http://specs.frictionlessdata.io/csv-dialect/ header: “indicates whether the file includes a header row. If true the first row in the file is a header row, not data. Default = true”""";
  ddi:headerIsCaseSensitive xsd:boolean *
  // shexmi:comment """If True, the case of the labels in the header is significant. From http://specs.frictionlessdata.io/csv-dialect/ caseSensitiveHeader: “indicates that case in the header is meaningful. For example, columns CAT and Cat should not be equated. Default = false”""";
  ddi:headerRowCount xsd:integer *
  // shexmi:comment """The number of lines in the header From https://www.w3.org/TR/tabular-metadata/  5.9 Dialect  headerRowCount: “A numeric atomic property that sets the header row count flag to the single provided value, which MUST be a non-negative integer. The default is 1.”""";
  ddi:isDelimited xsd:boolean *
  // shexmi:comment """Indicates that the data are in a delimited format. If not set to true, is FixedWitdh must be set to true.""";
  ddi:isFixedWidth xsd:boolean *
  // shexmi:comment """Set to true if the file is fixed-width. If true, isDelimited must be set to false.""";
  ddi:isOrdered xsd:boolean *
  // shexmi:comment """If members are ordered set to true, if unordered set to false.""";
  ddi:lineTerminator xsd:string *
  // shexmi:comment """\"The strings that can be used at the end of a row, set by the lineTerminators property of a dialect description. The default is [CRLF, LF].\"  see https://www.w3.org/TR/tabular-data-model/#encoding From https://www.w3.org/TR/tabular-metadata/  5.9 Dialect  lineTerminators: “An atomic property that sets the line terminators flag to either an array containing the single provided string value, or the provided array. The default is [\"\\r\\n\", \"\\n\"].” From http://specs.frictionlessdata.io/csv-dialect/ lineTerminator: “specifies the character sequence which should terminate rows. Default = \\r\\n”""";
  ddi:name @ddi:ObjectName *
  // shexmi:comment """A linguistic signifier. Human understandable name (word, phrase, or mnemonic) that reflects the ISO/IEC 11179-5 naming principles. If more than one name is provided provide a context to differentiate usage.""";
  ddi:nullSequence xsd:string *
  // shexmi:comment """A string indicating a null value. From https://www.w3.org/TR/tabular-metadata/ 4.3 “null — the string or strings which cause the value of cells having string value matching any of these values to be null.” From Inherited 5.7 null: “An atomic property giving the string or strings used for null values within the data. If the string value of the cell is equal to any one of these values, the cell value is null. See Parsing Cells in [tabular-data-model] for more details. If not specified, the default for the null property is the empty string \"\". The value of this property becomes the null annotation for the described column.” From http://specs.frictionlessdata.io/csv-dialect/ nullSequence: “specifies the null sequence (for example \\N). Not set by default”""";
  ddi:overview @ddi:InternationalStructuredString *
  // shexmi:comment """Short natural language account of the physical layout obtained from the combination of associated  properties and relationships. Supports the use of multiple languages and structured text.""";
  ddi:physicalSegmentLayout_isDefinedBy_Concept @ddi:Concept *;
  ddi:physicalSegmentLayout_formats_LogicalRecord @ddi:LogicalRecord *;
  ddi:physicalSegmentLayout_isStructuredBy_PhysicalLayoutRelationStructure CLOSED EXTENDS @ddi:Identifiable {
    ddi:criteria @ddi:InternationalStructuredString *
    // shexmi:comment """Intensional definition of the order criteria (e.g. alphabetical, numerical, increasing, decreasing, etc.)""";
    ddi:hasMemberRelation CLOSED {
      ddi:hasRelationSpecification @ddi:RelationSpecification *
      // shexmi:comment """Provides information on reflexivity, transitivity, and symmetry of relationship using a descriptive term from an ennumeration list""";
      ddi:valueMappingRelation_source_ValueMapping @ddi:ValueMapping *;
      ddi:valueMappingRelation_target_ValueMapping @ddi:ValueMapping *;
      ddi:semantic @ddi:ExternalControlledVocabularyEntry *
      // shexmi:comment """Provides semantic context for the relationship""";
      ddi:totality @ddi:TotalityType *
      // shexmi:comment """Type of relation in terms of totality with respect to an associated collection.""";
    } *
    // shexmi:comment """Specifics of relations between InstanceVariables in the PhysicalLayout""";
    ddi:hasRelationSpecification @ddi:RelationSpecification *
    // shexmi:comment """Provides information on reflexivity, transitivity, and symmetry of relationship using a descriptive term from an ennumeration list.  Use if all relations within this relation structure are of the same specification.""";
    ddi:semantic @ddi:ExternalControlledVocabularyEntry *
    // shexmi:comment """Provides semantic context for the relationship""";
    ddi:totality @ddi:TotalityType *
    // shexmi:comment """Type of relation in terms of totality with respect to an associated collection.""";
  } *;
  ddi:purpose @ddi:InternationalStructuredString *
  // shexmi:comment """Explanation of the intent of some decision or object. Supports the use of multiple languages and structured text.""";
  ddi:quoteCharacter xsd:string *
  // shexmi:comment """The string that is used around escaped cells, or null, set by the quoteChar property of a dialect description. The default is \". see https://www.w3.org/TR/tabular-data-model/#encoding From https://www.w3.org/TR/tabular-metadata/  5.9 Dialect  quoteChar: “An atomic property that sets the quote character flag to the single provided value, which MUST be a string or null. If the value is null, the escape character flag is also set to null. The default is '\"'.” From http://specs.frictionlessdata.io/csv-dialect/ quoteChar: “specifies a one-character string to use as the quoting character. Default = \"”""";
  ddi:skipBlankRows xsd:boolean *
  // shexmi:comment """If True, blank rows are ignored. From https://www.w3.org/TR/tabular-metadata/  5.9 Dialect  skipBlankRows: “A boolean atomic property that sets the skip blank rows flag to the single provided boolean value. The default is false.”""";
  ddi:skipDataColumns xsd:integer *
  // shexmi:comment """The number of columns to skip at the beginning of the row. From https://www.w3.org/TR/tabular-metadata/  5.9 Dialect  skipColumns: “A numeric atomic property that sets the skip columns flag to the single provided numeric value, which MUST be a non-negative integer. The default is 0.” See also https://www.w3.org/TR/tabular-metadata/ 8 skip columns: “The number of columns to skip at the beginning of each row, set by the skipColumns property of a dialect description. The default is 0. A value other than 0 will mean that the source numbers of columns will be different from their numbers.”""";
  ddi:skipInitialSpace xsd:boolean *
  // shexmi:comment """If true skip spaces at the beginning of a line or following a delimiter. From https://www.w3.org/TR/tabular-metadata/  5.9 Dialect  skipInitialSpace: “A boolean atomic property that, if true, sets the trim flag to \"start\" and if false, to false. If the trim property is provided, the skipInitialSpace property is ignored. The default is false.” From http://specs.frictionlessdata.io/csv-dialect/ skipInitialSpace: “specifies how to interpret whitespace which immediately follows a delimiter; if false, it means that whitespace immediately after a delimiter should be treated as part of the following field. Default = true”""";
  ddi:skipRows xsd:integer *
  // shexmi:comment """Number of input rows to skip preceding the header or data From https://www.w3.org/TR/tabular-metadata/  5.9 Dialect  skipRows: “A numeric atomic property that sets the skip rows flag to the single provided numeric value, which MUST be a non-negative integer. The default is 0.” From https://www.w3.org/TR/tabular-metadata/ 8  skip rows: “The number of rows to skip at the beginning of the file, before a header row or tabular data, set by the skipRows property of a dialect description. The default is 0. A value greater than 0 will mean that the source numbers of rows will be different from their numbers.”""";
  ddi:tableDirection @ddi:TableDirectionValues *
  // shexmi:comment """Indicates the direction in which columns are arranged in each row. From https://www.w3.org/TR/tabular-metadata/  5.3.2 tableDirection: “An atomic property that MUST have a single string value that is one of \"rtl\", \"ltr\", or \"auto\". Indicates whether the tables in the group should be displayed with the first column on the right, on the left, or based on the first character in the table that has a specific direction. The value of this property becomes the value of the table direction annotation for all the tables in the table group. See Bidirectional Tables in [tabular-data-model] for details. The default value for this property is \"auto\".”""";
  ddi:textDirection @ddi:TextDirectionValues *
  // shexmi:comment """Indicates the reading order of text within cells. From https://www.w3.org/TR/tabular-metadata/ Inherited 5.7 textDirection: “An atomic property that MUST have a single string value that is one of \"ltr\", \"rtl\", \"auto\" or \"inherit\" (the default). Indicates whether the text within cells should be displayed as left-to-right text (ltr), as right-to-left text (rtl), according to the content of the cell (auto) or in the direction inherited from the table direction annotation of the table. The value of this property determines the text direction annotation for the column, and the text direction annotation for the cells within that column: if the value is inherit then the value of the text direction annotation is the value of the table direction annotation on the table, otherwise it is the value of this property. See Bidirectional Tables in [tabular-data-model] for details.”""";
  ddi:treatConsecutiveDelimitersAsOne xsd:boolean *
  // shexmi:comment """If True, consecutive delimiters are treated the same way as a single delimiter, if false consiecutive delimiters indicate a missing value. From PHDD consecutiveDelimitersAsOne: “Indicates how consecutive delimiters should be handed by the software. Equivalent element in DDI 3.2: p:Delimiter/@treatConsecutiveDelimiterAsOne DDI 3.2 Documentation: http://www.ddialliance.org/Specification/DDI-Lifecycle/3.2/XMLSchema/FieldLevelDocumentation/schemas/reusable_xsd/complexTypes/DelimiterType.html#a6”""";
  ddi:trim @ddi:TrimValues *
  // shexmi:comment """Specifies which spaces to remove from a data value (start, end, both, neither) From https://www.w3.org/TR/tabular-metadata/  5.9 Dialect  trim: “An atomic property that, if the boolean true, sets the trim flag to true and if the boolean false to false. If the value provided is a string, sets the trim flag to the provided value, which MUST be one of \"true\", \"false\", \"start\", or \"end\". The default is true.”""";
  ddi:type @ddi:CollectionType *
  // shexmi:comment """Whether the collection is a bag or a set: a bag is a collection with duplicates allowed, a set is a collection without duplicates.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#FormatDescription"
// shexmi:comment """Definition
============
The PhysicalSegmentLayout is an abstract class used as an extension point in the description of the different layout styles of data structure description.

Examples
==========
Examples include UnitSegmentLayouts, event data layouts, and cube layouts (e.g. summary data).

Explanatory notes
===================
A PhysicalLayout is a physical description (e.g. UnitSegmentLayout) of the associated Logical Record Layout consisting of a Collection of Value Mappings describing the physical interrelationship of each related ValueMapping and associated Instance Variable."""^^mark:

ABSTRACT ddi:PhysicalSegmentLocation CLOSED EXTENDS @ddi:AnnotatedIdentifiable {
}
// shexmi:package "http://ddi-alliance.org/ns/#FormatDescription"
// shexmi:comment """Definition
============
Among other things defines the location of a DataPoint in a PhysicalSegment (e.g. the location of the representation of a variable in a text file). This is abstract since there are many different ways to describe the location of a segment - character counts, start and end times, etc.

Examples
==========
A segment of text in a plain text file beginning at character 3 and ending at character 123.

Explanatory notes
===================
While this has no properties or relationships of its own, it is useful as a target of relationships where its extensions may serve."""^^mark:

ddi:SegmentByText CLOSED EXTENDS @ddi:PhysicalSegmentLocation {
  ddi:characterLength xsd:integer *
  // shexmi:comment """The number of characters in the segment. The segment may include text from multiple lines of the resource. If it does, the length includes any line termination characters.""";
  ddi:endCharacterPosition xsd:integer *
  // shexmi:comment """The character position of the last character of the segment.  If endLine is specified, the count begins at character 1 of endLine. If startLine and endLine are not specified, the count begins at character 1 of the first line of the resource and the count includes any line termination characters. The resulting segment may include text from multiple lines of the resource.""";
  ddi:endLine xsd:integer *
  // shexmi:comment """The last line on which to count characters. If missing this defaults to startLine.""";
  ddi:startCharacterPosition xsd:integer *
  // shexmi:comment """The character position of the first character of the segment, with the count beginning at character 1 of startLine.""";
  ddi:startLine xsd:integer *
  // shexmi:comment """The line number, where 1 is the first line, on which to begin counting characters. If missing this defaults to 1 (the first line).""";
}
// shexmi:package "http://ddi-alliance.org/ns/#FormatDescription"
// shexmi:comment """Definition
============
Defines the location of a segment of text through character, and optionally line, counts. An adequate description will always include a startCharacterPosition and then may include an endCharacterPosition or a characterLength.
If StartLine is specified, the character counts begin within that line.
An endCharacterPosition of 0 indicates that whole lines are specified


Examples
==========
The segment beginning at line 3, character 4 and ending at line 27 character 13.
Alternatively the segment beginning at character 257 and ending at character 1350 of the whole body of text.
StartLine of 10, endLine of 12, startCharacterPosition of 1, endCharacterPosition of 0 means all of lines 10,11, and 12."""^^mark:

ddi:UnitSegmentLayout CLOSED EXTENDS @ddi:PhysicalSegmentLayout {
}
// shexmi:package "http://ddi-alliance.org/ns/#FormatDescription"
// shexmi:comment """Definition
============
UnitSegmentLayout supports the description of unit-record (\"wide\") data sets, where each row in the data set provides the same group of values for variables all relating to a single unit. Each logical column will contain data relating to the values for a single variable. 

Examples
==========
A simple spreadsheet. Commonly the first row of the table will contain variable names or descriptions.

The following csv file has a rectangular layout and would import into a simple table in a spreadsheet:
PersonId,AgeYr,HeightCm
1,22,183
2,45,175


Explanatory notes
===================
This is the classic rectangular data table used by most statistical packages, with rows/cases/observations and columns/variables/measurements. Each cell (DataPoint) in the table is the intersection of a Unit (row) and an InstanceVariable."""^^mark:

ddi:ValueMapping CLOSED EXTENDS @ddi:Identifiable {
  ddi:decimalPositions xsd:integer *
  // shexmi:comment """The number of decimal positions expressed as an integer. Used when the decimal position is implied (no decimal separator is present) See DDI 3.2 ManagedNumericRepresentation@decimalPositions""";
  ddi:defaultDecimalSeparator @ddi:Char *
  // shexmi:comment """Default value is . (period). The string separating the integer part from the fractional part of a decimal or real number. In W3C part of the datatype format From https://www.w3.org/TR/tabular-metadata/ tabular 6.4.2 decimalChar: “A string whose value is used to represent a decimal point within the number. If the supplied value is not a string, implementations MUST issue a warning and proceed as if the property had not been specified.”""";
  ddi:defaultDigitGroupSeparator @ddi:Char *
  // shexmi:comment """Default value is null. A string separating groups of digits (for readability). In W3C part of the datatype format From https://www.w3.org/TR/tabular-metadata/ tabular 6.4.2 groupChar: “A string whose value is used to group digits within the number. If the supplied value is not a string, implementations MUST issue a warning and proceed as if the property had not been specified.”""";
  ddi:defaultValue @ddi:ValueString *
  // shexmi:comment """A default string indicating the value to substitute for an empty string. From https://www.w3.org/TR/tabular-metadata/ Inherited 5.7  default “An atomic property holding a single string that is used to create a default value for the cell in cases where the original string value is an empty string. See Parsing Cells in [tabular-data-model] for more details. If not specified, the default for the default property is the empty string, \"\". The value of this property becomes the default annotation for the described column.”""";
  ddi:format @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """This defines the format of the physical representation of the value. From https://www.w3.org/TR/tabular-metadata/  5.11.2 format: “An atomic property that contains either a single string or an object that defines the format of a value of this type, used when parsing a string value as described in Parsing Cells in [tabular-data-model]. The value of this property becomes the format annotation for the described datatype.” See https://www.w3.org/TR/tabular-metadata/ Tabular 6.4.2 ‘Formats for numeric datatypes’  this may include decimalChar, groupChar, pattern  “By default, numeric values must be in the formats defined in [xmlschema11-2]. It is not uncommon for numbers within tabular data to be formatted for human consumption, which may involve using commas for decimal points, grouping digits in the number using commas, or adding percent signs to the number.” See https://www.w3.org/TR/tabular-metadata/ Tabular 6.4. Formats for Booleans   ” Boolean values may be represented in many ways aside from the standard 1 and 0 or true and false.” See https://www.w3.org/TR/tabular-metadata/ 6.4.4. Formats for dates and times “By default, dates and times are assumed to be in the format defined in [xmlschema11-2]. However dates and times are commonly represented in tabular data in other formats.” See https://www.w3.org/TR/tabular-metadata/ 6.4.5 Formats for durations “Durations MUST be formatted and interpreted as defined in [xmlschema11-2], using the [ISO8601] format -?PnYnMnDTnHnMnS. For example, the duration P1Y1D is used for a year and a day; the duration PT2H30M for 2 hours and 30 minutes.” See  https://www.w3.org/TR/tabular-metadata/ 6.4.6 Formats for other types “If the datatype base is not numeric, boolean, a date/time type, or a duration type, the datatype format annotation provides a regular expression for the string values, with syntax and processing defined by [ECMASCRIPT]. If the supplied value is not a valid regular expression, implementations MUST issue a warning and proceed as if no format had been provided.” From DDI3.2 ManagedNumericRepresentation@format “A format for number expressed as a string.” From DDI3.2 ManagedDateTimeRepresentation_DateFieldFormat “Describes the format of the date field, in formats such as YYYY/MM or MM-DD-YY, etc. If this element is omitted, then the format is assumed to be the XML Schema format corresponding to the type attribute value.”""";
  ddi:isRequired xsd:boolean *
  // shexmi:comment """If True a value is required for this variable. NOTE: this might be better at the InstanceVariable or higher in the variable cascade. From https://www.w3.org/TR/tabular-metadata/ Inherited 5.7 required: “A boolean atomic property taking a single value which indicates whether the cell value can be null. See Parsing Cells in [tabular-data-model] for more details. The default is false, which means cells can have null values. The value of this property becomes the required annotation for the described column.”""";
  ddi:length xsd:integer *
  // shexmi:comment """The length of the physical representation of the value. From https://www.w3.org/TR/tabular-metadata/  5.11.2 length: “A numeric atomic property that contains a single integer that is the exact length of the value. The value of this property becomes the length annotation for the described datatype. See Length Constraints in [tabular-data-model] for details.” Corresponds to DDI2.5 var/location/width and DDI 3.2 PhysicalLocation/Width""";
  ddi:maximumLength xsd:integer *
  // shexmi:comment """The largest possible value of the length of the physical representation of the value. From https://www.w3.org/TR/tabular-metadata/  5.11.2 maxLength: “A numeric atomic property that contains a single integer that is the maximum length of the value. The value of this property becomes the maximum length annotation for the described datatype. See Length Constraints in [tabular-data-model] for details.”""";
  ddi:minimumLength xsd:integer *
  // shexmi:comment """The smallest possible value for the length of the physical representation of the value. From https://www.w3.org/TR/tabular-metadata/  5.11.2 minLength: “An atomic property that contains a single integer that is the minimum length of the value. The value of this property becomes the minimum length annotation for the described datatype. See Length Constraints in [tabular-data-model] for details.”""";
  ddi:nullSequence xsd:string *
  // shexmi:comment """A string indicating a null value. From https://www.w3.org/TR/tabular-metadata/ 4.3 null — “the string or strings which cause the value of cells having string value matching any of these values to be null.” From Inherited 5.7 null: “An atomic property giving the string or strings used for null values within the data. If the string value of the cell is equal to any one of these values, the cell value is null. See Parsing Cells in [tabular-data-model] for more details. If not specified, the default for the null property is the empty string \"\". The value of this property becomes the null annotation for the described column.”""";
  ddi:numberPattern xsd:string *
  // shexmi:comment """A pattern description of the format of a numeric value. In W3C part of the datatype format From https://www.w3.org/TR/tabular-metadata/ tabular 6.4.2 pattern: “A number format pattern as defined in [UAX35] http://www.unicode.org/reports/tr35/tr35-31/tr35-numbers.html#Number_Format_Patterns . Implementations MUST recognise number format patterns containing the symbols 0, #, the specified decimalChar (or \".\" if unspecified), the specified groupChar (or \",\" if unspecified), E, +, % and ‰. Implementations MAY additionally recognise number format patterns containing other special pattern characters defined in [UAX35]. If the supplied value is not a string, or if it contains an invalid number format pattern or uses special pattern characters that the implementation does not recognise, implementations MUST issue a warning and proceed as if the property had not been specified.   f the datatype format annotation is a single string, this is interpreted in the same way as if it were an object with a pattern property whose value is that string. If the groupChar is specified, but no pattern is supplied, when parsing the string value of a cell against this format specification, implementations MUST recognise and parse numbers that consist of:  an optional + or - sign, …  Implementations MAY also recognise numeric values that are in any of the standard-decimal, standard-percent or standard-scientific formats listed in the Unicode Common Locale Data Repository. …”""";
  ddi:valueMapping_formats_DataPoint @ddi:DataPoint *;
  ddi:valueMapping_uses_PhysicalSegmentLocation @ddi:PhysicalSegmentLocation *;
  ddi:physicalDataType @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """The base datatype of the physical representation. An integer InstanceVariable might, for example, be stored as a floating point number. From https://www.w3.org/TR/tabular-metadata/ Inherited 5.7 datatype: “An atomic property that contains either a single string that is the main datatype of the values of the cell or a datatype description object. If the value of this property is a string, it MUST be the name of one of the built-in datatypes defined in section 5.11.1 Built-in Datatypes and this value is normalized to an object whose base property is the original string value. If it is an object then it describes a more specialized datatype. If a cell contains a sequence (i.e. the separator property is specified and not null) then this property specifies the datatype of each value within that sequence. See 5.11 Datatypes and Parsing Cells in [tabular-data-model] for more details.  The normalized value of this property becomes the datatype annotation for the described column. ”""";
  ddi:scale xsd:integer *
  // shexmi:comment """The scale of the number expressed as an integer (for example a number expressed in 100's, 5 = 500 would have a scale of 100).   From DDI 3.2 ManagedNumericRepresentation@scale:""";
}
// shexmi:package "http://ddi-alliance.org/ns/#FormatDescription"
// shexmi:comment """Definition
============
Provides physical characteristics for an InstanceVariable as part of a PhysicalSegmentLayout

Examples
==========
A variable \"age\" might be represented in a file as a string with a maximum length of 5 characters and a number pattern of ##0.0

Explanatory notes
===================
An InstanceVariable has details of value domain and datatype, but will not have the final details of how a value is physically represented in a data file. A variable for height, for example, may be represented as a real number, but may be represented as a string in multiple ways. The decimal separator might be, for example a period or a comma. The string representing the value of a payment might be preceded by a currency symbol. The same numeric value might be written as “1,234,567” or “1.234567 E6”. A missing value might be written as “.”, “NA”, “.R” or as “R”. 
The ValueMapping describes how the value of an InstanceVariable is physically expressed. The properties of the ValueMapping as intended to be compatible with the W3C Metadata Vocabulary for Tabular Data (https://www.w3.org/TR/tabular-metadata/ ) as well as common programming languages and statistical packages. The “format” property, for example can draw from an external controlled vocabulary such as the set of formats for Stata, SPSS, or SAS."""^^mark:

ddi:VariablePosition CLOSED {
  ddi:variablePosition_TODOrelatesTo_VariableCollection @ddi:VariableCollection *;
  ddi:variablePosition_indexes_ConceptualVariable @ddi:ConceptualVariable *;
  ddi:value xsd:integer *
  // shexmi:comment """Index value of member in an ordered array""";
}
// shexmi:package "http://ddi-alliance.org/ns/#FormatDescription"
// shexmi:comment """Definition
============
Member Indicator for use with member type ConceptualVariable, RepresentedVariable, and InstanceVariable"""^^mark:


# END ddi:FormatDescription Package

# START ddi:Identification Package

ABSTRACT ddi:AnnotatedIdentifiable CLOSED EXTENDS @ddi:Identifiable {
  ddi:hasAnnotation CLOSED {
    ddi:alternativeTitle @ddi:InternationalString *
    // shexmi:comment """An alternative title by which a data collection is commonly referred, or an abbreviation  for the title.""";
    ddi:contributor @ddi:AgentAssociation *
    // shexmi:comment """The name of a contributing author or creator, who worked in support of the primary creator given above.""";
    ddi:copyright @ddi:InternationalString *
    // shexmi:comment """The copyright statement.""";
    ddi:creator @ddi:AgentAssociation *
    // shexmi:comment """Person, corporate body, or agency responsible for the substantive and intellectual content of the described object.""";
    ddi:date @ddi:AnnotationDate *
    // shexmi:comment """A date associated with the annotated object (not the coverage period). Use typeOfDate to specify the type of date such as Version, Publication, Submitted, Copyrighted, Accepted, etc.""";
    ddi:identifier @ddi:InternationalIdentifier *
    // shexmi:comment """An identifier or locator. Contains identifier and Managing agency (ISBN, ISSN, DOI, local archive). Indicates if it is a URI.""";
    ddi:informationSource @ddi:InternationalString *
    // shexmi:comment """The name or identifier of source information for the annotated object.""";
    ddi:languageOfObject @ddi:language *
    // shexmi:comment """Language of the intellectual content of the described object. Multiple languages are supported by the structure itself as defined in the transformation to specific bindings. Use language codes supported by xs:language which include the 2 and 3 character and extended structures defined by RFC4646 or its successors. Supports multiple language codes.""";
    ddi:provenance @ddi:InternationalString *
    // shexmi:comment """A statement of any changes in ownership and custody of the resource since its creation that are significant for its authenticity, integrity, and interpretation.""";
    ddi:publisher @ddi:AgentAssociation *
    // shexmi:comment """Person or organization responsible for making the resource available in its present form.""";
    ddi:recordCreationDate @ddi:IsoDateType *
    // shexmi:comment """Date the record was created""";
    ddi:recordLastRevisionDate @ddi:IsoDateType *
    // shexmi:comment """Date the record was last revised""";
    ddi:relatedResource CLOSED EXTENDS @ddi:InternationalIdentifier {
      ddi:typeOfRelatedResource @ddi:ExternalControlledVocabularyEntry *
      // shexmi:comment """The type of relationship between the annotated object and the related resource. Standard usage may include: describesDate, isDescribedBy,  isFormatOf, isPartOf, isReferencedBy, isReplacedBy, isRequiredBy, isVersionOf, references, replaces, requires, etc.""";
    } *
    // shexmi:comment """Provide the identifier, managing agency, and type of resource related to this object. Use to specify related resources similar to Dublin Core isPartOf and hasPart to indicate collection/series membership for objects where there is an identifiable record. If not an identified object use the relationship to ExternalMaterial using a type that indicates a series description.""";
    ddi:rights @ddi:InternationalString *
    // shexmi:comment """Information about rights held in and over the resource. Typically, rights information includes a statement about various property rights associated with the resource, including intellectual property rights.""";
    ddi:subTitle @ddi:InternationalString *
    // shexmi:comment """Secondary or explanatory title.""";
    ddi:summary @ddi:InternationalString *
    // shexmi:comment """A summary description (abstract) of the annotated object.""";
    ddi:title @ddi:InternationalString *
    // shexmi:comment """Full authoritative title. List any additional titles for this item as AlternativeTitle.""";
    ddi:typeOfResource @ddi:ExternalControlledVocabularyEntry *
    // shexmi:comment """Provide the type of the resource. This supports the use of a controlled vocabulary. It should be appropriate to the level of the annotation.""";
    ddi:versionIdentification xsd:string *
    // shexmi:comment """Means of identifying the current version of the annotated object.""";
    ddi:versioningAgent @ddi:AgentAssociation *
    // shexmi:comment """The agent responsible for the version. May have an associated role.""";
  } *
  // shexmi:comment """Provides annotation information on the object to support citation and crediting of the creator(s) of the object.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#Identification"
// shexmi:comment """Definition
============
Used to identify objects for purposes of internal and/or external referencing. Elements of this type are versioned. Provides identification and administrative metadata about the object. Adds optional annotation. Use this as the extension base for First Order Classes that contain intellectual content that needs to be discoverable in its own right."""^^mark:

ABSTRACT ddi:Identifiable CLOSED {
  ddi:agency xsd:string *
  // shexmi:comment """This is the registered agency code with optional sub-agencies separated by dots. For example, diw.soep, ucl.qss, abs.essg.""";
  ddi:basedOnObject CLOSED {
    ddi:basedOnRationaleCode @ddi:ExternalControlledVocabularyEntry *
    // shexmi:comment """RationaleCode is primarily for internal processing flags within an organization or system. Supports the use of an external controlled vocabulary.""";
    ddi:basedOnRationaleDescription @ddi:InternationalString *
    // shexmi:comment """Textual description of the rationale/purpose for the based on reference to inform users as to the extent and implication of the version change. May be expressed in multiple languages.""";
    ddi:basedOnObjectInformation_basedOn_Identifiable @ddi:Identifiable *;
  } *
  // shexmi:comment """The object/version that this object version is based on.""";
  ddi:id xsd:string *
  // shexmi:comment """The ID of the object. This must conform to the allowed structure of the DDI Identifier and must be unique within the Agency.""";
  ddi:isPersistent xsd:boolean *
  // shexmi:comment """Default value is false. Usually the content of the current version is allowed to change, for example as the contributor is working on the object contents. However, when isPersistent is true, it indicates the there will be no more changes to the current version.""";
  ddi:isUniversallyUnique xsd:boolean *
  // shexmi:comment """Default value is false. Usually the combination of agency and id (ignoring different versions) is unique. If isUniversallyUnique is set to true, it indicates that the id itself is universally unique (unique across systems and/or agencies) and therefore the agency part is not required to ensure uniqueness.""";
  ddi:localId CLOSED {
    ddi:localIdType xsd:string *
    // shexmi:comment """Type of identifier, specifying the context of the identifier.""";
    ddi:localIdValue xsd:string *
    // shexmi:comment """Value of the local ID.""";
    ddi:localIdVersion xsd:string *
    // shexmi:comment """Version of the Local ID.""";
  } *
  // shexmi:comment """This is an identifier in a given local context that uniquely references an object, as opposed to the full ddi identifier which has an agency plus the id. For example, localId could be a variable name in a dataset.""";
  ddi:version xsd:string *
  // shexmi:comment """The version number of the object. The version number is incremented whenever the non-administrative metadata contained by the object changes.""";
  ddi:versionDate @ddi:IsoDateType *
  // shexmi:comment """The date and time the object was changed. Supports standard ISO date and datetime formats.""";
  ddi:versionRationale CLOSED {
    ddi:rationaleCode @ddi:ExternalControlledVocabularyEntry *
    // shexmi:comment """RationaleCode is primarily for internal processing flags within an organization or system. Supports the use of an external controlled vocabulary.""";
    ddi:rationaleDescription @ddi:InternationalString *
    // shexmi:comment """Textual description of the rationale/purpose for the version change to inform users as to the extent and implication of the version change. May be expressed in multiple languages.""";
  } *
  // shexmi:comment """The reason for making this version of the object.""";
  ddi:versionResponsibility xsd:string *
  // shexmi:comment """Contributor who has the ownership and responsibility for the current version.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#Identification"
// shexmi:comment """Definition
============
Used to identify objects for purposes of internal and/or external referencing. Elements of this type are versioned and provide administrative metadata properties. Use for First Order Classes whose content does not need to be discoverable in its own right but needs to be related to multiple classes."""^^mark:


# END ddi:Identification Package

# START ddi:Process Package

ddi:Activity CLOSED {
  ddi:activity_uses_InformationObject @ddi:InformationObject *;
  ddi:activity_produces_InformationObject @ddi:InformationObject *;
  ddi:activity_hasInternal_ControlLogic @ddi:ControlLogic *;
  ddi:activity_hasSubActivity_Activity @ddi:Activity *;
  ddi:standardModelUsied @ddi:PairedExternalControlledVocabularyEntry *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Process"
// shexmi:comment """Definition
============
An Activity is a task described at a conceptual level. It's not parameterized and as such less reusable. For more logical/physical, fine-grained, reusable description there is a sub-type called Step.

Examples
==========
Phases and sub-processes of the Generic Statistical Business Process Model (GSBPM) are examples of Activity.

Explanatory notes
===================
An Activity is invoked by ControlLogic. It may use and/or produce InformationObjects."""^^mark:

ddi:AgentActivityEntityTriple CLOSED {
  ddi:agentActivityEntityTriple_TODOrelatesTo_AgentActivityEntityStore CLOSED {
  } *;
  ddi:agentActivityEntityTriple_ActivityIO_InformationObject @ddi:InformationObject *;
  ddi:agentActivityEntityTriple_IOActivity_Activity @ddi:Activity *;
  ddi:timeStamp @ddi:Activity *;
  ddi:tripleType xsd:string *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Process"
// shexmi:comment """Definition
============
An ActivityEntity is an association between an Activity and InformationObject in which the Activity either uses the InformationObject or produces the InformationObject

Examples
==========
ActivityOne produces SpreadsheetOne
ActivityTwo uses SpreadsheetOne"""^^mark:

ddi:AllenIntervalAlgebra CLOSED EXTENDS @ddi:TemporalConstraints {
  ddi:temporalIntervalRelation @ddi:TemporalRelationType *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Process"
// shexmi:comment """Definition
============
In Allen's Interval Algebra there are thirteen temporal interval relations: twelve asymmetric ones, i.e. <i>precedes</i>, <i>meets</i>, <i>overlaps</i>, <i>finishes</i>, <i>contains</i>, <i>starts</i> and their converses, plus <i>equals</i>, which is the only one that has no converse or, rather, it is the same as its converse. Together these relations are distinct (any pair of definite intervals are described by one and only one of the relations), exhaustive (any pair of definite intervals are described by one of the relations), and qualitative (no numeric time spans are considered)."""^^mark:

ddi:CommandInterpreter CLOSED EXTENDS @ddi:ProcessingAgent {
  ddi:commandInterpreter_parses_Script CLOSED EXTENDS @ddi:ControlLogic {
    ddi:script @ddi:CommandCode *;
    ddi:scriptingLanguage @ddi:ScriptType *;
  } *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Process"
// shexmi:comment """Definition
============
A CommandInterpreter parses a Script into statements or, again, Command tokens. From each token the CommandInterpreter constructs a language-specific Command. This Command is used to document a ControlConstruct.

Examples
==========
C2MetaData is a CommandInterpreter. It documents scripts written in SAS, SPSS, Stata and R after the fact."""^^mark:

ddi:ControlLogic CLOSED {
  ddi:controlLogic_informs_ProcessingAgent @ddi:ProcessingAgent *;
  ddi:controlLogic_invokes_Activity @ddi:Activity *;
  ddi:controlLogic_hasSubControlLogic_ControlLogic @ddi:ControlLogic *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Process"
// shexmi:comment """Definition
============
ControlLogic is a Program in which the order of statements is explicit
ControlLogic is either DeterministicImperative or Non-Deterministic (Declarative). Deterministic ControlLogic consists of ControlConstructs. Declarative ControlLogic is constraint and/or rule-based.
ControlLogic may contain ControlLogic.

Examples
==========
A Loop ControlConstruct is Deterministic ControlLogic. A Script is Deterministic ControlLogic. RuleBasedScheduling is Declarative ControlLogic.

Explanatory notes
===================
DDI 4 has extended ControlLogic to include Non-Deterministic Activity and Step controls"""^^mark:

ddi:ControlStep CLOSED EXTENDS @ddi:DeterministicImperative {
}
// shexmi:package "http://ddi-alliance.org/ns/#Process"

ddi:Curator CLOSED {
  ddi:curator_has_RuleBasedScheduling @ddi:RuleBasedScheduling *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Process"
// shexmi:comment """Definition
============
Curator is a software agent that uses Natural Language Processing to map facts (InformationObjects) in the ResearchDataStore with the Condition Part of a Rule.

Examples
==========
Domain-specific curators are available as both open source and commercial products"""^^mark:

ddi:DeterministicImperative CLOSED EXTENDS @ddi:ControlLogic {
}
// shexmi:package "http://ddi-alliance.org/ns/#Process"
// shexmi:comment """Definition
============
DeterministicImperative is a subtype of ControlLogic Deterministic ControlLogic consists of ControlConstructs. 

Examples
==========
A Loop ControlConstruct is Deterministic ControlLogic. A Script is Deterministic ControlLogic."""^^mark:

ddi:InformationFlowDefinition CLOSED {
  ddi:informationFlowDefinition_to_Parameters @ddi:Parameters *;
  ddi:informationFlowDefinition_from_Parameters @ddi:Parameters *;
  ddi:informationFlowDefinition_has_ControlLogic @ddi:ControlLogic *;
  ddi:informationFlowDefinition_has_Workflow CLOSED {
    ddi:workflowType @ddi:WorkflowPattern *;
  } *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Process"
// shexmi:comment """Definition
============
The relationships between parameters across steps is described by the InformationFlowDefinition. Each relationship creates a pathway for an InformationObject to follow.

Examples
==========
The output of one parameter might be the input of another one. Think of a BPMN diagram or an ETL pipeline definition as the sum of these relationships.

Explanatory notes
===================


Synonyms
==========
Bindings."""^^mark:

ddi:InformationObject CLOSED {
  ddi:informationObject_areBoundTo_Parameters @ddi:Parameters *;
  ddi:informationObject_has_ResearchDataStore @ddi:ResearchDataStore *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Process"
// shexmi:comment """Definition
============
An InformationObject may be a data object or a metadata object either used or produced by an Activity. A program that creates InformationObjects is also an InformationObject.

Examples
==========
A dataset. A mapping between two codesets. A variable. A datacube. A data dictionary. An ontology. A software curator that produces a mapping between two InformationObjects.

Explanatory notes
===================
DDI 4 imagines the currency of Activity and Parameter are any type of InformtionObject."""^^mark:

ddi:NonDeterministicDeclarative CLOSED EXTENDS @ddi:ControlLogic {
}
// shexmi:package "http://ddi-alliance.org/ns/#Process"
// shexmi:comment """Definition
============
NonDeterministic ControlLogic is a subtype of ControlLogic NonDeterministic or, again, Declarative ControlLogic is constraint and/or rule-based.

Examples
==========
RuleBasedScheduling is Declarative ControlLogic.

Explanatory notes
===================
DDI 4 has extended ControlLogic to include Non-Deterministic Activity and Step controls"""^^mark:

ddi:Parameters CLOSED {
  ddi:paramType @ddi:InOutParamType *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Process"
// shexmi:comment """Definition
============
An input or output to a Step. Parameters may take the form of any InformationObject which includes DataSets and structured metadata

Examples
==========
A DimensionalDataSet. A LongDataStructure. A catalog of views from a data virtualization platform."""^^mark:

ddi:Precondition CLOSED {
  ddi:precondition_isBasedOn_InformationObject @ddi:InformationObject *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Process"
// shexmi:comment """Definition
============
Precondition is a subtype of Constraint. Preconditions are referenced in the condition part of a Rule.

Examples
==========
A Precondition might be that a view supported by the ResearchDataStore is fresh. A PreCondition might be that a certain Activity has posted a certain message to the ResearchDataStore.


Explanatory notes
===================
A Precondition can be any InformationObject."""^^mark:

ddi:ProcessingAgent CLOSED {
  ddi:processingAgent_performs_Activity @ddi:Activity *;
  ddi:processingAgent_has_ProductionEnvironment CLOSED {
    ddi:productionEnvironment_operatesOn_ResearchDataStore @ddi:ResearchDataStore *;
  } *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Process"
// shexmi:comment """Definition
============
A ProcessingAgent orchestrates the production of InformationObjects in a ProductionEnvironment. There are DataCapture, DataProcessing and DataAnalysis ProductionEnvironments to name a few. The ProcessingAgent performs an Activity based on the ControlLogic.

Examples
==========
A ProcessingAgent initiates a DataCapture Sequence. A ProcessingAgent initiates RulesBasedScheduling. A ProcessingAgent is informed by ControlLogic to invoke an Activity."""^^mark:

ddi:ResearchDataStore CLOSED {
}
// shexmi:package "http://ddi-alliance.org/ns/#Process"
// shexmi:comment """Definition
============
ResearchDataStore enjoys a trace relationship with Blackboard which is one of three classes that belong to the Blackboard design pattern.
ResearchDataStore receives InformationObjects from various ProductionEnvironments. ResearchDataStore is notional, not physical. 

Examples
==========
Data virtualization is any approach to data management that allows an application to retrieve and manipulate data without requiring technical details about the data, such as how it is formatted at source, or where it is physically located, and can provide a single customer view

Explanatory notes
===================
ResearchController, Production Environment and ResearchDataStore implement the Blackboard design pattern. Blackboard is a design pattern developed in the AI community that provides a computational framework for the design and implementation of systems that integrate large and diverse specialized modules, and implement complex, non-deterministic control strategies.

Think of a Blackboard as a DataStore which contains raw, interim and final results that are the products of specialized modules that may or may not combine depending on many scenarios."""^^mark:

ddi:Rule CLOSED {
  ddi:rule_hasActionElement_Activity @ddi:Activity *;
  ddi:rule_hasPrecondition_ConditionalControlLogic CLOSED EXTENDS @ddi:DeterministicImperative {
    ddi:condition @ddi:CommandCode *;
    ddi:controlConstruct @ddi:ControlConstructType *;
  } *;
  ddi:rule_has_RuleSet CLOSED {
    ddi:ruleSet_has_RuleBasedScheduling @ddi:RuleBasedScheduling *;
  } *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Process"
// shexmi:comment """Definition
============
A Rule has a Condition Part and an Action Part. A Rule takes the form of an If [Condition} Then [Action]. A Rule belongs to a RuleSet which is a component of RuleBasedScheduling performed by the ProcessingAgent

Examples
==========
If Exists [InformationObject] Then Perform [Activity]"""^^mark:

ddi:RuleBasedScheduling CLOSED EXTENDS @ddi:NonDeterministicDeclarative {
  ddi:schedulingType @ddi:SchedulingStrategy *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Process"
// shexmi:comment """Definition
============
RuleBasedScheduling perform a fact check on Rules from the RuleSet testing their Condition Part against the facts in the Research DataStore. Fact checking may be assisted by a Curator who can semantically compare the Condition Part of each candidate Rule with the facts. The fact checker returns the next Activity

RuleBasedScheduling performs the following function:

<i>factcheck (RuleSet, Research DataStore, Curator): Activity</i>

Examples
==========
One real life situation in which rule-based scheduling is performed involves data virtualization. Here the research datastore has a catalog of views available for use. RuleBasedScheduling might explore the catalog to determine the rule(s) in the RuleSet that currently apply. A software Curator might assist in the decision in case there was no exact match between a rule and its condition(s) and the current state of the research datastore. The curator uses Natural Language Processing."""^^mark:

ddi:RulesEngine CLOSED EXTENDS @ddi:ProcessingAgent {
}
// shexmi:package "http://ddi-alliance.org/ns/#Process"

ddi:ScriptingAgent CLOSED EXTENDS @ddi:ProcessingAgent {
}
// shexmi:package "http://ddi-alliance.org/ns/#Process"

ddi:Sequence CLOSED EXTENDS @ddi:DeterministicImperative {
}
// shexmi:package "http://ddi-alliance.org/ns/#Process"
// shexmi:comment """Definition
============
<font color=\"#2d2d2d\">A Sequence controls the order of Activities or Steps by defining a simple sequence.</font>

Examples
==========
A Sequence might contain two Sequences of Activity -- one for Round 1 Activity of the Research and the second for Round 2"""^^mark:

ddi:Service CLOSED EXTENDS @ddi:ProcessingAgent {
}
// shexmi:package "http://ddi-alliance.org/ns/#Process"
// shexmi:comment """Definition
============
Service is a type of ProcessingAgent. Services are atomic. They execute Acts that have input and output parameters.

Examples
==========
Given a location as input, a weather service provides weather as output."""^^mark:

ddi:TemporalConstraints CLOSED EXTENDS @ddi:NonDeterministicDeclarative {
}
// shexmi:package "http://ddi-alliance.org/ns/#Process"
// shexmi:comment """Definition
============
TemporalConstraints provide a mechanism for expressing concurrency control and synchronization

Examples
==========
Allen's Interval Algebra is a set of TemporalConstraints. So are the Split and SplitJoin ControlConstructs"""^^mark:

ddi:TemporalControlConstruct CLOSED EXTENDS @ddi:TemporalConstraints {
  ddi:temporalControl @ddi:TemporalControlConstructTYpe *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Process"
// shexmi:comment """"""^^mark:

ddi:ControlConstructType [
  ddi:Else
  ddi:IfThen
  ddi:Loop
  ddi:RepeatUntil
  ddi:RepeatWhile
]


ddi:InOutParamType [
  ddi:in
  ddi:out
]


ddi:SchedulingStrategy [
  ddi:backwardChaining
  ddi:forwardChaining
]


ddi:ScriptType [
  ddi:R
  ddi:SAS
  ddi:SPSS
  ddi:Stata
]


ddi:TemporalControlConstructTYpe [
  ddi:ANDJoinSplitJoin
  ddi:ANDSplitSplit
  ddi:XORJoin
  ddi:XORSplit
]


ddi:TemporalRelationType [
  ddi:TemporalContains
  ddi:TemporalEquals
  ddi:TemporalFinishes
  ddi:TemporalMeets
  ddi:TemporalOverlaps
  ddi:TemporalPrecedes
  ddi:TemporalStarts
]


ddi:WorkflowPattern [
  ddi:ExclusiveChoice
  ddi:InterleavedParallelRouting
  ddi:InterleavedRouting
  ddi:ParallelSplit
  ddi:Sequence
  ddi:SimpleMarge
  ddi:Synchronization
]



# END ddi:Process Package

# START ddi:RegularExpressions Package

ddi:Char xsd:string


ddi:IsoDateType xsd:string



# END ddi:RegularExpressions Package

# START ddi:Representations Package

ddi:ClassificationIndex CLOSED EXTENDS @ddi:AnnotatedIdentifiable {
  ddi:availableLanguage @ddi:language *
  // shexmi:comment """A Classification Index can exist in several languages. Indicates the languages available. If a Classification Index exists in several languages, the number of entries in each language may be different, as the number of terms describing the same phenomenon can change from one language to another. However, the same phenomena should be described in each language. Supports the indication of multiple languages within a single property. Supports use of codes defined by the RFC 1766.""";
  ddi:codingInstruction @ddi:CommandCode *
  // shexmi:comment """Additional information which drives the coding process for all entries in a Classification Index.""";
  ddi:corrections @ddi:InternationalString *
  // shexmi:comment """Verbal summary description of corrections, which have occurred within the Classification Index. Corrections include changing the item code associated with an Classification Index Entry.""";
  ddi:duplicates xsd:boolean *
  // shexmi:comment """If members are ordered set to true, if unordered set to false.""";
  ddi:name @ddi:ObjectName *
  // shexmi:comment """A linguistic signifier. Human understandable name (word, phrase, or mnemonic) that reflects the ISO/IEC 11179-5 naming principles. If more than one name is provided provide a context to differentiate usage.""";
  ddi:classificationIndex_isDefinedBy_Concept @ddi:Concept *;
  ddi:classificationIndex_hasContact_Agent @ddi:Agent *;
  ddi:classificationIndex_isMaintainedBy_Agent @ddi:Agent *;
  ddi:purpose @ddi:InternationalStructuredString *
  // shexmi:comment """Explanation of the intent of some decision or object. Supports the use of multiple languages and structured text.""";
  ddi:releaseDate @ddi:Date *
  // shexmi:comment """Date when the current version of the Classification Index was released.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#Representations"
// shexmi:comment """Definition
============
ordered list (alphabetical, in code order etc) of Classification Index Entries

Examples
==========
An alphabetical index of a topically ordered Statistical Classification

Explanatory notes
===================
A Classification Index shows the relationship between text found in statistical data sources (responses to survey questionnaires, administrative records) and one or more Statistical Classifications.  A Classification Index may be used to assign the codes for Classification Items to observations in statistical collections. 
A Statistical Classification is a subtype of a Structured Collection.  [GSIM Statistical Classification Model]  Note that a GSIM Node is the equivalent of a DDI Member and a GSIM Node Set is a DDI Collection.
A Classification Index can relate to one particular or to several Statistical Classifications. [GSIM Statistical Classification Model]


Synonyms
==========


DDI 3.2 mapping
=================


RDF mapping
=============


GSIM mapping
==============
Classification Index"""^^mark:

ddi:ClassificationIndexEntryPosition CLOSED {
  ddi:classificationIndexEntryPosition_has_ClassificationIndex @ddi:ClassificationIndex *;
  ddi:classificationIndexEntryPosition_indexes_ClassificationIndexEntry CLOSED EXTENDS @ddi:AnnotatedIdentifiable {
    ddi:codingInstruction @ddi:CommandCode *
    // shexmi:comment """Additional information which drives the coding process. Required when coding is dependent upon one or many other factors.""";
    ddi:entry @ddi:InternationalString *
    // shexmi:comment """Text describing the type of object/unit or object property.""";
    ddi:classificationIndexEntry_has_ClassificationIndex @ddi:ClassificationIndex *;
    ddi:validDates @ddi:DateRange *
    // shexmi:comment """Date from which the Classification Index Entry became valid (startDate). The date must be defined if the Classification Index Entry belongs to a floating Classification Index. Date at which the Classification Index Entry became invalid (endDate). The date must be defined if the Classification Index Entry belongs to a floating Classification Index and is no longer valid.""";
  } *;
  ddi:value xsd:integer *
  // shexmi:comment """Index value of member in an ordered array""";
}
// shexmi:package "http://ddi-alliance.org/ns/#Representations"
// shexmi:comment """Definition
============
Member Indicator for use with member type ClassificationIndexEntry"""^^mark:

ddi:ClassificationItem CLOSED {
  ddi:changeFromPreviousVersion @ddi:InternationalString *
  // shexmi:comment """Describes the changes, which the item has been subject to from the previous version to the actual Statistical Classification""";
  ddi:changeLog @ddi:InternationalString *
  // shexmi:comment """Describes the changes, which the item has been subject to during the life time of the actual Statistical Classification.""";
  ddi:explanatoryNotes @ddi:InternationalStructuredString *
  // shexmi:comment """A Classification Item may be associated with explanatory notes, which further describe and clarify the contents of the Category. Explanatory notes consist of: General note: Contains either additional information about the Category, or a general description of the Category, which is not structured according to the \"includes\", \"includes also\", \"excludes\" pattern. Includes: Specifies the contents of the Category. Includes also: A list of borderline cases, which belong to the described Category. Excludes: A list of borderline cases, which do not belong to the described Category. Excluded cases may contain a reference to the Classification Items to which the excluded cases belong.""";
  ddi:futureNotes @ddi:InternationalString *
  // shexmi:comment """The future events describe a change (or a number of changes) related to an invalid item. These changes may e.g. have turned the now invalid item into one or several successor items. This allows the possibility to follow successors of the item in the future.""";
  ddi:isGenerated xsd:boolean *
  // shexmi:comment """Indicates whether or not the item has been generated to make the level to which it belongs complete""";
  ddi:isValid xsd:boolean *
  // shexmi:comment """Indicates whether or not the item is currently valid. If updates are allowed in the Statistical Classification, an item may be restricted in its validity, i.e. it may become valid or invalid after the Statistical Classification has been released.""";
  ddi:name @ddi:ObjectName *
  // shexmi:comment """A Classification Item has a name as provided by the owner or maintenance unit. The name describes the content of the category. The name is unique within the Statistical Classification to which the item belongs, except for categories that are identical at more than one level in a hierarchical classification. Use the context attribute to identify Official Name or alternate names for the Classification Item.""";
  ddi:classificationItem_has_StatisticalClassification @ddi:StatisticalClassification *;
  ddi:classificationItem_hasRulingBy_AuthorizationSource CLOSED EXTENDS @ddi:AnnotatedIdentifiable {
    ddi:authorizationDate @ddi:Date *
    // shexmi:comment """Identifies the date of Authorization.""";
    ddi:legalMandate @ddi:InternationalString *
    // shexmi:comment """Provide a legal citation to a law authorizing the study/data collection. For example, a legal citation for a law authorizing a country's census.""";
    ddi:authorizationSource_has_Agent @ddi:Agent *;
    ddi:purpose @ddi:InternationalStructuredString *
    // shexmi:comment """Explanation of the intent of some decision or object. Supports the use of multiple languages and structured text.""";
    ddi:statementOfAuthorization @ddi:InternationalStructuredString *
    // shexmi:comment """Text of the authorization (law, mandate, approved business case).""";
  } *;
  ddi:classificationItem_uses_Notation @ddi:Notation *;
  ddi:classificationItem_excludes_ClassificationItem @ddi:ClassificationItem *;
  ddi:classificationItem_groups_Level @ddi:Level *;
  ddi:classificationItem_denotes_Category @ddi:Category *;
  ddi:validDates @ddi:DateRange *
  // shexmi:comment """Dates for which the classification is valid. Date from which the item became valid. The date must be defined if the item belongs to a floating Statistical classification. Date at which the item became invalid. The date must be defined if the item belongs to a floating Statistical classification and is no longer valid""";
}
// shexmi:package "http://ddi-alliance.org/ns/#Representations"
// shexmi:comment """Definition
============
placeholder for a Category at a certain Level within a Statistical Classification


Examples
==========
In the  2012 NAICS (North American Industry Classification System) one Classification Item has the Code 23 and the Category construction.

Explanatory notes
===================
A Classification Item defines the content and the borders of the Category. A Unit can be classified to one and only one item at each Level of a Statistical Classification. As such a Classification Item is a placeholder for a position in a StatisitcalClassification. It contains a Designation, for which Code is a kind; a Category; and other things. 

This differentiates it from Code which is a kind of Designation, in particular it is an alphanumeric string assigned to stand in place of a category. For example, the letter M might stand for the category Male in the CodeList called Gender.

Synonyms
==========


DDI 3.2 mapping
=================


RDF mapping
=============


GSIM mapping
==============
Classification Item"""^^mark:

ddi:ClassificationItemPosition CLOSED {
  ddi:classificationItemPosition_has_StatisticalClassification @ddi:StatisticalClassification *;
  ddi:classificationItemPosition_indexes_ClassificationItem @ddi:ClassificationItem *;
  ddi:value xsd:integer *
  // shexmi:comment """Provides an index for the member within an ordered array""";
}
// shexmi:package "http://ddi-alliance.org/ns/#Representations"
// shexmi:comment """Definition
============
A ClassificationItemIndicator realizes and extends a MemberIndicator which provides a Classification Item with an index indicating order and a level reference providing the level location of the Classification Item within a hierarchical structure."""^^mark:

ddi:ClassificationItemRelationship CLOSED {
  ddi:classificationItemRelationship_hasTarget_ClassificationItem @ddi:ClassificationItem *;
  ddi:classificationItemRelationship_has_ClassificationItemStructure CLOSED EXTENDS @ddi:Identifiable {
    ddi:displayLabel @ddi:LabelForDisplay *
    // shexmi:comment """A display label for the OrderRelation. May be expressed in multiple languages. Repeat for labels with different content, for example, labels with differing length limitations.""";
    ddi:name @ddi:ObjectName *;
    ddi:classificationItemStructure_structures_StatisticalClassification @ddi:StatisticalClassification *;
    ddi:purpose @ddi:InternationalStructuredString *;
    ddi:semantics @ddi:ExternalControlledVocabularyEntry *
    // shexmi:comment """Provides semantic context for the relationship""";
    ddi:specification @ddi:SpecificationType *;
    ddi:topology @ddi:TopologyType *;
    ddi:totality @ddi:NewTotalityType *
    // shexmi:comment """Type of relation in terms of totality with respect to an associated collection.""";
  } *;
  ddi:classificationItemRelationship_hasSource_ClassificationItem @ddi:ClassificationItem *;
  ddi:semantics @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """Provides semantic context for the relationship""";
}
// shexmi:package "http://ddi-alliance.org/ns/#Representations"
// shexmi:comment """Definition
============
Source target relationship between classification items in a classification item relation structure"""^^mark:

ddi:ClassificationPosition CLOSED {
  ddi:classificationPosition_indexes_StatisticalClassification @ddi:StatisticalClassification *;
  ddi:classificationPosition_has_ClassificationSeries @ddi:ClassificationSeries *;
  ddi:value xsd:integer *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Representations"

ddi:ClassificationSeries CLOSED EXTENDS @ddi:AnnotatedIdentifiable {
  ddi:context @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """ClassificationSeries can be designed in a specific context. Supports the use of and External Controlled Vocabulary.""";
  ddi:duplicates xsd:boolean *;
  ddi:keyword @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """A ClassificationSeries can be associated with one or a number of keywords.""";
  ddi:name @ddi:ObjectName *
  // shexmi:comment """A linguistic signifier. Human understandable name (word, phrase, or mnemonic) that reflects the ISO/IEC 11179-5 naming principles. If more than one name is provided provide a context to differentiate usage.""";
  ddi:objectsOrUnitsClassified @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """A ClassificationSeries is designed to classify a specific type of object/unit according to a specific attribute.""";
  ddi:classificationSeries_groups_ClassificationFamily CLOSED EXTENDS @ddi:AnnotatedIdentifiable {
    ddi:name @ddi:ObjectName *
    // shexmi:comment """A linguistic signifier. Human understandable name (word, phrase, or mnemonic) that reflects the ISO/IEC 11179-5 naming principles. If more than one name is provided provide a context to differentiate usage.""";
    ddi:classificationFamily_isDefinedBy_Concept @ddi:Concept *;
    ddi:classificationFamily_uses_ClassificationIndex @ddi:ClassificationIndex *;
    ddi:purpose @ddi:InternationalStructuredString *
    // shexmi:comment """Explanation of the intent of some decision or object. Supports the use of multiple languages and structured text.""";
  } *;
  ddi:classificationSeries_isDefinedBy_Concept @ddi:Concept *;
  ddi:classificationSeries_isOwnedBy_Agent @ddi:Agent *;
  ddi:purpose @ddi:InternationalStructuredString *
  // shexmi:comment """Explanation of the intent of some decision or object. Supports the use of multiple languages and structured text.""";
  ddi:subject @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """Areas of statistics in which the ClassificationSeries is implemented.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#Representations"
// shexmi:comment """Definition
============
ensemble of one or more Statistical Classifications, based on the same concept, and related to each other as versions or updates 

Examples
==========
ISIC or ISCO
SIC (with different published versions related to the publication year)

Explanatory notes
===================
Typically, these Statistical Classifications have the same name.

Synonyms
==========


DDI 3.2 mapping
=================


RDF mapping
=============


GSIM mapping
==============
Classification Series"""^^mark:

ddi:Code CLOSED {
  ddi:code_uses_Notation @ddi:Notation *;
  ddi:code_has_CodeList @ddi:CodeList *;
  ddi:code_denotes_Category @ddi:Category *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Representations"
// shexmi:comment """Definition
============
Sign for which the Signifier is non-linguistic alphanumeric string 

Examples
==========
The letter M might stand for the category Male in the CodeList called Gender.

Explanatory notes
===================
A non-linguistic alphanumeric string is one which does not correspond to a word in natural language.
For use in a Code List. The representation property (Value) is expressed as it would be found in a data file. Multiple representations may relate to the same Category but should be expressed as separate Codes.

It should not be confused with a ClassificationItem which is a placeholder for a position in a StatisticalClassification. It contains a Designation, for which Code is a kind; a Category; and other things. For example, in 2012 NAICS (North American Industry Classification System) one Classification Item has the Code 23 and the Category construction.

Synonyms
==========


DDI 3.2 mapping
=================
l:CodeType

RDF mapping
=============


GSIM mapping
==============
Code"""^^mark:

ddi:CodeList CLOSED EXTENDS @ddi:EnumerationDomain {
  ddi:duplicates xsd:boolean *;
  ddi:name @ddi:ObjectName *;
  ddi:purpose @ddi:InternationalStructuredString *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Representations"
// shexmi:comment """Definition--
============
list of Codes and associated Categories

Examples
==========
The codes \"M\" and \"F\" could point to \"Male\" and \"Female\" categories respectively.

A CodeList for an occupational classification system like ISCO-08 could use a ClassificationRelationStructure to describe a hierarchy (Chief Executives and Administrative and Commercial Managers as subtypes of Managers)


Explanatory notes
===================
List may be flat or hierarchical. A hierarchical structure may have an indexed order for intended presentation even though the content within levels of the hierarchy are conceptually unordered. For hierarchical structures ClassificationRelationStructure is used to provide additional information on the structure and organization of the categories. Note that a CategorySet can be structured by a ClassificationRelationStructure without the need for associating any Codes with the Categories. This allows for the creation of a CategorySet, for example for a response domain, without an associated CodeList.

Synonyms
==========


DDI 3.2 mapping
=================
l:CodeListType

RDF mapping
=============


GSIM mapping
==============
Code List"""^^mark:

ddi:CodePosition CLOSED {
  ddi:codePosition_TODOrelatesTo_CodeList @ddi:CodeList *;
  ddi:codePosition_indexes_Code @ddi:Code *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Representations"

ddi:CodeRelationship CLOSED {
  ddi:codeRelationship_has_CodeListStructure CLOSED EXTENDS @ddi:Identifiable {
    ddi:name @ddi:ObjectName *;
    ddi:codeListStructure_structures_CodeList @ddi:CodeList *;
    ddi:purpose @ddi:InternationalStructuredString *;
    ddi:semantics @ddi:ExternalControlledVocabularyEntry *
    // shexmi:comment """Provides semantic context for the relationship""";
    ddi:specification @ddi:SpecificationType *;
    ddi:topology @ddi:TopologyType *;
    ddi:totality @ddi:NewTotalityType *
    // shexmi:comment """Type of relation in terms of totality with respect to an associated collection""";
  } *;
  ddi:codeRelationship_hasTarget_Code @ddi:Code *;
  ddi:codeRelationship_hasSource_Code @ddi:Code *;
  ddi:semantics @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """Provides semantic context for the relationship""";
}
// shexmi:package "http://ddi-alliance.org/ns/#Representations"
// shexmi:comment """Definition
============
Source target relationship between codes in a code relation structure"""^^mark:

ABSTRACT ddi:EnumerationDomain CLOSED EXTENDS @ddi:AnnotatedIdentifiable {
  ddi:name @ddi:ObjectName *
  // shexmi:comment """A linguistic signifier. Human understandable name (word, phrase, or mnemonic) that reflects the ISO/IEC 11179-5 naming principles. If more than one name is provided""";
  ddi:enumerationDomain_uses_LevelStructure @ddi:LevelStructure *;
  ddi:enumerationDomain_isDefinedBy_Concept @ddi:Concept *;
  ddi:enumerationDomain_references_CategorySet @ddi:CategorySet *;
  ddi:purpose @ddi:InternationalStructuredString *
  // shexmi:comment """Explanation of the intent of some decision or object. Supports the use of multiple languages and structured text.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#Representations"
// shexmi:comment """Definition
============
abstract base to allow all codifications (CodeList, StatisticalClassification, etc.) to be used as enumerated value domains."""^^mark:

ddi:Level CLOSED {
  ddi:displayLabel @ddi:LabelForDisplay *
  // shexmi:comment """A display label for the object. May be expressed in multiple languages. Repeat for labels with different content, for example, labels with differing length limitations.""";
  ddi:levelNumber xsd:integer *
  // shexmi:comment """Provides an association between a level number and optional concept which defines it within an ordered array. Use is required.""";
  ddi:level_definedBy_Concept @ddi:Concept *;
  ddi:level_has_LevelStructure @ddi:LevelStructure *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Representations"
// shexmi:comment """Definition
============
Provides Level information for the members of the LevelStructure. levelNumber provides the level number which may or may not be associated with a category which defines level.

Examples
==========


Explanatory notes
===================
ISCO-08: index='1' label of associated category 'Major',  index='2' label of associated category 'Sub-Major',  index='3' label of associated category 'Minor',"""^^mark:

ddi:LevelStructure CLOSED EXTENDS @ddi:AnnotatedIdentifiable {
  ddi:name @ddi:ObjectName *
  // shexmi:comment """A linguistic signifier. Human understandable name (word, phrase, or mnemonic) that reflects the ISO/IEC 11179-5 naming principles. If more than one name is provided provide a context to differentiate usage.""";
  ddi:levelStructure_has_StatisticalClassification @ddi:StatisticalClassification *;
  ddi:usage @ddi:InternationalStructuredString *
  // shexmi:comment """Explanation of the ways in which some decision or object is employed. Supports the use of multiple languages and structured text. Use in locations where you need to relay information on the usage of the instantiated class.""";
  ddi:validDateRange @ddi:DateRange *
  // shexmi:comment """The dates for which the level structure is valid.  A structured DateRange with start and end Date (both with the structure of Date and supporting the use of ISO and non-ISO date structures); Use to relate a period with a start and end date.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#Representations"
// shexmi:comment """Definition
============
nesting structure of a hierarchical collection



Examples
==========
ISCO-08 (Major, Sub-Major, and Minor) or NAICS (2 digit sector codes, 3 digit subsector code list, 4 digit industry group code list, and 5 digit industry code list)


Explanatory notes
===================
The levels within the structure begin at the root level '1' and continue as an ordered array through each level of nesting.
Levels are used to organize a hierarchy. Usually, a hierarchy often contains one root member at the top, though it could contain several. These are the first Level. All members directly related to those  in the first Level compose the second Level. The third and subsequent Levels are defined similarly. 
A Level often is associated with a Concept, which defines it. These correspond to kinds of aggregates. For example, in the US Standard Occupational Classification (2010), the Level below the top is called Major Occupation Groups, and the next Level is called Minor Occupational Groups. These ideas convey the structure. In particular, Health Care Practitioners (a Major Group) can be broken into Chiropractors, Dentists, Physicians, Vets, Therapists, etc. (Minor Groups) The Categories in the Nodes at the lower Level aggregate to the Category in Node above them.

\"Classification schemes are frequently organized in nested levels of increasing detail. ISCO-08, for example, has four levels: at the top level are ten major groups, each of which contain sub-major groups, which in turn are subdivided in minor groups, which contain unit groups. Even when a classification is not structured in levels (\"flat classification\"), the usual convention, which is adopted here, is to consider that it contains one unique level.\" (http://rdf-vocabulary.ddialliance.org/xkos.html#) Individual classification items organized in a hierarchy may be associated with a specific level.

Synonyms
==========


DDI 3.2 mapping
=================
l:LevelType

RDF mapping
=============


GSIM mapping
==============
Level"""^^mark:

ddi:StatisticalClassification CLOSED EXTENDS @ddi:EnumerationDomain {
  ddi:availableLanguage @ddi:language *
  // shexmi:comment """A list of languages in which the Statistical Classification is available. Supports the indication of multiple languages within a single property. Supports use of codes defined by the RFC 1766.""";
  ddi:changeFromBase @ddi:InternationalStructuredString *
  // shexmi:comment """Describes the relationship between the variant and its base Statistical Classification, including regroupings, aggregations added and extensions. (Source: GSIM StatisticalClassification/Changes from base Statistical Classification)""";
  ddi:copyright @ddi:InternationalString *
  // shexmi:comment """Copyright of the statistical classification.""";
  ddi:displayLabel @ddi:LabelForDisplay *
  // shexmi:comment """A structured display label providing a fully human readable display for the identification of the object. Supports the use of multiple languages and structured text.""";
  ddi:duplicates xsd:boolean *;
  ddi:isCurrent xsd:boolean *
  // shexmi:comment """Indicates if the Statistical Classification is currently valid.""";
  ddi:isFloating xsd:boolean *
  // shexmi:comment """Indicates if the Statistical Classification is a floating classification. In a floating statistical classification, a validity period should be defined for all Classification Items which will allow the display of the item structure and content at different points of time. (Source: GSIM StatisticalClassification/Floating""";
  ddi:name @ddi:ObjectName *;
  ddi:statisticalClassification_isMaintainedBy_Organization CLOSED EXTENDS @ddi:Agent {
    ddi:ddiId xsd:string *
    // shexmi:comment """The agency identifier of the organization as registered at the DDI Alliance register.""";
    ddi:hasContactInformation @ddi:ContactInformation *
    // shexmi:comment """Contact information for the organization including location specification, address, URL, phone numbers, and other means of communication access. Sets of information can be repeated and date-stamped.""";
    ddi:hasOrganizationName @ddi:OrganizationName *
    // shexmi:comment """Names by which the organization is known.""";
  } *;
  ddi:statisticalClassification_IsPredecessorOf_StatisticalClassification @ddi:StatisticalClassification *;
  ddi:statisticalClassification_has_ClassificationSeries @ddi:ClassificationSeries *;
  ddi:statisticalClassification_isIndexedBy_ClassificationIndex @ddi:ClassificationIndex *;
  ddi:statisticalClassification_IsSuccessorOf_StatisticalClassification @ddi:StatisticalClassification *;
  ddi:statisticalClassification_isVariantOf_StatisticalClassification @ddi:StatisticalClassification *;
  ddi:purpose @ddi:InternationalStructuredString *;
  ddi:purposeOfVariant @ddi:InternationalStructuredString *
  // shexmi:comment """If the Statistical Classification is a variant, notes the specific purpose for which it was developed. (Source: GSIM StatisticalClassification/Purpose of variant)""";
  ddi:rationale @ddi:InternationalStructuredString *
  // shexmi:comment """Explanation of the reasons some decision was made or some object exists. Supports the use of multiple languages and structured text.""";
  ddi:releaseDate @ddi:Date *
  // shexmi:comment """Date the Statistical Classification was released""";
  ddi:updateChanges @ddi:InternationalStructuredString *
  // shexmi:comment """Summary description of changes which have occurred since the most recent classification version or classification update came into force.""";
  ddi:usage @ddi:InternationalStructuredString *
  // shexmi:comment """Explanation of the ways in which some decision or object is employed. Supports the use of multiple languages and structured text.""";
  ddi:validDates @ddi:DateRange *
  // shexmi:comment """The date the statistical classification enters production use and the date on which the Statistical Classification was superseded by a successor version or otherwise ceased to be valid. (Source: GSIM Statistical Classification)""";
}
// shexmi:package "http://ddi-alliance.org/ns/#Representations"
// shexmi:comment """Definition
============
set mutually exclusive and jointly exhaustive Categories represented by Classification Items which may be assigned to one or more variables registered in statistical surveys or administrative files, and used in the production and dissemination of statistics

Examples
==========


Explanatory notes
===================
A Classification Item represents a Category at a certain Level within a Statistical Classification. The Categories are defined with reference to one or more characteristics of a particular universe of units of observation. A Statistical Classification may have a flat, linear structure or may be hierarchically structured, such that all Categories at lower Levels are sub-Categories of Categories at the next Level up. (Source: GSIM StatisticalClassification) 

Synonyms
==========


DDI 3.2 mapping
=================


RDF mapping
=============


GSIM mapping
==============
Statistical Classification"""^^mark:

ddi:StatisticalClassificationRelationship CLOSED {
  ddi:statisticalClassificationRelationship_hasSource_StatisticalClassification @ddi:StatisticalClassification *;
  ddi:statisticalClassificationRelationship_hasTarget_StatisticalClassification @ddi:StatisticalClassification *;
  ddi:statisticalClassificationRelationship_has_ClassificationSeriesStructure CLOSED EXTENDS @ddi:Identifiable {
    ddi:name @ddi:ObjectName *;
    ddi:classificationSeriesStructure_structures_ClassificationSeries @ddi:ClassificationSeries *;
    ddi:purpose @ddi:InternationalStructuredString *;
    ddi:semantics @ddi:ExternalControlledVocabularyEntry *
    // shexmi:comment """Provides semantic context for the relationship""";
    ddi:specification @ddi:SpecificationType *;
    ddi:topology @ddi:TopologyType *;
    ddi:totality @ddi:NewTotalityType *
    // shexmi:comment """Type of relation in terms of totality with respect to an associated collection.""";
  } *;
  ddi:semantics @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """Provides semantic context for the relationship""";
}
// shexmi:package "http://ddi-alliance.org/ns/#Representations"
// shexmi:comment """Definition
============
Specifies the Statistical Classifications for the source and target of the complex relationship and defines the relationship."""^^mark:

ddi:SubstantiveValueDomain CLOSED EXTENDS @ddi:ValueDomain {
  ddi:substantiveValueDomain_takesConceptsFrom_SubstantiveConceptualDomain @ddi:SubstantiveConceptualDomain *;
  ddi:substantiveValueDomain_takesValuesFrom_EnumerationDomain @ddi:EnumerationDomain *;
  ddi:substantiveValueDomain_isDescribedBy_ValueAndConceptDescription @ddi:ValueAndConceptDescription *;
}
// shexmi:package "http://ddi-alliance.org/ns/#Representations"
// shexmi:comment """Definition
============
Value Domain for a substantive Conceptual Domain

Examples
==========
All real decimal numbers relating to the subject matter of interest between 0 and 1 specified in Arabic numerals. [GSIM 1.1].
The codes \"M\" male and \"F\" for female .


Explanatory notes
===================
In DDI4 the value domain for a variable is separated into “substantive” and “sentinel” values. Substantive values are the values of primary interest. Sentinel values are additional values that may carry supplementary information, such as reasons for missing. This duality is described in ISO 11404. Substantive values for height might be real numbers expressed in meters. The full value domain might also include codes for different kinds of missing values - one code for “refused” and another for “don’t know”. Sentinel Values may also convey some substantive information and at the same time represent missing values. An example might be where a numeric variable like number of employees be sometimes a count and sometimes a code representing a range of counts in order to avoid disclosure of information about a specific entity. 

The SubstantiveValueDomain may use either a ValueDescription, for described values,  or a CodeList for enumerated values, or both. 

A value domain may consist of substantive values or sentinel values. Substantive values are those associated directly with some subject matter area. They do not address concerns around processing, such as missing values. Substantive values are called \"regular values\" in ISO/IEC 11404 - General purpose datatypes.

The enumerated case is one where all values are listed. An example is the categorical values for gender:
The conceptual domain could consist of the concept of male and the concept of female. These might be represented in codes and associated labels as
1 (=\"Male\")
2 (=\"Female\")

The described case is one where some description is needed to define the set of values.
Take the following description for height in meters:
\"a real number between 0 and 3, represented to two Arabic decimal places\". This description might be structured in some way to be machine actionable (datatype=\"double\", min=0, max=3, decimals=2).


Synonyms
==========
value domain [ISO11179]"""^^mark:

ddi:ValueAndConceptDescription CLOSED EXTENDS @ddi:Identifiable {
  ddi:classificationLevel @ddi:CategoryRelationCode *
  // shexmi:comment """Indicates the type of relationship, nominal, ordinal, interval, ratio, or continuous. Use where appropriate for the representation type.""";
  ddi:description @ddi:InternationalStructuredString *
  // shexmi:comment """A formal description of the set of values.""";
  ddi:formatPattern @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """A pattern for a number as described in Unicode Locale Data Markup Language (LDML) (http://www.unicode.org/reports/tr35/tr35.html) Part 3: Numbers  (http://www.unicode.org/reports/tr35/tr35-numbers.html#Number_Format_Patterns) and Part 4. Dates (http://www.unicode.org/reports/tr35/tr35-dates.html#Date_Format_Patterns) . Examples would be    #,##0.### to describe the pattern for a decimal number, or yyyy.MM.dd G 'at' HH:mm:ss zzz for a datetime pattern.""";
  ddi:logicalExpression @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """A logical expression where the values of \"x\" making the expression true are the members of the set of valid values.  Example: (all reals x such that  x >0) describes the real numbers greater than 0""";
  ddi:maximumValueExclusive xsd:string *
  // shexmi:comment """A string denotFrom https://www.w3.org/TR/tabular-metadata/  5.11.2 maxExclusive: “An atomic property that contains a single number or string that is the maximum valid value (exclusive). The value of this property becomes the maximum exclusive annotation for the described datatype. See Value Constraints in [tabular-data-model] for details.”   DDI3.2 handles this with a Boolean isInclusive attribute. ing the maximumpossible value (excluding this value)""";
  ddi:maximumValueInclusive xsd:string *
  // shexmi:comment """A string denoting the maximum possible value. From https://www.w3.org/TR/tabular-metadata/  5.11.2 maximum: “An atomic property that contains a single number or string that is the maximum valid value (inclusive); equivalent to maxInclusive. The value of this property becomes the maximum annotation for the described datatype. See Value Constraints in [tabular-data-model] for details.”""";
  ddi:minimumValueExclusive xsd:string *
  // shexmi:comment """A string denoting the minimum possible value (excluding this value) From https://www.w3.org/TR/tabular-metadata/  5.11.2 minExclusive: “An atomic property that contains a single number or string that is the minimum valid value (exclusive). The value of this property becomes the minimum exclusive annotation for the described datatype. See Value Constraints in [tabular-data-model] for details.”   DDI3.2 handles this with a Boolean isInclusive attribute.""";
  ddi:minimumValueInclusive xsd:string *
  // shexmi:comment """A string denoting the minimum possible value. From https://www.w3.org/TR/tabular-metadata/  5.11.2 minimum: “An atomic property that contains a single number or string that is the minimum valid value (inclusive); equivalent to minInclusive. The value of this property becomes the minimum annotation for the described datatype. See Value Constraints in [tabular-data-model] for details.”""";
  ddi:regularExpression CLOSED {
    ddi:content xsd:string *
    // shexmi:comment """Content of the property expressed as a simple string.""";
    ddi:typeOfContent @ddi:ExternalControlledVocabularyEntry *
    // shexmi:comment """Optional use of a controlled vocabulary to specifically type the associated content.""";
  } *
  // shexmi:comment """A regular expression where strings matching the expression belong to the set of valid values. Use typeOfContent to specify the syntax of the regularExpression found in content.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#Representations"
// shexmi:comment """Definition
============
formal description of a set of values

Examples
==========
Example 1) 
The integers between 1 and 10 inclusive.  
The values of x satisfying the logicalExpression property:
\" (1 &lt;=x &lt;= 10) AND mod(x,10)=0\"
Also described with minimumValueInclusive = 1 and maximumValueInclusive = 10 (and datatype of integer)

Example 2)
The upper case letters A through C and X
described with the regularExpression \"/[A-CX]/\"


Example 3)
A date-time described with the Unicode Locale Data Markup Language pattern yyyy.MM.dd G 'at' HH:mm:ss zzz


Explanatory notes
===================
The ValueAndConceptDescription may be used to describe either a value domain or a conceptual domain. For a value domain, the ValueAndConceptDescription contains the details for a “described” domain (as opposed to an enumerated domain). There are a number of properties which can be used for the description. The description could be just text such as: “an even number greater than zero”. Or a more formal logical expression like “x&gt;0 and mod(x,2)=0”. A regular expression might be useful for describing a textual domain. It could also employ a format pattern from the Unicode Locale Data Markup Language (LDML) (http://www.unicode.org/reports/tr35/tr35.html.
Some Conceptual Domains might be described with just a narrative. Others, though, might be described in much the same way as a value domain depending on the specificity of the concept.

In ISO 11404 a value domain may be described either through enumeration or description, or both. This class provides the facility for that description. It may be just a text description, but a description through a logical expression is machine actionable and might, for example, be rendered as an integrity constraint. If both text and a logical expression are provided the logical expression is to be taken as the canonical description.
The logical expression should conform to the expression syntax of VTL. https://sdmx.org/?page_id=5096"""^^mark:

ABSTRACT ddi:ValueDomain CLOSED EXTENDS @ddi:AnnotatedIdentifiable {
  ddi:displayLabel @ddi:LabelForDisplay *
  // shexmi:comment """A display label for the object. May be expressed in multiple languages. Repeat for labels with different content, for example, labels with differing length limitations.""";
  ddi:recommendedDataType @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """The data types that are recommended for use with this domain""";
}
// shexmi:package "http://ddi-alliance.org/ns/#Representations"
// shexmi:comment """Definition
============
set of permissible values for a variable [
adapted from ISO/IEC 11179]

Examples
==========
Age categories with a numeric code list; Age in years; Young, Middle-aged and Old

Explanatory notes
===================
The values can be described by enumeration or by an expression. Value domains can be either substantive/sentinel, or described/enumeration

Synonyms
==========
BUT NOT Grid/Numeric/Code/*_ResponseDomain [DDI-L/Questions] - this is \"ResponseDomain\"

DDI 3.2 mapping
=================
r:RepresentationType

RDF mapping
=============


GSIM mapping
==============
Value Domain"""^^mark:


# END ddi:Representations Package

# START ddi:NewEnumerations Package

ddi:NewTotalityType [
  ddi:partial
  ddi:total
]


ddi:ScopeType [
  ddi:All
  ddi:None
  ddi:Some
]


ddi:TopologyType [
  ddi:graph
  ddi:lattice
  ddi:network
  ddi:partition
  ddi:tree
]



# END ddi:NewEnumerations Package

# START ddi:NewStructuredDataTypes Package

ddi:SpecificationType xsd:string



# END ddi:NewStructuredDataTypes Package

# START ddi:StructuredDataTypes Package

ddi:AnnotationDate CLOSED EXTENDS @ddi:Date {
  ddi:typeOfDate @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """Use to specify the type of date. This may reflect the refinements of dc:date such as dateAccepted, dateCopyrighted, dateSubmitted, etc.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
A generic date type for use in Annotation which provides the standard date structure plus a property to define the date type (Publication date,  Accepted date, Copyrighted date, Submitted date, etc.). 

Examples
==========


Explanatory notes
===================


Synonyms
==========
Equivalent of http://purl.org/dc/elements/1.1/date where the type of date may identify the Dublin Core refinement term."""^^mark:

ddi:AreaCoverage CLOSED {
  ddi:areaMeasure xsd:double *
  // shexmi:comment """The area measure expressed as a decimal for the measurement unit designated.""";
  ddi:measurementUnit @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """Records the measurement unit, for example, Square Kilometer, Square Mile. Supports the use of an external controlled vocabulary.""";
  ddi:typeOfArea @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """Specify the type of area covered i.e. Total, Land, Water, etc. Supports the use of an external controlled vocabulary.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
Use to specify the area of land, water, total or other area coverage in terms of square miles/kilometers or other measure as part of a Geographic Extent.

Examples
==========


Explanatory notes
===================


Synonyms
==========


DDI 3.2 mapping
=================
r:AreaCoverageType"""^^mark:

ddi:Binding CLOSED {
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
Binds two parameters together to direct flow of data through a process

Examples
==========
From the output of an InstanceQuestion to the input of a ComputationAction

Explanatory notes
===================
Binding is used to define the flow of data into, out of, and within a process. It is separate from the flow of a process. When used in the workflow of a data capture process most data may go from a capture to an instance variable, but when needed as a check sum in a loop, a recoding process, or conditional content for DynamicText, Binding provides the means for explicitly directing the movement of data from one point to another in the process."""^^mark:

ddi:BusinessProcessCondition CLOSED {
  ddi:dataDescription @ddi:InternationalStructuredString *
  // shexmi:comment """Provides an alternative to or supplements the SQL data description.""";
  ddi:businessProcessCondition_usesLogicalRecord_LogicalRecord @ddi:LogicalRecord *;
  ddi:rejectionCriteria @ddi:CommandCode *
  // shexmi:comment """Criteria for failing an input dataset""";
  ddi:sql xsd:string *
  // shexmi:comment """SQL SELECT statement that describes the selection of the LogicalRecord from the Dataset""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
A BusinessProcess precondition or post condition which describes the condition which must be met to begin (pre) or exit (post) a process. It may use a specified LogicalRecord. The Logical Record has SQL that describes it, rejectionCriteria against which its adequacy may be tested and an optional annotation that describes its provenance."""^^mark:

ddi:BusinessProcessIndicator CLOSED {
  ddi:index xsd:integer *
  // shexmi:comment """Provides an index for the member within an ordered array""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
Allows for the identification of the BusinessProcess specifically as a member and optionally provides an index for the member within an ordered array."""^^mark:

ddi:CategoryPosition CLOSED {
  ddi:categoryPosition_indexes_Category @ddi:Category *;
  ddi:categoryPosition_has_CategorySet @ddi:CategorySet *;
  ddi:value xsd:integer *
  // shexmi:comment """Index value of member in an ordered array""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
Member Indicator for use when the member type is restricted to Category."""^^mark:

ddi:CategoryRelationship CLOSED {
  ddi:categoryRelationship_source_Category @ddi:Category *;
  ddi:categoryRelationship_target_Category @ddi:Category *;
  ddi:categoryRelationship_has_CategoryRelationStructure CLOSED EXTENDS @ddi:Identifiable {
    ddi:name @ddi:ObjectName *;
    ddi:categoryRelationStructure_structures_CategorySet @ddi:CategorySet *;
    ddi:purpose @ddi:InternationalStructuredString *;
    ddi:semantics @ddi:ExternalControlledVocabularyEntry *
    // shexmi:comment """Provides semantic context for the relationship""";
    ddi:specification @ddi:SpecificationType *;
    ddi:topology @ddi:TopologyType *;
    ddi:totality @ddi:NewTotalityType *
    // shexmi:comment """Type of relation in terms of totality with respect to an associated collection.""";
  } *;
  ddi:semantics @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """Provides semantic context for the relationship""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
Source target relationship between categories in a classification relation structure"""^^mark:

ddi:CategoryStatistic CLOSED {
  ddi:categoryValue @ddi:ValueString *
  // shexmi:comment """Value of the category to which the statistics apply""";
  ddi:filterValue @ddi:ValueString *
  // shexmi:comment """The value of the filter variable to which the category statistic is restricted""";
  ddi:hasStatistic @ddi:Statistic *
  // shexmi:comment """The value of the identified type of statistic for the category. May be repeated to provide unweighted or weighted values and different computation bases.""";
  ddi:categoryStatistic_forCodeItem_Designation CLOSED EXTENDS @ddi:Identifiable {
  } *;
  ddi:typeOfCategoryStatistic @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """Type of category statistic. Supports the use of an external controlled vocabulary. DDI strongly recommends the use of a controlled vocabulary.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
Statistics related to a specific category of an InstanceVariable within a data set.

Examples
==========


Explanatory notes
===================


Synonyms
==========


DDI 3.2 mapping
=================
pi:CategoryStatisticType"""^^mark:

ddi:CommandCode CLOSED {
  ddi:description @ddi:InternationalStructuredString *
  // shexmi:comment """A description of the purpose and use of the command code provided. Supports multiple languages.""";
  ddi:usesCommand CLOSED {
    ddi:commandContent xsd:string *
    // shexmi:comment """Content of the command itself expressed in the language designated in Programming Language.""";
    ddi:programLanguage @ddi:ExternalControlledVocabularyEntry *
    // shexmi:comment """Designates the programming language used for the command. Supports the use of a controlled vocabulary.""";
  } *
  // shexmi:comment """This is an in-line provision of the command itself. It provides the programming language used as well as the command.""";
  ddi:usesCommandFile CLOSED {
    ddi:location @ddi:InternationalString *
    // shexmi:comment """A description of the location of the file. This may not be machine actionable. It supports a description expressed in multiple languages.""";
    ddi:programLanguage @ddi:ExternalControlledVocabularyEntry *
    // shexmi:comment """Designates the programming language used for the command. Supports the use of a controlled vocabulary.""";
    ddi:uri @ddi:anyURI *
    // shexmi:comment """The URL or URN of the command file.""";
  } *
  // shexmi:comment """Identifies and provides a link to an external copy of the command, for example, a SAS Command Code script. Designates the programming language of the command file as well as the URI for the file.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
Contains information on the command used for processing data. Contains a description of the command which should clarify for the user the purpose and process of the command, an in-line provision of the command itself, and a reference to an external version of the command such as a coding script. 

Examples
==========


Explanatory notes
===================


Synonyms
==========


DDI 3.2 mapping
=================
r:CommandCodeType"""^^mark:

ddi:ConceptRelationship CLOSED {
  ddi:conceptRelationship_TODOrelatesTo_ConceptStructure CLOSED EXTENDS @ddi:Identifiable {
    ddi:name @ddi:ObjectName *;
    ddi:conceptStructure_structures_ConceptSystem @ddi:ConceptSystem *;
    ddi:purpose @ddi:InternationalStructuredString *;
    ddi:semantics @ddi:ExternalControlledVocabularyEntry *
    // shexmi:comment """Provides semantic context for the relationship""";
    ddi:specification @ddi:SpecificationType *;
    ddi:topology @ddi:TopologyType *;
    ddi:totality @ddi:NewTotalityType *
    // shexmi:comment """Type of relation in terms of totality with respect to an associated collection.""";
  } *;
  ddi:conceptRelationship_hasSource_Concept @ddi:Concept *;
  ddi:conceptRelationship_hasTarget_Concept @ddi:Concept *;
  ddi:semantics @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """Provides semantic context for the relationship""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
Specifies the relationship between concepts in a collection of concepts. Use controlled vocabulary provided in hasRelationSpecification to identify the type of relationship (e.g. ParentChild, WholePart, etc.)"""^^mark:

ddi:ContactInformation CLOSED {
  ddi:electronicMessaging CLOSED {
    ddi:contactAddress xsd:string *
    // shexmi:comment """Account identification for contacting""";
    ddi:effectiveDates @ddi:DateRange *
    // shexmi:comment """Time period during which the account is valid.""";
    ddi:isPreferred xsd:boolean *
    // shexmi:comment """Set to \"true\" if this is the preferred address.""";
    ddi:privacy @ddi:ExternalControlledVocabularyEntry *
    // shexmi:comment """Specify the level privacy for the address as public, restricted, or private. Supports the use of an external controlled vocabulary.""";
    ddi:typeOfService @ddi:ExternalControlledVocabularyEntry *
    // shexmi:comment """Indicates the type of service used. Supports the use of a controlled vocabulary.""";
  } *
  // shexmi:comment """Electronic messaging other than email""";
  ddi:hasAddress CLOSED {
    ddi:cityPlaceLocal xsd:string *
    // shexmi:comment """City, place, or local area used as part of an address.""";
    ddi:countryCode @ddi:ExternalControlledVocabularyEntry *
    // shexmi:comment """Country of the location""";
    ddi:effectiveDates @ddi:DateRange *
    // shexmi:comment """Clarifies when the identification information is accurate.""";
    ddi:geographicPoint @ddi:SpatialPoint *
    // shexmi:comment """Geographic coordinates corresponding to the address.""";
    ddi:isPreferred xsd:boolean *
    // shexmi:comment """Set to \"true\" if this is the preferred location for contacting the organization or individual.""";
    ddi:line xsd:string *
    // shexmi:comment """Number and street including office or suite number. May use multiple lines.""";
    ddi:locationName @ddi:ObjectName *
    // shexmi:comment """Name of the location if applicable.""";
    ddi:postalCode xsd:string *
    // shexmi:comment """Postal or ZIP Code""";
    ddi:privacy @ddi:ExternalControlledVocabularyEntry *
    // shexmi:comment """Specify the level privacy for the address as public, restricted, or private. Supports the use of an external controlled vocabulary""";
    ddi:regionalCoverage @ddi:ExternalControlledVocabularyEntry *
    // shexmi:comment """The region covered by the agent at this address""";
    ddi:stateProvince xsd:string *
    // shexmi:comment """A major subnational division such as a state or province used to identify a major region within an address.""";
    ddi:timeZone @ddi:ExternalControlledVocabularyEntry *
    // shexmi:comment """Time zone of the location expressed as code.""";
    ddi:typeOfAddress @ddi:ExternalControlledVocabularyEntry *
    // shexmi:comment """Indicates address type (i.e. home, office, mailing, etc.)""";
    ddi:typeOfLocation @ddi:ExternalControlledVocabularyEntry *
    // shexmi:comment """The type or purpose of the location (i.e. regional office, distribution center, home)""";
  } *
  // shexmi:comment """The address for contact.""";
  ddi:hasEmail CLOSED {
    ddi:effectiveDates @ddi:DateRange *
    // shexmi:comment """Time period for which the e-mail address is valid.""";
    ddi:internetEmail xsd:string *
    // shexmi:comment """The email address expressed as a string (should follow the Internet format specification - RFC 5322) e.g. user@server.ext, more complex and flexible examples are also supported by the format.""";
    ddi:isPreferred xsd:boolean *
    // shexmi:comment """Set to true if this is the preferred email""";
    ddi:privacy @ddi:ExternalControlledVocabularyEntry *
    // shexmi:comment """Indicates the level of privacy""";
    ddi:typeOfEmail @ddi:ExternalControlledVocabularyEntry *
    // shexmi:comment """Code indicating the type of e-mail address. Supports the use of an external controlled vocabulary. (e.g. home, office)""";
  } *
  // shexmi:comment """Email contact information""";
  ddi:hasTelephone CLOSED {
    ddi:effectiveDates @ddi:DateRange *
    // shexmi:comment """Time period during which the telephone number is valid.""";
    ddi:isPreferred xsd:boolean *
    // shexmi:comment """Set to \"true\" if this is the preferred telephone number for contact.""";
    ddi:privacy @ddi:ExternalControlledVocabularyEntry *
    // shexmi:comment """Specify the level privacy for the telephone number as public, restricted, or private. Supports the use of an external controlled vocabulary.""";
    ddi:telephoneNumber xsd:string *
    // shexmi:comment """The telephone number including country code if appropriate.""";
    ddi:typeOfTelephone @ddi:ExternalControlledVocabularyEntry *
    // shexmi:comment """Indicates type of telephone number provided (home, fax, office, cell, etc.). Supports the use of a controlled vocabulary.""";
  } *
  // shexmi:comment """Telephone for contact""";
  ddi:website CLOSED {
    ddi:effectiveDates @ddi:DateRange *
    // shexmi:comment """The period for which this URL is valid.""";
    ddi:isPreferred xsd:boolean *
    // shexmi:comment """Set to \"true\" if this is the preferred URL.""";
    ddi:privacy @ddi:ExternalControlledVocabularyEntry *
    // shexmi:comment """Indicates the privacy level of this URL""";
    ddi:typeOfWebsite @ddi:ExternalControlledVocabularyEntry *
    // shexmi:comment """The type of URL for example personal, project, organization, division, etc.""";
    ddi:uri @ddi:anyURI *
    // shexmi:comment """Normally a URL""";
  } *
  // shexmi:comment """The URL of the Agent's website""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
Contact information for the individual or organization including location specification, address, web site, phone numbers, and other means of communication access. Address, location, telephone, and other means of communication can be repeated to express multiple means of a single type or change over time. Each major piece of contact information contains the element EffectiveDates in order to date stamp the period for which the information is valid.

Examples
==========


Explanatory notes
===================


Synonyms
==========


DDI 3.2 mapping
=================
a:ContactInformationType"""^^mark:

ddi:CorrespondenceType CLOSED {
  ddi:commonality @ddi:InternationalStructuredString *
  // shexmi:comment """A description of the common features of the two items using a StructuredString to support multiple language versions of the same content as well as optional formatting of the content.""";
  ddi:commonalityTypeCode @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """Commonality expressed as a term or code. Supports the use of an external controlled vocabulary. If repeated, clarify each external controlled vocabulary used.""";
  ddi:difference @ddi:InternationalStructuredString *
  // shexmi:comment """A description of the differences between the two items using a StructuredString to support multiple language versions of the same content as well as optional formatting of the content.""";
  ddi:mappingRelation @ddi:MappingType *
  // shexmi:comment """Allows specification of exact match, close match, or disjoint. These relationships can be further defined by describing commonalities or differences or providing additional controlled vocabulary description of relationship.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
Describes the commonalities and differences between two members using a textual description of both commonalities and differences plus an optional coding of the type of commonality.

Examples
==========


Explanatory notes
===================


Synonyms
==========


DDI 3.2 mapping
=================
cm:CorrespondenceType"""^^mark:

ddi:CustomItemIndicator CLOSED {
  ddi:index xsd:integer *
  // shexmi:comment """Index value of member in an ordered array""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
Member Indicator for use with member type CustomItem"""^^mark:

ddi:CustomItemRelation CLOSED {
  ddi:hasRelationSpecification @ddi:RelationSpecification *
  // shexmi:comment """The type of relationship between the two CustomItems. The verb in the sentence describing the relationship between the source (subject) and the target (object).""";
  ddi:semantic @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """Provides semantic context for the relationship""";
  ddi:totality @ddi:TotalityType *
  // shexmi:comment """Type of relation in terms of totality with respect to an associated collection.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
Defines a relationship between CustomItems ."""^^mark:

ddi:CustomValueIndicator CLOSED {
  ddi:index xsd:integer *
  // shexmi:comment """Index value of member in an ordered array""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
Member Indicator for use with member type CustomValue"""^^mark:

ddi:DataPointIndicator CLOSED {
  ddi:index xsd:integer *
  // shexmi:comment """Index value of member in an ordered array""";
  ddi:dataPointIndicator_member_DataPoint @ddi:DataPoint *;
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
Member Indicator for use with member type DataPoint"""^^mark:

ddi:DataStoreIndicator CLOSED {
  ddi:index xsd:integer *
  // shexmi:comment """Index value of member in an ordered array""";
  ddi:dataStoreIndicator_member_DataStore @ddi:DataStore *;
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
Member Indicator for use with member type DataStore"""^^mark:

ddi:DataStoreRelation CLOSED {
  ddi:hasRelationSpecification @ddi:RelationSpecification *
  // shexmi:comment """Provides information on reflexivity, transitivity, and symmetry of relationship using a descriptive term from an enumeration list""";
  ddi:dataStoreRelation_target_DataStore @ddi:DataStore *;
  ddi:dataStoreRelation_source_DataStore @ddi:DataStore *;
  ddi:semantic @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """Provides semantic context for the relationship""";
  ddi:totality @ddi:TotalityType *
  // shexmi:comment """Type of relation in terms of totality with respect to an associated collection.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
Defines the complex relationship between 2 or more DataStores in a DataLibrary"""^^mark:

ddi:Date CLOSED {
  ddi:isoDate @ddi:IsoDateType *
  // shexmi:comment """Strongly recommend that ALL dates be expressed in an ISO format at a minimum. A single point in time expressed in an ISO standard structure. Note that while it supports an ISO date range structure this should be used in Date only when the single date is unclear i.e. occurring at some time between two dates.""";
  ddi:nonIsoDate CLOSED {
    ddi:calendar @ddi:ExternalControlledVocabularyEntry *
    // shexmi:comment """Specifies the type of calendar used (e.g., Gregorian, Julian, Jewish).""";
    ddi:dateContent xsd:string *
    // shexmi:comment """This is the date expressed in a non-ISO compliant structure. Primarily used to retain legacy content or to express non-Gregorian calender dates.""";
    ddi:nonIsoDateFormat @ddi:ExternalControlledVocabularyEntry *
    // shexmi:comment """Indicate the structure of the date provided in NonISODate. For example if the NonISODate contained 4/1/2000 the Historical Date Format would be mm/dd/yyyy. The use of a controlled vocabulary is strongly recommended to support interoperability.""";
  } *
  // shexmi:comment """A simple date expressed in a non-ISO date format, including a specification of the date format and calendar used.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
Provides the structure of a single Date expressed in an ISO date structure along with equivalent expression in any number of non-ISO formats. While it supports the use of the ISO time interval structure this should only be used when the exact date is unclear (i.e. occurring at some point in time between the two specified dates) or in specified applications. Ranges with specified start and end dates should use the DateRange as a datatype. Commonly uses property names include: eventDate, issueDate, and releaseDate.

Examples
==========


Explanatory notes
===================
Date allows one of a set of date-time (YYYY-MM-DDThh:mm:ss), date (YYYY-MM-DD), year-month (YYYY-MM), year (YYYY), time (hh:mm:ss) and duration (PnYnMnDnHnMnS), or time interval (YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss, YYYY-MM-DDThh:mm:ss/PnYnMnDnHnMnS, PnYnMnDnHnMnS/ YYYY-MM-DDThh:mm:ss) which is formatted according to ISO 8601 and backed supported by regular expressions in the BaseDateType. Time Zone designation and negative/positive prefixes are allowed as are dates before and after 0000 through 9999.

Synonyms
==========


DDI 3.2 mapping
=================
r:DateType"""^^mark:

ddi:DateRange CLOSED {
  ddi:endDate @ddi:Date *
  // shexmi:comment """The date (time) designating the end of the period or range.""";
  ddi:startDate @ddi:Date *
  // shexmi:comment """The date (time) designating the beginning of the period or range.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
Expresses a date/time range using a start date and end date (both with the structure of Date and supporting the use of ISO and non-ISO date structures). Use in all locations where a range of dates is required, i.e. validFor, embargoPeriod, collectionPeriod, etc.

Examples
==========


Explanatory notes
===================


Synonyms
==========


DDI 3.2 mapping
=================
r:DateType"""^^mark:

ddi:DoubleNumberRangeValue CLOSED {
  ddi:doubleValue xsd:double *
  // shexmi:comment """The bounding value expressed as an xs:double""";
  ddi:isInclusive xsd:boolean *
  // shexmi:comment """Indicates that the value is included in the range. Set to false if the range includes numbers up to but no including the designated value.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
Describes a bounding value for a number range expressed as an xs:double.

Examples
==========


Explanatory notes
===================


Synonyms
==========


DDI 3.2 mapping
=================
r:DoubleNumberRangeValueType"""^^mark:

ddi:DynamicText CLOSED {
  ddi:audienceLanguage @ddi:language *
  // shexmi:comment """Specifies the language of the intended audience. This is particularly important for clarifying the primary language of a mixed language textual string, for example when language testing and using a foreign word withing the question text. Supports the inclusion of multiple languages.""";
  ddi:isStructureRequired xsd:boolean *
  // shexmi:comment """If textual structure (e.g. size, color, font, etc.) is required to understand the meaning of the content change value to \"true\".""";
  ddi:textContent CLOSED {
    ddi:orderPosition xsd:integer *
    // shexmi:comment """Provides the relative order of TextContent objects in a dynamic text with more than one TextContent object. Uses integer value.""";
    ddi:purpose @ddi:InternationalStructuredString *
    // shexmi:comment """Explanation of the intent of some decision or object. Supports the use of multiple languages and structured tex""";
  } *
  // shexmi:comment """This is the head of a substitution group and is never used directly as an element name. Instead it is replaced with either LiteralText or ConditionalText.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
Structure supporting the use of dynamic text, where portions of the textual content change depending on external information (pre-loaded data, response to an earlier query, environmental situations, etc.). 

Examples
==========
Purpose: Provide customized number of hours within a question text
Input is the OutputParameter from Question \"What time did you take this medication?\"
Literal Text: \"During the past \" [0]
Conditional Text / Command: PastTime=Input; Round PastTime to nearest hour; Round CurrentTime to nearest hour; CurrentTime - PastTime = HOURS; content=HOURS [1]
Literal Text: \" hours which of the following symptoms have you experienced?\" [2]

Result in question text for a PastTime= 06:10; CurrentTime=14:54
\"During the past 9 hours which of the following symptoms have you experienced?\"

Explanatory notes
===================


Synonyms
==========


DDI 3.2 mapping
=================
d:DynamicTextType"""^^mark:

ddi:ElseIfAction CLOSED {
  ddi:condition @ddi:CommandCode *
  // shexmi:comment """The condition to verify if the parent IfThenElse condition is false.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
An additional condition and resulting step to take if the condition in the parent IfThenElse is false. It cannot exist without a parent IfThenElse."""^^mark:

ddi:ExternalControlledVocabularyEntry CLOSED {
  ddi:content xsd:string *
  // shexmi:comment """The value of the entry of the controlled vocabulary. If no controlled vocabulary is used the term is entered here and none of the properties defining the controlled vocabulary location are used.""";
  ddi:controlledVocabularyAgencyName xsd:string *
  // shexmi:comment """The name of the agency maintaining the code list.""";
  ddi:controlledVocabularyID xsd:string *
  // shexmi:comment """The ID of the code list (controlled vocabulary) that the content was taken from.""";
  ddi:controlledVocabularyName xsd:string *
  // shexmi:comment """The name of the code list.""";
  ddi:controlledVocabularyVersionID xsd:string *
  // shexmi:comment """The version number of the code list (default is 1.0).""";
  ddi:language @ddi:language *
  // shexmi:comment """Language of the content value if applicable""";
  ddi:otherValue xsd:string *
  // shexmi:comment """If the value of the string is \"Other\" or the equivalent from the codelist, this attribute can provide a more specific value not found in the codelist.""";
  ddi:uri @ddi:anyURI *
  // shexmi:comment """The URN or URL of the controlled vocabulary""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
Allows for unstructured content which may be an entry from an externally maintained controlled vocabulary.If the content is from a controlled vocabulary provide the code value of the entry, as well as a reference to the controlled vocabulary from which the value is taken. Provide as many of the identifying attributes as needed to adequately identify the controlled vocabulary. Note that DDI has published a number of controlled vocabularies applicable to several locations using the ExternalControlledVocabularyEntry structure. If the code portion of the controlled vocabulary entry is language specific (i.e. a list of keywords or subject headings) use language to specify that language. In most cases the code portion of an entry is not language specific although the description and usage may be managed in one or more languages. Use of shared controlled vocabularies helps support interoperability and machine actionability.

Examples
==========


Explanatory notes
===================


Synonyms
==========


DDI 3.2 mapping
=================
r:CodeValueType"""^^mark:

ddi:Form CLOSED {
  ddi:formNumber xsd:string *
  // shexmi:comment """The number or other means of identifying the form.""";
  ddi:isRequired xsd:boolean *
  // shexmi:comment """Set to \"true\" if the form is required. Set to \"false\" if the form is optional.""";
  ddi:statement @ddi:InternationalString *
  // shexmi:comment """A statement regarding the use, coverage, and purpose of the form.""";
  ddi:uri @ddi:anyURI *
  // shexmi:comment """The URN or URL of the form.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
A link to a form used by the metadata containing the form number, a statement regarding the contents of the form, a statement as to the mandatory nature of the form and a privacy level designation.

Examples
==========


Explanatory notes
===================


Synonyms
==========


DDI 3.2 mapping
=================
a:FormType"""^^mark:

ddi:GeographicUnitIndicator CLOSED {
  ddi:index xsd:integer *
  // shexmi:comment """Index number expressed as an integer. The position of the member in an ordered array. Optional for unordered Collections.""";
  ddi:isInLevel xsd:integer *
  // shexmi:comment """Indicates the level within which the CodeItem resides""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
Provides ability to declare an optional sequence or index order to a Geographic Unit"""^^mark:

ddi:GeographicUnitRelation CLOSED {
  ddi:hasRelationSpecification @ddi:RelationSpecification *
  // shexmi:comment """Provides information on reflexivity, transitivity, and symmetry of relationship using a descriptive term from an enumeration list""";
  ddi:hasSpatialRelationSpecification @ddi:SpatialRelationSpecification *
  // shexmi:comment """Provides information on the spatial relationship between the parent and child.""";
  ddi:semantic @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """Provide a semantic that provides a context for the relationship using and External Controlled Vocabulary""";
  ddi:totality @ddi:TotalityType *
  // shexmi:comment """Type of relation in terms of its totality using an enumeration list.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
Describes structured relationship between Geographic Units.

Examples
==========


Explanatory notes
===================
A member might have a ParentChild relation to several other members which is Anti-Reflexive, Anti-Symmetric, and Anti-Transitive. For a process this might have a semantic of \"immediately follows\"."""^^mark:

ddi:GeographicUnitTypeIndicator CLOSED {
  ddi:index xsd:integer *
  // shexmi:comment """Index number expressed as an integer. The position of the member in an ordered array. Optional for unordered Collections.""";
  ddi:isInLevel xsd:integer *
  // shexmi:comment """Indicates the level within which the CodeItem resides""";
  ddi:geographicUnitTypeIndicator_member_UnitType @ddi:UnitType *;
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
Provides ability to declare an optional sequence or index order to a Unit Type describing a Geographic Unit Type. Extended to support membership in a specific level."""^^mark:

ddi:GeographicUnitTypeRelation CLOSED {
  ddi:hasRelationSpecification @ddi:RelationSpecification *
  // shexmi:comment """Provides information on reflexivity, transitivity, and symmetry of relationship using a descriptive term from an enumeration list""";
  ddi:hasSpatialRelationSpecification @ddi:SpatialRelationSpecification *
  // shexmi:comment """Provides information on the spatial relationship between the parent and child.""";
  ddi:isExhaustiveCoverage xsd:boolean *
  // shexmi:comment """An aggregation of the units of the child Unit Type will result in exhaustive coverage of the parent Unit Type""";
  ddi:geographicUnitTypeRelation_source_UnitType @ddi:UnitType *;
  ddi:geographicUnitTypeRelation_target_UnitType @ddi:UnitType *;
  ddi:semantic @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """Provide a semantic that provides a context for the relationship using and External Controlled Vocabulary""";
  ddi:totality @ddi:TotalityType *
  // shexmi:comment """Type of relation in terms of its totality using an enumeration list.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
Describes structured relationship between Unit Types used to define Geographic Unit Types. Extended to include the ability to define a Spatial Relationship using a controlled vocabulary.

Examples
==========


Explanatory notes
===================
A member might have a ParentChild relation to several other members which is Anti-Reflexive, Anti-Symmetric, and Anti-Transitive. For a process this might have a semantic of \"immediately follows\"."""^^mark:

ddi:Image CLOSED {
  ddi:dpi xsd:integer *
  // shexmi:comment """Provides the resolution of the image in dots per inch to assist in selecting the appropriate image for various uses.""";
  ddi:languageOfImage @ddi:language *
  // shexmi:comment """Language of image. Supports the indication of multiple languages. Supports use of codes defined by the RFC 1766.""";
  ddi:typeOfImage @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """Brief description of the image type. Supports the use of an external controlled vocabulary.""";
  ddi:uri @ddi:anyURI *
  // shexmi:comment """A reference to the location of the image using a URI.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
A reference to an image, with a description of its properties and type.

Examples
==========


Explanatory notes
===================


Synonyms
==========


DDI 3.2 mapping
=================
r:ImageType"""^^mark:

ddi:InternationalIdentifier CLOSED {
  ddi:identifierContent xsd:string *
  // shexmi:comment """An identifier as it should be listed for identification purposes.""";
  ddi:isURI xsd:boolean *
  // shexmi:comment """Set to \"true\" if Identifier is a URI""";
  ddi:managingAgency @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """The identification of the Agency which assigns and manages the identifier, i.e., ISBN, ISSN, DOI, etc.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
An identifier whose scope of uniqueness is broader than the local archive. Common forms of an international identifier are ISBN, ISSN, DOI or similar designator. Provides both the value of the identifier and the agency who manages it.

Examples
==========


Explanatory notes
===================
For use in Annotation or other citation format. 

Synonyms
==========


DDI 3.2 mapping
=================
r:InternationalIdentifierType"""^^mark:

ddi:InternationalString CLOSED {
  ddi:languageSpecificString @ddi:LanguageSpecificStringType *
  // shexmi:comment """A non-formatted string of text with an attribute that designates the language of the text. Repeat this object to express the same content in another language.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
Packaging structure for multiple language versions of the same string content. Where an element of this type is repeatable, the expectation is that each repetition contains different content, each of which can be expressed in multiple languages. The language designation goes on the individual String.

Examples
==========


Explanatory notes
===================


Synonyms
==========


DDI 3.2 mapping
=================
r:InternationalStringType"""^^mark:

ddi:InternationalStructuredString CLOSED {
  ddi:languageSpecificStructuredString CLOSED EXTENDS @ddi:LanguageSpecificStringType {
    ddi:isPlainText xsd:boolean *
    // shexmi:comment """Indicates that the content is to be treated as plain text (no formatting). You may use DDIProfile to fix the value of this attribute to 'true' in cases where you wish to indicate that your system treats all content should be treated as plain text.""";
    ddi:otherDefined xsd:string *
    // shexmi:comment """If the value of structureUsed is Other enter the structue type.""";
    ddi:structureUsed @ddi:StringStructureType *
    // shexmi:comment """Uses a enumerated value to specify the structuring elements used.""";
  } *
  // shexmi:comment """Supports the optional use of XHTML formatting tags within the string structure. In addition to the language designation and information regarding translation, the attribute isPlain can be set to true to indicate that the content should be treated as plain unstructured text, including any XHTML formatting tags. Repeat the content element to provide multiple language versions of the same content.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
Packaging structure for multiple language versions of the same string content, for objects that allow for internal formatting using XHTML tags. Where an element of this type is repeatable, the expectation is that each repetition contains different content, each of which can be expressed in multiple languages.

Examples
==========


Explanatory notes
===================


Synonyms
==========


DDI 3.2 mapping
=================
r:StructuredStringType"""^^mark:

ddi:LabelForDisplay CLOSED EXTENDS @ddi:InternationalStructuredString {
  ddi:locationVariant @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """Indicate the locality specification for content that is specific to a geographic area. May be a country code, sub-country code, or area name.""";
  ddi:maxLength xsd:integer *
  // shexmi:comment """A positive integer indicating the maximum number of characters in the label.""";
  ddi:validDates @ddi:DateRange *
  // shexmi:comment """Allows for the specification of a starting date and ending date for the period that this label is valid.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
A structured display label. Label provides display content of a fully human readable display for the identification of the object. 

Examples
==========


Explanatory notes
===================


Synonyms
==========


DDI 3.2 mapping
=================
r:LabelType"""^^mark:

ddi:LanguageSpecificStringType CLOSED {
  ddi:content xsd:string *
  // shexmi:comment """Value of this string""";
  ddi:isTranslatable xsd:boolean *
  // shexmi:comment """Indicates whether content is translatable (true) or not (false). An example of something that is not translatable would be a MNEMONIC of an object or a number.""";
  ddi:isTranslated xsd:boolean *
  // shexmi:comment """Indicates whether content is a translation (true) or an original (false).""";
  ddi:language @ddi:language *
  // shexmi:comment """Indicates the language of content. Note that language allows for a simple 2 or 3 character language code or a language code extended by a country code , for example en-au for English as used in Australia.""";
  ddi:scope xsd:string *
  // shexmi:comment """Supports specification of scope for the contained content. Use with the language specification to filter application of content.""";
  ddi:translationDate xsd:double *
  // shexmi:comment """The date the content was translated. Provision of translation date allows user to verify if translation was available during data collection or other time linked activity.""";
  ddi:translationSourceLanguage @ddi:language *
  // shexmi:comment """List the language code of the source. Repeat of multiple language sources are used.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
Allows for non-formatted language specific strings that may be translations from other languages, or that may be translatable into other languages. Only one string per language/scope type is allowed. LanguageSpecificString contains the following attributes, xmlang to designate the language, isTranslated with a default value of false to designate if an object is a translation of another language, isTranslatable with a default value of true to designate if the content can be translated, translationSourceLanguage to indicate the source languages used in creating this translation,  translationDate, and scope which can be used to define intended audience or use such as internal, external, etc.

Examples
==========


Explanatory notes
===================


Synonyms
==========


DDI 3.2 mapping
=================
r:StringType"""^^mark:

ddi:LocationName CLOSED EXTENDS @ddi:ObjectName {
  ddi:effectiveDates @ddi:DateRange *
  // shexmi:comment """The time period for which this name is accurate and in use.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
Name of the location using the DDI Name structure and the ability to add an effective date.

Examples
==========


Explanatory notes
===================


Synonyms
==========


DDI 3.2 mapping
=================
a:LocationNameType"""^^mark:

ddi:NumberRange CLOSED {
  ddi:displayLabel @ddi:LabelForDisplay *
  // shexmi:comment """A display label for the number range. May be expressed in multiple languages. Repeat for labels with different content, for example, labels with differing length limitations.""";
  ddi:highCode @ddi:NumberRangeValue *
  // shexmi:comment """High or top value on the range expressed as an xs:decimal within an isInclusive Boolean flag.""";
  ddi:highCodeDouble @ddi:DoubleNumberRangeValue *
  // shexmi:comment """High or top value on the range expressed as an xs:double within an isInclusive Boolean flag.""";
  ddi:isBottomCoded xsd:boolean *
  // shexmi:comment """Default value is False. The Low or bottom code represents the value expressed and anything lower.""";
  ddi:isTopCoded xsd:boolean *
  // shexmi:comment """Default value is False. The High or top code represents the value expressed and anything higher.""";
  ddi:lowCode @ddi:NumberRangeValue *
  // shexmi:comment """High or top value on the range expressed as an xs:decimal within an isInclusive Boolean flag.""";
  ddi:lowCodeDouble @ddi:DoubleNumberRangeValue *
  // shexmi:comment """Low or bottom value on the range expressed as an xs:double within an isInclusive Boolean flag.""";
  ddi:regExp xsd:string *
  // shexmi:comment """Regular expression defining the allowed syntax of the number.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
Structures a numeric range. Low and High values are designated. The structure identifies Low values that should be treated as bottom coded (Stated value and bellow, High values that should be treated as top coded (stated value and higher), and provides a regular expression to further define the valid content of the range.

Examples
==========


Explanatory notes
===================


Synonyms
==========


DDI 3.2 mapping
=================
r:NumberRangeType"""^^mark:

ddi:NumberRangeValue CLOSED {
  ddi:decimalValue xsd:double *
  // shexmi:comment """Bounding value expressed as an xs:double""";
  ddi:isInclusive xsd:boolean *
  // shexmi:comment """Indicates that the value is included in the range. Set to false if the range includes numbers up to but no including the designated value.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
Describes a bounding value for a number range expressed as an xs:demical.

Examples
==========


Explanatory notes
===================


Synonyms
==========


DDI 3.2 mapping
=================
r:NumberRangeValueType"""^^mark:

ddi:ObjectName CLOSED {
  ddi:content xsd:string *
  // shexmi:comment """The expressed name of the object.""";
  ddi:context @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """A name may be specific to a particular context, i.e., a type of software, or a section of a registry. Identify the context related to the specified name.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
A standard means of expressing a Name for a class object.  A linguistic signifier. Human understandable name (word, phrase, or mnemonic) that reflects the ISO/IEC 11179-5 naming principles.

Examples
==========


Explanatory notes
===================
USE in Model: In general the property name should be \"name\" as it is the name of the class object which contains it. Use a specific name (i.e. xxxName) only when naming something other than the class object which contains it.

Synonyms
==========


DDI 3.2 mapping
=================
r:NameType"""^^mark:

ddi:OrganizationName CLOSED EXTENDS @ddi:ObjectName {
  ddi:abbreviation @ddi:InternationalString *
  // shexmi:comment """An abbreviation or acronym for the name. This may be expressed in multiple languages. It is assumed that if only a single language is provided that it may be used in any of the other languages within which the name itself is expressed.""";
  ddi:effectiveDates @ddi:DateRange *
  // shexmi:comment """The time period for which this name is accurate and in use.""";
  ddi:isFormal xsd:boolean *
  // shexmi:comment """The legal or formal name of the organization should have the isFormal attribute set to true. To avoid confusion only one organization name should have the isFormal attribute set to true. Use the TypeOfOrganizationName to further differentiate the type and applied usage when multiple names are provided.""";
  ddi:typeOfOrganizationName @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """The type of organization name provided. the use of a controlled vocabulary is strongly recommended. At minimum this should include, e.g. PreviousFormalName, Nickname (or CommonName), Other.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
Names by which the organization is known. Use the attribute isFormal=\"true\" to designate the legal or formal name of the Organization. The preferred name should be noted with the isPreferred attribute. Names may be typed with TypeOfOrganizationName to indicate their appropriate usage.

Examples
==========


Explanatory notes
===================


Synonyms
==========


DDI 3.2 mapping
=================
a:OrganizationNameType"""^^mark:

ddi:PairedExternalControlledVocabularyEntry CLOSED {
  ddi:extent @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """Describes the extent to which the parent term applies for the specific case using an external controlled vocabulary. When associated with a role from the CASRAI Contributor Roles Taxonomy an appropriate vocabulary should be specified as either ‘lead’, ‘equal’, or ‘supporting’.""";
  ddi:term @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """The term attributed to the parent class, for example the role of a Contributor.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
A tightly bound pair of items from an external controlled vocabulary. The extent property describes the extent to which the parent term applies for the specific case. 

Examples
==========
When used to assign a role to an actor within a specific activity this term would express the degree of contribution. Contributor with Role=Editor and extent=Lead.

Alternatively. the term might be a controlled vocabulary from a list of controlled vocabularies, e.g. the Generic Longitudinal Business Process Model (GLBPM) in a list that could include other business process model frameworks. In this context the extent becomes the name of a business process model task, e.g. \"integrate data\" from the GLBPM."""^^mark:

ddi:Polygon CLOSED {
  ddi:point @ddi:SpatialPoint *
  // shexmi:comment """A geographic point defined by a latitude and longitude. A minimum of 4 points is required as the first and last point should be identical in order to close the polygon. Note that a triangle has three sides and requires 3 unique points plus a fourth point replicating the first point in order to close the polygon.""";
  ddi:polygonLinkCode xsd:string *
  // shexmi:comment """The PolygonLinkCode is the identifier of the specific polygon within the file. For example in an NHGIS file the LinkCodeForPolygon for Tract 101.01 in Hennepin County in Minnesota is 2700530010101.""";
  ddi:shapeFileFormat @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """The format of the shape file existing at the location indicated by the sibling ExternalURI element.""";
  ddi:uri @ddi:anyURI *
  // shexmi:comment """A URI for the boundary file containing the polygon""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
A closed plane figure bounded by three or more line segments, representing a geographic area. Contains either the URI of the file containing the polygon, a specific link code for the shape within the file, and a file format, or a minimum of 4 points to describe the polygon in-line. Note that the first and last point must be identical in order to close the polygon. A triangle has 4 points.

Examples
==========


Explanatory notes
===================


Synonyms
==========


DDI 3.2 mapping
=================
r:PolygonType"""^^mark:

ddi:RangeValue CLOSED EXTENDS @ddi:ValueString {
  ddi:included xsd:boolean *
  // shexmi:comment """Set to \"true\" if the value is included in the range.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
Describes a bounding value of a string.

Examples
==========


Explanatory notes
===================


Synonyms
==========


DDI 3.2 mapping
=================
r:RangeValueType"""^^mark:

ddi:ReferenceDate CLOSED EXTENDS @ddi:AnnotationDate {
  ddi:keyword @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """If the date is for a subset of data only such as a referent date for residence 5 years ago, use keyword to specify the coverage of the data this date applies to. May be repeated to reflect multiple keywords.""";
  ddi:subject @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """If the date is for a subset of data only such as a referent date for residence 5 years ago, use Subject to specify the coverage of the data this date applies to. May be repeated to reflect multiple subjects.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
The date covered by the annotated object. In addition to specifying a type of date (e.g. collection period, census year, etc.) the date or time span may be associated with a particular subject or keyword. This allows for the expression of a referent date associated with specific subjects or keywords. 

Examples
==========
A set of date items on income and labor force status may have a referent date for the year prior to the collection date. To express a duration the preference is for Start and End dates expressing two time points separated by a \"/\". 

Explanatory notes
===================
Note that if needed you may use Start and Duration or Duration and End. These options may not be recognizable by all systems.

Synonyms
==========


DDI 3.2 mapping
=================
r:ReferenceDateType"""^^mark:

ddi:Segment CLOSED {
  ddi:usesAudioSegment CLOSED {
    ddi:audioClipBegin xsd:string *
    // shexmi:comment """The point to begin the audio clip. If no point is provided the assumption is that the start point is the beginning of the clip provided.""";
    ddi:audioClipEnd xsd:string *
    // shexmi:comment """The point to end the audio clip. If no point is provided the assumption is that the end point is the end of the clip provided.""";
    ddi:typeOfAudioClip @ddi:ExternalControlledVocabularyEntry *
    // shexmi:comment """The type of audio clip provided. Supports the use of a controlled vocabulary.""";
  } *
  // shexmi:comment """Describes the type and length of the audio segment.""";
  ddi:usesImageArea CLOSED {
    ddi:content xsd:string *
    // shexmi:comment """A comma-delimited list of x,y coordinates, listed as a set of adjacent points for rectangles and polygons, and as a center-point and a radius for circles (x,y,r).""";
    ddi:shape @ddi:ShapeCoded *
    // shexmi:comment """A fixed set of valid responses includes Rectangle, Circle, and Polygon.""";
  } *
  // shexmi:comment """Defines the shape and area of an image used as part of a location representation. The shape is defined as a Rectangle, Circle, or Polygon and Coordinates provides the information required to define it.""";
  ddi:usesTextualSegment CLOSED {
    ddi:characterParameter CLOSED {
      ddi:characterLength xsd:integer *
      // shexmi:comment """can be used to describe a text segment as start and length""";
      ddi:endCharOffset xsd:integer *
      // shexmi:comment """Number of characters from the beginning of the document, indicating the inclusive end of the text segment.""";
      ddi:startCharOffset xsd:integer *
      // shexmi:comment """Number of characters from beginning of the document, indicating the inclusive start of the text range.""";
    } *
    // shexmi:comment """Specification of the character offset for the beginning and end of the segment.""";
    ddi:lineParamenter CLOSED {
      ddi:endLine xsd:integer *
      // shexmi:comment """Number of lines from beginning of the document.""";
      ddi:endOffset xsd:integer *
      // shexmi:comment """Number of characters from the start of the line specified in EndLine.""";
      ddi:startLine xsd:integer *
      // shexmi:comment """Number of lines from beginning of the document.""";
      ddi:startOffset xsd:integer *
      // shexmi:comment """Number of characters from start of the line specified in StartLine.""";
    } *
    // shexmi:comment """Specification of the line and offset for the beginning and end of the segment.""";
  } *
  // shexmi:comment """Defines the segment of textual content used by the parent object. Can identify a set of lines and or characters used to define the segment""";
  ddi:usesVideoSegment CLOSED {
    ddi:typeOfVideoClip @ddi:ExternalControlledVocabularyEntry *
    // shexmi:comment """The type of video clip provided. Supports the use of a controlled vocabulary.""";
    ddi:videoClipBegin xsd:string *
    // shexmi:comment """The point to begin the video clip. If no point is provided the assumption is that the start point is the beginning of the clip provided.""";
    ddi:videoClipEnd xsd:string *
    // shexmi:comment """The point to end the video clip. If no point is provided the assumption is that the end point is the end of the clip provided.""";
  } *
  // shexmi:comment """Describes the type and length of the video segment.""";
  ddi:xml xsd:string *
  // shexmi:comment """An X-Pointer expression identifying a node in the XML document.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
A structure used to express explicit segments or regions within different types of external materials (Textual, Audio, Video, XML, and Image). Provides the appropriate start, stop, or region definitions for each type.

Examples
==========


Explanatory notes
===================


Synonyms
==========


DDI 3.2 mapping
=================
r:SegmentType"""^^mark:

ddi:SpatialCoordinate CLOSED {
  ddi:content xsd:string *
  // shexmi:comment """The value of the coordinate expressed as a string.""";
  ddi:coordinateType @ddi:PointFormat *
  // shexmi:comment """Identifies the type of point coordinate system using a controlled vocabulary. Point formats include decimal degree, degrees minutes seconds, decimal minutes, meters, and feet.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
Lists the value and format type for the coordinate value. Note that this is a single value (X coordinate or Y coordinate) rather than a coordinate pair.

Examples
==========


Explanatory notes
===================


Synonyms
==========


DDI 3.2 mapping
=================
r:SpatialCoordinateType"""^^mark:

ddi:SpatialLine CLOSED {
  ddi:lineLinkCode xsd:string *
  // shexmi:comment """The lineLinkCode is the identifier of the specific line within the file.""";
  ddi:point @ddi:SpatialPoint *
  // shexmi:comment """A geographic point defined by a latitude and longitude. A minimum of 2 points is required in order to define the line.""";
  ddi:shapeFileFormat @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """The format of the shape file existing at the location indicated by the sibling ExternalURI element.""";
  ddi:uri @ddi:anyURI *
  // shexmi:comment """A URI for the spatial file containing the line""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
Defines a geographic line (minimum of 2 points)

Examples
==========
Street, River"""^^mark:

ddi:SpatialPoint CLOSED {
  ddi:xCoordinate @ddi:SpatialCoordinate *
  // shexmi:comment """An X coordinate (latitudinal equivalent) value and format expressed using the Spatial Coordinate structure.""";
  ddi:yCoordinate @ddi:SpatialCoordinate *
  // shexmi:comment """A Y coordinate (longitudinal equivalent) value and format expressed using the Spatial Coordinate structure.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
A geographic point consisting of an X and Y coordinate. Each coordinate value is expressed separately providing its value and format.

Examples
==========


Explanatory notes
===================


Synonyms
==========


DDI 3.2 mapping
=================
r:PointType"""^^mark:

ddi:SpatialRelationship CLOSED {
  ddi:eventDate @ddi:Date *
  // shexmi:comment """The date of the relationship change.""";
  ddi:hasSpatialObjectPair @ddi:SpatialObjectPairs *
  // shexmi:comment """Provides the types of the two spatial objects.""";
  ddi:hasSpatialRelationSpecification @ddi:SpatialRelationSpecification *
  // shexmi:comment """Defines the relationship of the two spatial objects""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
Used to specify a relationship between one spatial object and another. Includes definition of the spatial object types being related, the spatial relation specification, and the event date."""^^mark:

ddi:Statistic CLOSED {
  ddi:computationBase @ddi:ComputationBaseList *
  // shexmi:comment """Defines the cases included in determining the statistic. The options are total=all cases, valid and missing (invalid); validOnly=Only valid values, missing (invalid) are not included in the calculation; missingOnly=Only missing (invalid) cases included in the calculation.""";
  ddi:content xsd:double *
  // shexmi:comment """The value of the statistic expressed as a decimal, float, or double.""";
  ddi:isWeighted xsd:boolean *
  // shexmi:comment """Set to \"true\" if the statistic is weighted using the weight designated in VariableStatistics.""";
  ddi:typeOfNumericValue xsd:string *
  // shexmi:comment """Indicate the type of numeric value as decimal, float, double""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
The value of the statistic expressed as an xs:decimal and/or xs:double. Indicates whether it is weighted value and the computation base.

Examples
==========


Explanatory notes
===================


Synonyms
==========


DDI 3.2 mapping
=================
pi:StatisticType"""^^mark:

ddi:SummaryStatistic CLOSED {
  ddi:hasStatistic @ddi:Statistic *
  // shexmi:comment """The value of the statistics and whether it is weighted and/or includes missing values. May expressed as xs:decimal and/or xs:double""";
  ddi:typeOfSummaryStatistic @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """Type of summary statistic, such as count, mean, mode, median, etc. Supports the use of an external controlled vocabulary. DDI strongly recommends the use of a controlled vocabulary.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
Describes summary statistics for a variable.

Examples
==========
Mean, standard deviation

Explanatory notes
===================


Synonyms
==========


DDI 3.2 mapping
=================
pi:SummaryStatisticType"""^^mark:

ddi:TypedDescriptiveText CLOSED {
  ddi:descriptiveText @ddi:InternationalStructuredString *
  // shexmi:comment """A short natural language account of the characteristics of the object.""";
  ddi:typeOfContent @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """Uses a controlled vocabulary entry to classify the description provided.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
This Complex Data Type bundles a descriptiveText with an External Controlled Vocabulary Entry allowing structured content and a means of typing that content. For example specifying that the description provides a Table of Contents for a document."""^^mark:

ddi:ValueString CLOSED EXTENDS @ddi:InstanceValue {
  ddi:content xsd:string *
  // shexmi:comment """The actual content of this value as a string""";
  ddi:whiteSpace @ddi:WhiteSpaceRule *
  // shexmi:comment """The usual setting \"collapse\" states that leading and trailing white space will be removed and multiple adjacent white spaces will be treated as a single white space. When setting to \"replace\" all occurrences of #x9 (tab), #xA (line feed) and #xD (carriage return) are replaced with #x20 (space) but leading and trailing spaces will be retained. If the existence of any of these white spaces is critical to the understanding of the content, change the value of this attribute to \"preserve\".""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
The Value expressed as an xs:string with the ability to preserve whitespace if critical to the understanding of the content. 

Examples
==========


Explanatory notes
===================


Synonyms
==========


DDI 3.2 mapping
=================
r:ValueType"""^^mark:

ddi:VocabularyEntryIndicator CLOSED {
  ddi:index xsd:integer *
  // shexmi:comment """Index value of member in an ordered array""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
Member Indicator for use with member type VocabularyEntry"""^^mark:

ddi:VocabularyEntryRelation CLOSED {
  ddi:hasRelationSpecification @ddi:RelationSpecification *
  // shexmi:comment """Provides information on reflexivity, transitivity, and symmetry of relationship using a descriptive term from an enumeration list""";
  ddi:semantic @ddi:ExternalControlledVocabularyEntry *
  // shexmi:comment """Provide a semantic that provides a context for the relationship using and External Controlled Vocabulary""";
  ddi:totality @ddi:TotalityType *
  // shexmi:comment """Type of relation in terms of its totality using an enumeration list.""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
Relation of Vocabulary Entries as defined using RelationSpecification"""^^mark:

ddi:WorkflowStepOrder CLOSED {
  ddi:index xsd:integer *
  // shexmi:comment """Index value of WorkflowStep in an ordered array""";
}
// shexmi:package "http://ddi-alliance.org/ns/#StructuredDataTypes"
// shexmi:comment """Definition
============
Associates an sequence ordering number with any WorflowStep or sub-type,"""^^mark:


# END ddi:StructuredDataTypes Package

# START ddi:XMLSchemaDatatypes Package

ddi:anyURI xsd:string


ddi:language xsd:string



# END ddi:XMLSchemaDatatypes Package



